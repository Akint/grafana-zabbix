{"version":3,"sources":["webpack:///webpack/bootstrap","webpack:///external \"react\"","webpack:///external \"lodash\"","webpack:///../node_modules/prop-types/index.js","webpack:///./datasource-zabbix/utils.js","webpack:///../node_modules/classnames/index.js","webpack:///./datasource-zabbix/constants.js","webpack:///../node_modules/@babel/runtime/helpers/assertThisInitialized.js","webpack:///external \"moment\"","webpack:///../node_modules/@babel/runtime/helpers/defineProperty.js","webpack:///external \"app/core/utils/datemath\"","webpack:///external \"app/plugins/sdk\"","webpack:///../node_modules/@babel/runtime/helpers/extends.js","webpack:///external \"app/core/utils/kbn\"","webpack:///external \"angular\"","webpack:///external \"react-dom\"","webpack:///../node_modules/@babel/runtime/helpers/inheritsLoose.js","webpack:///../node_modules/webpack/buildin/amd-options.js","webpack:///../node_modules/@babel/runtime/helpers/objectWithoutPropertiesLoose.js","webpack:///../node_modules/create-react-context/lib/index.js","webpack:///../node_modules/warning/warning.js","webpack:///../node_modules/react-transition-group/Transition.js","webpack:///../node_modules/prop-types/factoryWithThrowingShims.js","webpack:///../node_modules/prop-types/lib/ReactPropTypesSecret.js","webpack:///../node_modules/create-react-context/lib/implementation.js","webpack:///../node_modules/gud/index.js","webpack:///../node_modules/fbjs/lib/warning.js","webpack:///../node_modules/fbjs/lib/emptyFunction.js","webpack:///../node_modules/react-lifecycles-compat/react-lifecycles-compat.es.js","webpack:///../node_modules/react-transition-group/utils/PropTypes.js","webpack:///./panel-triggers/options_tab.js","webpack:///./panel-triggers/triggers_tab.js","webpack:///./panel-triggers/utils.ts","webpack:///./panel-triggers/migrations.ts","webpack:///../src/utils.js","webpack:///../src/pagination.js","webpack:///../src/defaultProps.js","webpack:///../src/propTypes.js","webpack:///../src/index.js","webpack:///../src/methods.js","webpack:///../src/lifecycle.js","webpack:///./panel-triggers/components/Tooltip/Portal.tsx","webpack:///../../src/utils/debounce.js","webpack:///../../src/utils/isFunction.js","webpack:///../../src/utils/getStyleComputedProperty.js","webpack:///../../src/utils/getParentNode.js","webpack:///../../src/utils/getScrollParent.js","webpack:///../../src/utils/isIE.js","webpack:///../../src/utils/getOffsetParent.js","webpack:///../../src/utils/getRoot.js","webpack:///../../src/utils/findCommonOffsetParent.js","webpack:///../../src/utils/isOffsetContainer.js","webpack:///../../src/utils/getScroll.js","webpack:///../../src/utils/getBordersSize.js","webpack:///../../src/utils/getWindowSizes.js","webpack:///../../src/utils/getClientRect.js","webpack:///../../src/utils/getBoundingClientRect.js","webpack:///../../src/utils/getOffsetRectRelativeToArbitraryNode.js","webpack:///../../src/utils/includeScroll.js","webpack:///../../src/utils/getFixedPositionOffsetParent.js","webpack:///../../src/utils/getBoundaries.js","webpack:///../../src/utils/getViewportOffsetRectRelativeToArtbitraryNode.js","webpack:///../../src/utils/isFixed.js","webpack:///../../src/utils/computeAutoPlacement.js","webpack:///../../src/utils/getReferenceOffsets.js","webpack:///../../src/utils/getOuterSizes.js","webpack:///../../src/utils/getOppositePlacement.js","webpack:///../../src/utils/getPopperOffsets.js","webpack:///../../src/utils/find.js","webpack:///../../src/utils/runModifiers.js","webpack:///../../src/utils/findIndex.js","webpack:///../../src/methods/update.js","webpack:///../../src/utils/isModifierEnabled.js","webpack:///../../src/utils/getSupportedPropertyName.js","webpack:///../../src/methods/destroy.js","webpack:///../../src/utils/getWindow.js","webpack:///../../src/utils/setupEventListeners.js","webpack:///../../src/methods/enableEventListeners.js","webpack:///../../src/methods/disableEventListeners.js","webpack:///../../src/utils/removeEventListeners.js","webpack:///../../src/utils/isNumeric.js","webpack:///../../src/utils/setStyles.js","webpack:///../../src/utils/isModifierRequired.js","webpack:///../../src/utils/clockwise.js","webpack:///../../src/modifiers/flip.js","webpack:///../../src/modifiers/offset.js","webpack:///../../src/modifiers/shift.js","webpack:///../../src/modifiers/preventOverflow.js","webpack:///../../src/modifiers/keepTogether.js","webpack:///../../src/modifiers/arrow.js","webpack:///../../src/utils/getOppositeVariation.js","webpack:///../../src/modifiers/inner.js","webpack:///../../src/modifiers/hide.js","webpack:///../../src/modifiers/computeStyle.js","webpack:///../../src/utils/getRoundedOffsets.js","webpack:///../../src/utils/setAttributes.js","webpack:///../../src/modifiers/applyStyle.js","webpack:///../../src/index.js","webpack:///../node_modules/react-popper/lib/esm/Manager.js","webpack:///../node_modules/react-popper/lib/esm/utils.js","webpack:///../node_modules/react-popper/lib/esm/Popper.js","webpack:///../node_modules/react-popper/lib/esm/Reference.js","webpack:///./panel-triggers/components/Tooltip/Popper.tsx","webpack:///./panel-triggers/components/Tooltip/withPopper.tsx","webpack:///./panel-triggers/components/Tooltip/Tooltip.tsx","webpack:///./panel-triggers/components/EventTag.tsx","webpack:///./panel-triggers/components/Modal.tsx","webpack:///./panel-triggers/components/FAIcon.tsx","webpack:///./panel-triggers/components/Problems/ProblemStatusBar.tsx","webpack:///./panel-triggers/components/Problems/AcknowledgesList.tsx","webpack:///./panel-triggers/components/Problems/ProblemTimeline.tsx","webpack:///./panel-triggers/components/Problems/ProblemDetails.tsx","webpack:///./panel-triggers/components/GFHeartIcon.tsx","webpack:///./panel-triggers/components/Problems/Problems.tsx","webpack:///./panel-triggers/components/AlertList/AlertAcknowledges.tsx","webpack:///./panel-triggers/components/AlertList/AlertIcon.tsx","webpack:///./panel-triggers/components/AlertList/AlertCard.tsx","webpack:///./panel-triggers/components/AlertList/AlertList.tsx","webpack:///./panel-triggers/triggers_panel_ctrl.js","webpack:///./panel-triggers/datasource-selector.directive.js","webpack:///./panel-triggers/module.js"],"names":["installedModules","__webpack_require__","moduleId","exports","module","i","l","modules","call","m","c","d","name","getter","o","Object","defineProperty","enumerable","get","r","Symbol","toStringTag","value","t","mode","__esModule","ns","create","key","bind","n","object","property","prototype","hasOwnProperty","p","s","__WEBPACK_EXTERNAL_MODULE__0__","__WEBPACK_EXTERNAL_MODULE__1__","require","expandItemName","paramStr","params","quoted","in_array","param","key_params_str","substring","indexOf","lastIndexOf","key_params","_","forEach","symbol","push","length","replace","expandItems","items","item","key_","MACRO_PATTERN","containsMacro","itemName","test","replaceMacro","macros","item_macros","match","macro","host_macros","filter","hostid","macro_def","find","macro_value","macro_regex","RegExp","escapeMacro","splitTemplateQuery","query","split","isContainsBraces","result","map","part","trim","regexPattern","isRegex","str","isTemplateVariable","templateVariables","variables","variable","includes","getRangeScopedVars","range","msRange","to","diff","from","sRange","Math","round","regularRange","kbn","secondsToHms","__range_ms","text","__range_s","__range","__range_series","buildRegex","matches","pattern","flags","undefined","escapeRegex","parseInterval","interval","momentInterval","exec","moment","duration","Number","valueOf","parseTimeShiftInterval","formatAcknowledges","acknowledges","formatted_acknowledges","each","ack","unix","clock","format","alias","surname","message","concat","sequence","funcsArray","this","versionPattern","parseVersion","version","major","minor","patch","meta","compactQuery","getArrayDepth","a","level","elem","isArray","contains","hasOwn","classNames","classes","arguments","arg","argType","Array","inner","apply","join","define","window","DATAPOINT_TS","MODE_METRICS","MODE_ITSERVICE","MODE_TEXT","MODE_ITEMID","MODE_TRIGGERS","SEV_WARNING","SHOW_ALL_TRIGGERS","SHOW_ALL_EVENTS","SHOW_OK_EVENTS","ZBX_ACK_ACTION_NONE","ZBX_ACK_ACTION_ACK","ZBX_ACK_ACTION_ADD_MESSAGE","TRIGGER_SEVERITY","val","MIN_SLA_INTERVAL","RANGE_VARIABLE_VALUE","self","ReferenceError","__WEBPACK_EXTERNAL_MODULE__7__","obj","configurable","writable","__WEBPACK_EXTERNAL_MODULE__10__","__WEBPACK_EXTERNAL_MODULE__11__","_extends","assign","target","source","__WEBPACK_EXTERNAL_MODULE__13__","__WEBPACK_EXTERNAL_MODULE__14__","__WEBPACK_EXTERNAL_MODULE__15__","subClass","superClass","constructor","__proto__","__webpack_amd_options__","excluded","sourceKeys","keys","_react2","_interopRequireDefault","_implementation2","default","createContext","warning","EXITING","ENTERED","ENTERING","EXITED","UNMOUNTED","PropTypes","newObj","desc","getOwnPropertyDescriptor","set","_interopRequireWildcard","_react","_reactDom","_reactLifecyclesCompat","Transition","_React$Component","props","context","_this","initialStatus","parentGroup","transitionGroup","appear","isMounting","enter","appearStatus","unmountOnExit","mountOnEnter","state","status","nextCallback","_proto","getChildContext","getDerivedStateFromProps","_ref","prevState","componentDidMount","updateStatus","componentDidUpdate","prevProps","nextStatus","componentWillUnmount","cancelNextCallback","getTimeouts","exit","timeout","mounting","node","findDOMNode","performEnter","performExit","setState","_this2","appearing","timeouts","onEnter","safeSetState","onEntering","onTransitionEnd","onEntered","_this3","onExit","onExiting","onExited","cancel","nextState","callback","setNextCallback","_this4","active","event","handler","addEndListener","setTimeout","render","_this$props","children","childProps","_objectWithoutPropertiesLoose","child","Children","only","cloneElement","Component","noop","contextTypes","childContextTypes","propTypes","defaultProps","in","_default","polyfill","ReactPropTypesSecret","emptyFunction","shim","propName","componentName","location","propFullName","secret","err","Error","getShim","isRequired","ReactPropTypes","array","bool","func","number","string","any","arrayOf","element","instanceOf","objectOf","oneOf","oneOfType","shape","exact","checkPropTypes","_propTypes2","_gud2","_classCallCheck","instance","Constructor","TypeError","_possibleConstructorReturn","_inherits","setPrototypeOf","MAX_SIGNED_31_BIT_INT","defaultValue","calculateChangedBits","_Provider$childContex","_Consumer$contextType","contextProp","Provider","_Component","_temp","handlers","_len","args","_key","emitter","on","off","h","newValue","changedBits","componentWillReceiveProps","nextProps","oldValue","x","y","Consumer","_Component2","_temp2","_len2","_key2","getValue","onUpdate","observedBits","global","makeEmptyFunction","thatReturns","thatReturnsFalse","thatReturnsTrue","thatReturnsNull","thatReturnsThis","thatReturnsArgument","componentWillMount","componentWillUpdate","__reactInternalSnapshotFlag","__reactInternalSnapshot","getSnapshotBeforeUpdate","isReactComponent","foundWillMountName","foundWillReceivePropsName","foundWillUpdateName","UNSAFE_componentWillMount","UNSAFE_componentWillReceiveProps","UNSAFE_componentWillUpdate","displayName","newApiName","maybeSnapshot","snapshot","__suppressDeprecationWarning","transitionTimeout","transitionType","timeoutPropName","enabledPropName","classNamesShape","timeoutsShape","_propTypes","enterDone","enterActive","exitDone","exitActive","TriggerPanelOptionsCtrl","$scope","editor","panelCtrl","ctrl","panel","layouts","fontSizes","ackFilters","sortByFields","showEventsFields","triggerPanelOptionsTab","restrict","scope","templateUrl","controller","TriggersTabCtrl","templateSrv","datasources","getGroupNames","getHostNames","getApplicationNames","getProxyNames","oldTarget","getSelectedDatasources","$rootScope","uiSegmentSrv","then","datasource","bindSuggestionFunctions","ds","suggestHosts","suggestApps","suggestProxies","groups","groupFilter","replaceTemplateVars","group","zabbix","getAllHosts","hosts","hostFilter","host","getAllApps","apps","proxies","newTargets","targets","dsTarget","newTarget","initDatasources","refresh","schemaVersion","showEvents","refId","current","takeRight","path","keyPart","cursor","last","arr","orderBy","funcs","comp","dirs","sortInt","remove","clone","getFirstDefined","sum","makeTemplateComponent","groupBy","className","rest","xs","resKey","rv","splitProps","compactObject","style","isSortingDesc","normalizeComponent","asPx","fallback","flattenDeep","newArr","page","e","pages","showPageSizeOptions","pageSizeOptions","pageSize","showPageJump","canPrevious","canNext","onPageSizeChange","PreviousComponent","NextComponent","resolveData","data","showPagination","showPaginationTop","showPaginationBottom","defaultPageSize","collapseOnSortingChange","collapseOnPageChange","collapseOnDataChange","freezeWhenExpanded","sortable","multiSort","resizable","filterable","defaultSortDesc","defaultSorted","defaultFiltered","defaultResized","defaultExpanded","row","String","b","onSortedChange","onFilteredChange","onResizedChange","onExpandedChange","pivotIDKey","subRowsKey","aggregatedKey","nestingLevelKey","originalKey","indexKey","groupedByPivotKey","getTableProps","getTheadGroupProps","getTheadGroupTrProps","getTheadGroupThProps","getTheadProps","getTheadTrProps","getTheadThProps","getTheadFilterProps","getTheadFilterTrProps","getTheadFilterThProps","getTbodyProps","getTrGroupProps","getTrProps","getTdProps","getTfootProps","getTfootTrProps","getTfootTdProps","getPaginationProps","getLoadingProps","getNoDataProps","getResizerProps","Header","Footer","Aggregated","Pivot","PivotValue","Expander","Filter","show","minWidth","getProps","headerStyle","getHeaderProps","footerStyle","getFooterProps","filterMethod","filterAll","sortMethod","width","nextText","loadingText","noDataText","pageText","ofText","rowsText","classnames","TbodyComponent","TrGroupComponent","toggleSort","FilterComponent","onChange","subRows","column","previewValues","LoadingComponent","loading","ResizerComponent","PadRowComponent","defaultFilterMethod","defaultSortMethod","TheadComponent","TrComponent","ThComponent","TdComponent","TfootComponent","ExpanderComponent","PivotValueComponent","AggregatedComponent","NoDataComponent","sorted","expanded","filtered","resized","currentlyResizing","skipNextSort","Methods","resolvedState","manual","pivotValKey","pivotBy","TableComponent","PaginationComponent","SubComponent","PivotComponent","resolvedData","allVisibleColumns","headerGroups","hasHeaderGroups","sortedData","endRow","startRow","pageRows","minRows","padRows","index","_viewIndex","rowWithViewIndex","recurseRowsViewIndex","resizedColumn","hasColumnFooter","rowMinWidth","tableProps","tBodyProps","loadingProps","noDataProps","col","resizedValue","columnHeaderProps","flex","maxWidth","resizedCol","sort","theadThProps","resizer","isResizable","theadFilterThProps","isFilterable","tdProps","columnProps","trGroupProps","trProps","tFootTdProps","columnFooterProps","pagination","tFootTrProps","theadFilterTrProps","theadTrProps","theadGroupTrProps","paginationProps","rootProps","makeHeaders","theadGroupProps","theadProps","theadFilterProps","makePageRow","original","viewIndex","rowIndex","nestingPath","aggregated","groupedByPivot","isExpanded","rowInfo","pivoted","expander","styles","isBranch","isPreview","ResolvedExpanderComponent","ResolvedPivotValueComponent","DefaultResolvedPivotComponent","useOnExpanderClick","cellInfo","resolvedCell","newExpanded","onClick","resolvedOnExpanderClick","interactionProps","tFootProps","Base","newState","columns","col2","expanderColumn","columnsWithExpander","makeDecoratedColumn","allDecoratedColumns","dcol","accessorString","console","decorateAndAddToAll","visibleSubColumns","visibleColumns","found","pivotColumns","prev","PivotGroupHeader","pivotColumnGroup","currentSpan","addHeader","accessRow","aggregationValues","aggregatingColumns","groupRecursively","groupedRows","sortMethodsByColumnID","filteredData","onPageChange","newPage","secondSortDirection","newSorted","existing","existingIndex","id","firstSortDirection","newFiltering","parentWidth","pageX","startX","document","newResized","isTouch","oldState","getResolvedState","defaultableOptions","defaultName","JSON","resettableOptions","baseName","optionName","newResolvedState","cb","ReactTable","portalRoot","timeoutDuration","isBrowser","navigator","longerTimeoutBrowsers","getType","functionToCheck","overflow","overflowX","overflowY","isIE10","getOffsetParent","getRoot","start","order","end","commonAncestorContainer","isOffsetContainer","element1root","findCommonOffsetParent","side","nodeName","scrollingElement","sideA","axis","sideB","body","html","computedStyle","isIE","getSize","offsets","height","rect","scrollTop","scrollLeft","getScroll","sizes","vertScrollbar","getStyleComputedProperty","getBordersSize","fixedPosition","isHTML","parent","childrenRect","getBoundingClientRect","parentRect","scrollParent","borderTopWidth","borderLeftWidth","parseFloat","marginTop","marginLeft","includeScroll","modifier","subtract","el","offsetParent","getViewportOffsetRectRelativeToArtbitraryNode","relativeOffset","getOffsetRectRelativeToArbitraryNode","boundariesElement","getScrollParent","popper","boundariesNode","getWindowSizes","isPaddingNumber","padding","refRect","boundaries","rects","getArea","hash","right","placement","popperRect","mainSide","isHoriz","secondarySide","measurement","secondaryMeasurement","modifiersToRun","ends","cur","isFunction","getClientRect","enabled","prefixes","upperProp","prefix","toCheck","getSupportedPropertyName","ownerDocument","isBody","passive","setupEventListeners","removeEventListeners","unit","requesting","requested","counter","validPlacements","frag","ops","divider","mergeWithPrevious","toValue","isNumeric","basePlacement","shiftvariation","reference","isVertical","offset","options","popperStyles","top","transform","floor","opSide","sideCapitalized","altSide","arrowElementSize","getOuterSizes","popperMarginSide","css","popperBorderSide","sideValue","center","placementOpposite","getOppositePlacement","variation","BEHAVIORS","clockwise","flipOrder","refOffsets","overlapsRef","overflowsRight","popperOffsets","overflowsTop","overflowsBottom","flippedVariation","isModifierRequired","bound","offsetParentRect","isVariation","sameWidthOddness","bothOddWidth","noRound","verticalToInteger","horizontalToInteger","invertLeft","left","attributes","requestAnimationFrame","Popper","modifierOptions","placements","Defaults","getReferenceRef","referenceNode","_inheritsLoose","React","position","opacity","pointerEvents","InnerPopper","safeInvoke","innerRef","popperNode","arrowNode","fn","eventsEnabled","positionFixed","modifiers","arrow","initialStyle","initialArrowStyle","arrowStyles","popperInstance","destroyPopperInstance","_assertThisInitialize","updatePopperInstance","enableEventListeners","scheduleUpdate","unwrapArray","ref","setPopperNode","outOfBoundaries","arrowProps","setArrowNode","referenceElement","refHandler","problem","ProblemStatusBarItem","icon","fired","tooltip","acknowledgeid","eventPointSize","timeFrom","highlight","onPointUnHighlight","onPointHighlight","cx","cy","onUnHighlight","onHighlight","removed","onTagClick","tag","onColumnResize","nextExpanded","accessor","okColor","panelOptions","descriptionField","descriptionAtNewLine","fontSize","pageCount","application","trigger","tags","proxy","getNextRefIdChar","priority","severity","color","CURRENT_SCHEMA_VERSION","getDefaultTarget","hostTechNameField","hostGroups","hostProxy","showTags","statusField","statusIcon","severityField","ageField","showTriggers","sortTriggersBy","limit","problemTimeline","highlightBackground","highlightNewEvents","highlightNewerThan","customLastChangeFormat","lastChangeFormat","resizedColumns","okEventColor","ackEventColor","markAckEvents","datasourceSrv","contextSrv","dashboardSrv","timeSrv","$timeout","editorTabIndex","defaultTimeFormat","pageIndex","triggerList","migratePanelSchema","available_datasources","getZabbixDataSources","events","defaultErrorMessage","error","PROBLEM_EVENTS_LIMIT","emptyTarget","emptyTargets","otherPanelInFullscreenMode","setTimeQueryStart","getTriggers","renderTriggers","zabbixTriggers","triggerListUnfiltered","triggers","formatTrigger","userIsEditor","isEditor","isGrafanaAdmin","promises","showAckButton","triggerFilter","showProxy","getProxiesPromise","disableReadOnlyUsersAck","appFilter","proxyFilter","triggersOptions","timeTo","eventids","Promise","all","addAcknowledges","filterTriggersPre","addTriggerDataSource","addTriggerHostProxy","lastEvent","eventid","timestamp","time","user","fullName","filterTriggers","utils","tagsFilter","maintenance_status","proxy_hostid","zabbixTrigger","hostTechName","tagStr","tagParts","tagFilter","targetTags","newTag","uniqWith","newFilter","parseTags","tagsToString","ceil","dateMath","getEvents","triggerids","getEventAlerts","hostField","groupNames","highlightIntervalMs","iconClass","triggerSeverity","statusClass","grafana_user","ack_message","reject","setPanelError","$apply","parseInt","slice","problemsListProps","problemsReactElem","timeRange","getProblemEvents","getProblemAlerts","handlePageSizeChange","handleColumnResize","onProblemAck","acknowledgeTrigger","removeTagFilter","addTagFilter","createElement","ProblemList","ReactDOM","PanelCtrl","renderData","renderPanel","DatasourceSelectorCtrl","template","dsOptions","multi","$$postDigest"],"mappings":"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","file":"panel-triggers/module.js","sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 36);\n","module.exports = __WEBPACK_EXTERNAL_MODULE__0__;","module.exports = __WEBPACK_EXTERNAL_MODULE__1__;","/**\n * Copyright (c) 2013-present, Facebook, Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nif (process.env.NODE_ENV !== 'production') {\n  var REACT_ELEMENT_TYPE = (typeof Symbol === 'function' &&\n    Symbol.for &&\n    Symbol.for('react.element')) ||\n    0xeac7;\n\n  var isValidElement = function(object) {\n    return typeof object === 'object' &&\n      object !== null &&\n      object.$$typeof === REACT_ELEMENT_TYPE;\n  };\n\n  // By explicitly using `prop-types` you are opting into new development behavior.\n  // http://fb.me/prop-types-in-prod\n  var throwOnDirectAccess = true;\n  module.exports = require('./factoryWithTypeCheckers')(isValidElement, throwOnDirectAccess);\n} else {\n  // By explicitly using `prop-types` you are opting into new production behavior.\n  // http://fb.me/prop-types-in-prod\n  module.exports = require('./factoryWithThrowingShims')();\n}\n","import _ from 'lodash';\nimport moment from 'moment';\nimport kbn from 'grafana/app/core/utils/kbn';\nimport * as c from './constants';\n\n/**\n * Expand Zabbix item name\n *\n * @param  {string} name item name, ie \"CPU $2 time\"\n * @param  {string} key  item key, ie system.cpu.util[,system,avg1]\n * @return {string}      expanded name, ie \"CPU system time\"\n */\nexport function expandItemName(name, key) {\n\n  // extract params from key:\n  // \"system.cpu.util[,system,avg1]\" --> [\"\", \"system\", \"avg1\"]\n  let key_params_str = key.substring(key.indexOf('[') + 1, key.lastIndexOf(']'));\n  let key_params = splitKeyParams(key_params_str);\n\n  // replace item parameters\n  for (let i = key_params.length; i >= 1; i--) {\n    name = name.replace('$' + i, key_params[i - 1]);\n  }\n  return name;\n}\n\nexport function expandItems(items) {\n  _.forEach(items, item => {\n    item.item = item.name;\n    item.name = expandItemName(item.item, item.key_);\n    return item;\n  });\n  return items;\n}\n\nfunction splitKeyParams(paramStr) {\n  let params = [];\n  let quoted = false;\n  let in_array = false;\n  let split_symbol = ',';\n  let param = '';\n\n  _.forEach(paramStr, symbol => {\n    if (symbol === '\"' && in_array) {\n      param += symbol;\n    } else if (symbol === '\"' && quoted) {\n      quoted = false;\n    } else if (symbol === '\"' && !quoted) {\n      quoted = true;\n    } else if (symbol === '[' && !quoted) {\n      in_array  = true;\n    } else if (symbol === ']' && !quoted) {\n      in_array = false;\n    } else if (symbol === split_symbol && !quoted && !in_array) {\n      params.push(param);\n      param = '';\n    } else {\n      param += symbol;\n    }\n  });\n\n  params.push(param);\n  return params;\n}\n\nconst MACRO_PATTERN = /{\\$[A-Z0-9_\\.]+}/g;\n\nexport function containsMacro(itemName) {\n  return MACRO_PATTERN.test(itemName);\n}\n\nexport function replaceMacro(item, macros) {\n  let itemName = item.name;\n  let item_macros = itemName.match(MACRO_PATTERN);\n  _.forEach(item_macros, macro => {\n    let host_macros = _.filter(macros, m => {\n      if (m.hostid) {\n        return m.hostid === item.hostid;\n      } else {\n        // Add global macros\n        return true;\n      }\n    });\n\n    let macro_def = _.find(host_macros, { macro: macro });\n    if (macro_def && macro_def.value) {\n      let macro_value = macro_def.value;\n      let macro_regex = new RegExp(escapeMacro(macro));\n      itemName = itemName.replace(macro_regex, macro_value);\n    }\n  });\n\n  return itemName;\n}\n\nfunction escapeMacro(macro) {\n  macro = macro.replace(/\\$/, '\\\\\\$');\n  return macro;\n}\n\n/**\n * Split template query to parts of zabbix entities\n * group.host.app.item -> [group, host, app, item]\n * {group}{host.com} -> [group, host.com]\n */\nexport function splitTemplateQuery(query) {\n  let splitPattern = /\\{[^\\{\\}]*\\}|\\{\\/.*\\/\\}/g;\n  let split;\n\n  if (isContainsBraces(query)) {\n    let result = query.match(splitPattern);\n    split = _.map(result, part => {\n      return _.trim(part, '{}');\n    });\n  } else {\n    split = query.split('.');\n  }\n\n  return split;\n}\n\nfunction isContainsBraces(query) {\n  let bracesPattern = /^\\{.+\\}$/;\n  return bracesPattern.test(query);\n}\n\n// Pattern for testing regex\nexport const regexPattern = /^\\/(.*)\\/([gmi]*)$/m;\n\nexport function isRegex(str) {\n  return regexPattern.test(str);\n}\n\nexport function isTemplateVariable(str, templateVariables) {\n  var variablePattern = /^\\$\\w+/;\n  if (variablePattern.test(str)) {\n    var variables = _.map(templateVariables, variable => {\n      return '$' + variable.name;\n    });\n    return _.includes(variables, str);\n  } else {\n    return false;\n  }\n}\n\nexport function getRangeScopedVars(range) {\n  const msRange = range.to.diff(range.from);\n  const sRange = Math.round(msRange / 1000);\n  const regularRange = kbn.secondsToHms(msRange / 1000);\n  return {\n    __range_ms: { text: msRange, value: msRange },\n    __range_s: { text: sRange, value: sRange },\n    __range: { text: regularRange, value: regularRange },\n    __range_series: {text: c.RANGE_VARIABLE_VALUE, value: c.RANGE_VARIABLE_VALUE},\n  };\n}\n\nexport function buildRegex(str) {\n  var matches = str.match(regexPattern);\n  var pattern = matches[1];\n  var flags = matches[2] !== \"\" ? matches[2] : undefined;\n  return new RegExp(pattern, flags);\n}\n\n// Need for template variables replace\n// From Grafana's templateSrv.js\nexport function escapeRegex(value) {\n  return value.replace(/[\\\\^$*+?.()|[\\]{}\\/]/g, '\\\\$&');\n}\n\nexport function parseInterval(interval) {\n  var intervalPattern = /(^[\\d]+)(y|M|w|d|h|m|s)/g;\n  var momentInterval = intervalPattern.exec(interval);\n  return moment.duration(Number(momentInterval[1]), momentInterval[2]).valueOf();\n}\n\nexport function parseTimeShiftInterval(interval) {\n  let intervalPattern = /^([\\+\\-]*)([\\d]+)(y|M|w|d|h|m|s)/g;\n  let momentInterval = intervalPattern.exec(interval);\n  let duration = 0;\n\n  if (momentInterval[1] === '+') {\n    duration = 0 - moment.duration(Number(momentInterval[2]), momentInterval[3]).valueOf();\n  } else {\n    duration = moment.duration(Number(momentInterval[2]), momentInterval[3]).valueOf();\n  }\n\n  return duration;\n}\n\n/**\n * Format acknowledges.\n *\n * @param  {array} acknowledges array of Zabbix acknowledge objects\n * @return {string} HTML-formatted table\n */\nexport function formatAcknowledges(acknowledges) {\n  if (acknowledges.length) {\n    var formatted_acknowledges = '<br><br>Acknowledges:<br><table><tr><td><b>Time</b></td>'\n      + '<td><b>User</b></td><td><b>Comments</b></td></tr>';\n    _.each(_.map(acknowledges, function (ack) {\n      var timestamp = moment.unix(ack.clock);\n      return '<tr><td><i>' + timestamp.format(\"DD MMM YYYY HH:mm:ss\") + '</i></td><td>' + ack.alias\n        + ' (' + ack.name + ' ' + ack.surname + ')' + '</td><td>' + ack.message + '</td></tr>';\n    }), function (ack) {\n      formatted_acknowledges = formatted_acknowledges.concat(ack);\n    });\n    formatted_acknowledges = formatted_acknowledges.concat('</table>');\n    return formatted_acknowledges;\n  } else {\n    return '';\n  }\n}\n\nexport function convertToZabbixAPIUrl(url) {\n  var zabbixAPIUrlPattern = /.*api_jsonrpc.php$/;\n  var trimSlashPattern = /(.*?)[\\/]*$/;\n  if (url.match(zabbixAPIUrlPattern)) {\n    return url;\n  } else {\n    return url.replace(trimSlashPattern, \"$1\");\n  }\n}\n\n/**\n * Wrap function to prevent multiple calls\n * when waiting for result.\n */\nexport function callOnce(func, promiseKeeper) {\n  return function() {\n    if (!promiseKeeper) {\n      promiseKeeper = Promise.resolve(\n        func.apply(this, arguments)\n        .then(result => {\n          promiseKeeper = null;\n          return result;\n        })\n      );\n    }\n    return promiseKeeper;\n  };\n}\n\n/**\n * Apply function one by one: `sequence([a(), b(), c()]) = c(b(a()))`\n * @param {*} funcsArray functions to apply\n */\nexport function sequence(funcsArray) {\n  return function(result) {\n    for (var i = 0; i < funcsArray.length; i++) {\n      result = funcsArray[i].call(this, result);\n    }\n    return result;\n  };\n}\n\nconst versionPattern = /^(\\d+)(?:\\.(\\d+))?(?:\\.(\\d+))?(?:-([0-9A-Za-z\\.]+))?/;\n\nexport function isValidVersion(version) {\n  return versionPattern.exec(version);\n}\n\nexport function parseVersion(version) {\n  const match = versionPattern.exec(version);\n  if (!match) {\n    return null;\n  }\n  const major = Number(match[1]);\n  const minor = Number(match[2] || 0);\n  const patch = Number(match[3] || 0);\n  const meta = match[4];\n  return { major, minor, patch, meta };\n}\n\n/**\n * Replaces any space-like symbols (tabs, new lines, spaces) by single whitespace.\n */\nexport function compactQuery(query) {\n  return query.replace(/\\s+/g, ' ').trim();\n}\n\nexport function getArrayDepth(a, level = 0) {\n  if (a.length === 0) {\n    return 1;\n  }\n  const elem = a[0];\n  if (_.isArray(elem)) {\n    return getArrayDepth(elem, level + 1);\n  }\n  return level + 1;\n}\n\n// Fix for backward compatibility with lodash 2.4\nif (!_.includes) {\n  _.includes = _.contains;\n}\n","/*!\n  Copyright (c) 2017 Jed Watson.\n  Licensed under the MIT License (MIT), see\n  http://jedwatson.github.io/classnames\n*/\n/* global define */\n\n(function () {\n\t'use strict';\n\n\tvar hasOwn = {}.hasOwnProperty;\n\n\tfunction classNames () {\n\t\tvar classes = [];\n\n\t\tfor (var i = 0; i < arguments.length; i++) {\n\t\t\tvar arg = arguments[i];\n\t\t\tif (!arg) continue;\n\n\t\t\tvar argType = typeof arg;\n\n\t\t\tif (argType === 'string' || argType === 'number') {\n\t\t\t\tclasses.push(arg);\n\t\t\t} else if (Array.isArray(arg) && arg.length) {\n\t\t\t\tvar inner = classNames.apply(null, arg);\n\t\t\t\tif (inner) {\n\t\t\t\t\tclasses.push(inner);\n\t\t\t\t}\n\t\t\t} else if (argType === 'object') {\n\t\t\t\tfor (var key in arg) {\n\t\t\t\t\tif (hasOwn.call(arg, key) && arg[key]) {\n\t\t\t\t\t\tclasses.push(key);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\treturn classes.join(' ');\n\t}\n\n\tif (typeof module !== 'undefined' && module.exports) {\n\t\tclassNames.default = classNames;\n\t\tmodule.exports = classNames;\n\t} else if (typeof define === 'function' && typeof define.amd === 'object' && define.amd) {\n\t\t// register as 'classnames', consistent with npm package name\n\t\tdefine('classnames', [], function () {\n\t\t\treturn classNames;\n\t\t});\n\t} else {\n\t\twindow.classNames = classNames;\n\t}\n}());\n","// Data point\nexport const DATAPOINT_VALUE = 0;\nexport const DATAPOINT_TS = 1;\n\n// Editor modes\nexport const MODE_METRICS = 0;\nexport const MODE_ITSERVICE = 1;\nexport const MODE_TEXT = 2;\nexport const MODE_ITEMID = 3;\nexport const MODE_TRIGGERS = 4;\n\n// Triggers severity\nexport const SEV_NOT_CLASSIFIED = 0;\nexport const SEV_INFORMATION = 1;\nexport const SEV_WARNING = 2;\nexport const SEV_AVERAGE = 3;\nexport const SEV_HIGH = 4;\nexport const SEV_DISASTER = 5;\n\nexport const SHOW_ALL_TRIGGERS = [0, 1];\nexport const SHOW_ALL_EVENTS = [0, 1];\nexport const SHOW_OK_EVENTS = 1;\n\n// Acknowledge\nexport const ZBX_ACK_ACTION_NONE = 0;\nexport const ZBX_ACK_ACTION_ACK = 2;\nexport const ZBX_ACK_ACTION_ADD_MESSAGE = 4;\n\nexport const TRIGGER_SEVERITY = [\n  {val: 0, text: 'Not classified'},\n  {val: 1, text: 'Information'},\n  {val: 2, text: 'Warning'},\n  {val: 3, text: 'Average'},\n  {val: 4, text: 'High'},\n  {val: 5, text: 'Disaster'}\n];\n\n/** Minimum interval for SLA over time (1 hour) */\nexport const MIN_SLA_INTERVAL = 3600;\n\nexport const RANGE_VARIABLE_VALUE = 'range_series';\n","function _assertThisInitialized(self) {\n  if (self === void 0) {\n    throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");\n  }\n\n  return self;\n}\n\nmodule.exports = _assertThisInitialized;","module.exports = __WEBPACK_EXTERNAL_MODULE__7__;","function _defineProperty(obj, key, value) {\n  if (key in obj) {\n    Object.defineProperty(obj, key, {\n      value: value,\n      enumerable: true,\n      configurable: true,\n      writable: true\n    });\n  } else {\n    obj[key] = value;\n  }\n\n  return obj;\n}\n\nmodule.exports = _defineProperty;","module.exports = __WEBPACK_EXTERNAL_MODULE__10__;","module.exports = __WEBPACK_EXTERNAL_MODULE__11__;","function _extends() {\n  module.exports = _extends = Object.assign || function (target) {\n    for (var i = 1; i < arguments.length; i++) {\n      var source = arguments[i];\n\n      for (var key in source) {\n        if (Object.prototype.hasOwnProperty.call(source, key)) {\n          target[key] = source[key];\n        }\n      }\n    }\n\n    return target;\n  };\n\n  return _extends.apply(this, arguments);\n}\n\nmodule.exports = _extends;","module.exports = __WEBPACK_EXTERNAL_MODULE__13__;","module.exports = __WEBPACK_EXTERNAL_MODULE__14__;","module.exports = __WEBPACK_EXTERNAL_MODULE__15__;","function _inheritsLoose(subClass, superClass) {\n  subClass.prototype = Object.create(superClass.prototype);\n  subClass.prototype.constructor = subClass;\n  subClass.__proto__ = superClass;\n}\n\nmodule.exports = _inheritsLoose;","/* globals __webpack_amd_options__ */\nmodule.exports = __webpack_amd_options__;\n","function _objectWithoutPropertiesLoose(source, excluded) {\n  if (source == null) return {};\n  var target = {};\n  var sourceKeys = Object.keys(source);\n  var key, i;\n\n  for (i = 0; i < sourceKeys.length; i++) {\n    key = sourceKeys[i];\n    if (excluded.indexOf(key) >= 0) continue;\n    target[key] = source[key];\n  }\n\n  return target;\n}\n\nmodule.exports = _objectWithoutPropertiesLoose;","'use strict';\n\nexports.__esModule = true;\n\nvar _react = require('react');\n\nvar _react2 = _interopRequireDefault(_react);\n\nvar _implementation = require('./implementation');\n\nvar _implementation2 = _interopRequireDefault(_implementation);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nexports.default = _react2.default.createContext || _implementation2.default;\nmodule.exports = exports['default'];","/**\n * Copyright (c) 2014-present, Facebook, Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\n'use strict';\n\n/**\n * Similar to invariant but only logs a warning if the condition is not met.\n * This can be used to log issues in development environments in critical\n * paths. Removing the logging code for production environments will keep the\n * same logic and follow the same code paths.\n */\n\nvar __DEV__ = process.env.NODE_ENV !== 'production';\n\nvar warning = function() {};\n\nif (__DEV__) {\n  var printWarning = function printWarning(format, args) {\n    var len = arguments.length;\n    args = new Array(len > 2 ? len - 2 : 0);\n    for (var key = 2; key < len; key++) {\n      args[key - 2] = arguments[key];\n    }\n    var argIndex = 0;\n    var message = 'Warning: ' +\n      format.replace(/%s/g, function() {\n        return args[argIndex++];\n      });\n    if (typeof console !== 'undefined') {\n      console.error(message);\n    }\n    try {\n      // --- Welcome to debugging React ---\n      // This error was thrown as a convenience so that you can use this stack\n      // to find the callsite that caused this warning to fire.\n      throw new Error(message);\n    } catch (x) {}\n  }\n\n  warning = function(condition, format, args) {\n    var len = arguments.length;\n    args = new Array(len > 2 ? len - 2 : 0);\n    for (var key = 2; key < len; key++) {\n      args[key - 2] = arguments[key];\n    }\n    if (format === undefined) {\n      throw new Error(\n          '`warning(condition, format, ...args)` requires a warning ' +\n          'message argument'\n      );\n    }\n    if (!condition) {\n      printWarning.apply(null, [format].concat(args));\n    }\n  };\n}\n\nmodule.exports = warning;\n","\"use strict\";\n\nexports.__esModule = true;\nexports.default = exports.EXITING = exports.ENTERED = exports.ENTERING = exports.EXITED = exports.UNMOUNTED = void 0;\n\nvar PropTypes = _interopRequireWildcard(require(\"prop-types\"));\n\nvar _react = _interopRequireDefault(require(\"react\"));\n\nvar _reactDom = _interopRequireDefault(require(\"react-dom\"));\n\nvar _reactLifecyclesCompat = require(\"react-lifecycles-compat\");\n\nvar _PropTypes = require(\"./utils/PropTypes\");\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nfunction _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } else { var newObj = {}; if (obj != null) { for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) { var desc = Object.defineProperty && Object.getOwnPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : {}; if (desc.get || desc.set) { Object.defineProperty(newObj, key, desc); } else { newObj[key] = obj[key]; } } } } newObj.default = obj; return newObj; } }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\nfunction _inheritsLoose(subClass, superClass) { subClass.prototype = Object.create(superClass.prototype); subClass.prototype.constructor = subClass; subClass.__proto__ = superClass; }\n\nvar UNMOUNTED = 'unmounted';\nexports.UNMOUNTED = UNMOUNTED;\nvar EXITED = 'exited';\nexports.EXITED = EXITED;\nvar ENTERING = 'entering';\nexports.ENTERING = ENTERING;\nvar ENTERED = 'entered';\nexports.ENTERED = ENTERED;\nvar EXITING = 'exiting';\n/**\n * The Transition component lets you describe a transition from one component\n * state to another _over time_ with a simple declarative API. Most commonly\n * it's used to animate the mounting and unmounting of a component, but can also\n * be used to describe in-place transition states as well.\n *\n * By default the `Transition` component does not alter the behavior of the\n * component it renders, it only tracks \"enter\" and \"exit\" states for the components.\n * It's up to you to give meaning and effect to those states. For example we can\n * add styles to a component when it enters or exits:\n *\n * ```jsx\n * import Transition from 'react-transition-group/Transition';\n *\n * const duration = 300;\n *\n * const defaultStyle = {\n *   transition: `opacity ${duration}ms ease-in-out`,\n *   opacity: 0,\n * }\n *\n * const transitionStyles = {\n *   entering: { opacity: 0 },\n *   entered:  { opacity: 1 },\n * };\n *\n * const Fade = ({ in: inProp }) => (\n *   <Transition in={inProp} timeout={duration}>\n *     {(state) => (\n *       <div style={{\n *         ...defaultStyle,\n *         ...transitionStyles[state]\n *       }}>\n *         I'm a fade Transition!\n *       </div>\n *     )}\n *   </Transition>\n * );\n * ```\n *\n * As noted the `Transition` component doesn't _do_ anything by itself to its child component.\n * What it does do is track transition states over time so you can update the\n * component (such as by adding styles or classes) when it changes states.\n *\n * There are 4 main states a Transition can be in:\n *  - `'entering'`\n *  - `'entered'`\n *  - `'exiting'`\n *  - `'exited'`\n *\n * Transition state is toggled via the `in` prop. When `true` the component begins the\n * \"Enter\" stage. During this stage, the component will shift from its current transition state,\n * to `'entering'` for the duration of the transition and then to the `'entered'` stage once\n * it's complete. Let's take the following example:\n *\n * ```jsx\n * state = { in: false };\n *\n * toggleEnterState = () => {\n *   this.setState({ in: true });\n * }\n *\n * render() {\n *   return (\n *     <div>\n *       <Transition in={this.state.in} timeout={500} />\n *       <button onClick={this.toggleEnterState}>Click to Enter</button>\n *     </div>\n *   );\n * }\n * ```\n *\n * When the button is clicked the component will shift to the `'entering'` state and\n * stay there for 500ms (the value of `timeout`) before it finally switches to `'entered'`.\n *\n * When `in` is `false` the same thing happens except the state moves from `'exiting'` to `'exited'`.\n *\n * ## Timing\n *\n * Timing is often the trickiest part of animation, mistakes can result in slight delays\n * that are hard to pin down. A common example is when you want to add an exit transition,\n * you should set the desired final styles when the state is `'exiting'`. That's when the\n * transition to those styles will start and, if you matched the `timeout` prop with the\n * CSS Transition duration, it will end exactly when the state changes to `'exited'`.\n *\n * > **Note**: For simpler transitions the `Transition` component might be enough, but\n * > take into account that it's platform-agnostic, while the `CSSTransition` component\n * > [forces reflows](https://github.com/reactjs/react-transition-group/blob/5007303e729a74be66a21c3e2205e4916821524b/src/CSSTransition.js#L208-L215)\n * > in order to make more complex transitions more predictable. For example, even though\n * > classes `example-enter` and `example-enter-active` are applied immediately one after\n * > another, you can still transition from one to the other because of the forced reflow\n * > (read [this issue](https://github.com/reactjs/react-transition-group/issues/159#issuecomment-322761171)\n * > for more info). Take this into account when choosing between `Transition` and\n * > `CSSTransition`.\n */\n\nexports.EXITING = EXITING;\n\nvar Transition =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inheritsLoose(Transition, _React$Component);\n\n  function Transition(props, context) {\n    var _this;\n\n    _this = _React$Component.call(this, props, context) || this;\n    var parentGroup = context.transitionGroup; // In the context of a TransitionGroup all enters are really appears\n\n    var appear = parentGroup && !parentGroup.isMounting ? props.enter : props.appear;\n    var initialStatus;\n    _this.appearStatus = null;\n\n    if (props.in) {\n      if (appear) {\n        initialStatus = EXITED;\n        _this.appearStatus = ENTERING;\n      } else {\n        initialStatus = ENTERED;\n      }\n    } else {\n      if (props.unmountOnExit || props.mountOnEnter) {\n        initialStatus = UNMOUNTED;\n      } else {\n        initialStatus = EXITED;\n      }\n    }\n\n    _this.state = {\n      status: initialStatus\n    };\n    _this.nextCallback = null;\n    return _this;\n  }\n\n  var _proto = Transition.prototype;\n\n  _proto.getChildContext = function getChildContext() {\n    return {\n      transitionGroup: null // allows for nested Transitions\n\n    };\n  };\n\n  Transition.getDerivedStateFromProps = function getDerivedStateFromProps(_ref, prevState) {\n    var nextIn = _ref.in;\n\n    if (nextIn && prevState.status === UNMOUNTED) {\n      return {\n        status: EXITED\n      };\n    }\n\n    return null;\n  }; // getSnapshotBeforeUpdate(prevProps) {\n  //   let nextStatus = null\n  //   if (prevProps !== this.props) {\n  //     const { status } = this.state\n  //     if (this.props.in) {\n  //       if (status !== ENTERING && status !== ENTERED) {\n  //         nextStatus = ENTERING\n  //       }\n  //     } else {\n  //       if (status === ENTERING || status === ENTERED) {\n  //         nextStatus = EXITING\n  //       }\n  //     }\n  //   }\n  //   return { nextStatus }\n  // }\n\n\n  _proto.componentDidMount = function componentDidMount() {\n    this.updateStatus(true, this.appearStatus);\n  };\n\n  _proto.componentDidUpdate = function componentDidUpdate(prevProps) {\n    var nextStatus = null;\n\n    if (prevProps !== this.props) {\n      var status = this.state.status;\n\n      if (this.props.in) {\n        if (status !== ENTERING && status !== ENTERED) {\n          nextStatus = ENTERING;\n        }\n      } else {\n        if (status === ENTERING || status === ENTERED) {\n          nextStatus = EXITING;\n        }\n      }\n    }\n\n    this.updateStatus(false, nextStatus);\n  };\n\n  _proto.componentWillUnmount = function componentWillUnmount() {\n    this.cancelNextCallback();\n  };\n\n  _proto.getTimeouts = function getTimeouts() {\n    var timeout = this.props.timeout;\n    var exit, enter, appear;\n    exit = enter = appear = timeout;\n\n    if (timeout != null && typeof timeout !== 'number') {\n      exit = timeout.exit;\n      enter = timeout.enter;\n      appear = timeout.appear;\n    }\n\n    return {\n      exit: exit,\n      enter: enter,\n      appear: appear\n    };\n  };\n\n  _proto.updateStatus = function updateStatus(mounting, nextStatus) {\n    if (mounting === void 0) {\n      mounting = false;\n    }\n\n    if (nextStatus !== null) {\n      // nextStatus will always be ENTERING or EXITING.\n      this.cancelNextCallback();\n\n      var node = _reactDom.default.findDOMNode(this);\n\n      if (nextStatus === ENTERING) {\n        this.performEnter(node, mounting);\n      } else {\n        this.performExit(node);\n      }\n    } else if (this.props.unmountOnExit && this.state.status === EXITED) {\n      this.setState({\n        status: UNMOUNTED\n      });\n    }\n  };\n\n  _proto.performEnter = function performEnter(node, mounting) {\n    var _this2 = this;\n\n    var enter = this.props.enter;\n    var appearing = this.context.transitionGroup ? this.context.transitionGroup.isMounting : mounting;\n    var timeouts = this.getTimeouts(); // no enter animation skip right to ENTERED\n    // if we are mounting and running this it means appear _must_ be set\n\n    if (!mounting && !enter) {\n      this.safeSetState({\n        status: ENTERED\n      }, function () {\n        _this2.props.onEntered(node);\n      });\n      return;\n    }\n\n    this.props.onEnter(node, appearing);\n    this.safeSetState({\n      status: ENTERING\n    }, function () {\n      _this2.props.onEntering(node, appearing); // FIXME: appear timeout?\n\n\n      _this2.onTransitionEnd(node, timeouts.enter, function () {\n        _this2.safeSetState({\n          status: ENTERED\n        }, function () {\n          _this2.props.onEntered(node, appearing);\n        });\n      });\n    });\n  };\n\n  _proto.performExit = function performExit(node) {\n    var _this3 = this;\n\n    var exit = this.props.exit;\n    var timeouts = this.getTimeouts(); // no exit animation skip right to EXITED\n\n    if (!exit) {\n      this.safeSetState({\n        status: EXITED\n      }, function () {\n        _this3.props.onExited(node);\n      });\n      return;\n    }\n\n    this.props.onExit(node);\n    this.safeSetState({\n      status: EXITING\n    }, function () {\n      _this3.props.onExiting(node);\n\n      _this3.onTransitionEnd(node, timeouts.exit, function () {\n        _this3.safeSetState({\n          status: EXITED\n        }, function () {\n          _this3.props.onExited(node);\n        });\n      });\n    });\n  };\n\n  _proto.cancelNextCallback = function cancelNextCallback() {\n    if (this.nextCallback !== null) {\n      this.nextCallback.cancel();\n      this.nextCallback = null;\n    }\n  };\n\n  _proto.safeSetState = function safeSetState(nextState, callback) {\n    // This shouldn't be necessary, but there are weird race conditions with\n    // setState callbacks and unmounting in testing, so always make sure that\n    // we can cancel any pending setState callbacks after we unmount.\n    callback = this.setNextCallback(callback);\n    this.setState(nextState, callback);\n  };\n\n  _proto.setNextCallback = function setNextCallback(callback) {\n    var _this4 = this;\n\n    var active = true;\n\n    this.nextCallback = function (event) {\n      if (active) {\n        active = false;\n        _this4.nextCallback = null;\n        callback(event);\n      }\n    };\n\n    this.nextCallback.cancel = function () {\n      active = false;\n    };\n\n    return this.nextCallback;\n  };\n\n  _proto.onTransitionEnd = function onTransitionEnd(node, timeout, handler) {\n    this.setNextCallback(handler);\n\n    if (node) {\n      if (this.props.addEndListener) {\n        this.props.addEndListener(node, this.nextCallback);\n      }\n\n      if (timeout != null) {\n        setTimeout(this.nextCallback, timeout);\n      }\n    } else {\n      setTimeout(this.nextCallback, 0);\n    }\n  };\n\n  _proto.render = function render() {\n    var status = this.state.status;\n\n    if (status === UNMOUNTED) {\n      return null;\n    }\n\n    var _this$props = this.props,\n        children = _this$props.children,\n        childProps = _objectWithoutPropertiesLoose(_this$props, [\"children\"]); // filter props for Transtition\n\n\n    delete childProps.in;\n    delete childProps.mountOnEnter;\n    delete childProps.unmountOnExit;\n    delete childProps.appear;\n    delete childProps.enter;\n    delete childProps.exit;\n    delete childProps.timeout;\n    delete childProps.addEndListener;\n    delete childProps.onEnter;\n    delete childProps.onEntering;\n    delete childProps.onEntered;\n    delete childProps.onExit;\n    delete childProps.onExiting;\n    delete childProps.onExited;\n\n    if (typeof children === 'function') {\n      return children(status, childProps);\n    }\n\n    var child = _react.default.Children.only(children);\n\n    return _react.default.cloneElement(child, childProps);\n  };\n\n  return Transition;\n}(_react.default.Component);\n\nTransition.contextTypes = {\n  transitionGroup: PropTypes.object\n};\nTransition.childContextTypes = {\n  transitionGroup: function transitionGroup() {}\n};\nTransition.propTypes = process.env.NODE_ENV !== \"production\" ? {\n  /**\n   * A `function` child can be used instead of a React element.\n   * This function is called with the current transition status\n   * ('entering', 'entered', 'exiting', 'exited', 'unmounted'), which can be used\n   * to apply context specific props to a component.\n   *\n   * ```jsx\n   * <Transition timeout={150}>\n   *   {(status) => (\n   *     <MyComponent className={`fade fade-${status}`} />\n   *   )}\n   * </Transition>\n   * ```\n   */\n  children: PropTypes.oneOfType([PropTypes.func.isRequired, PropTypes.element.isRequired]).isRequired,\n\n  /**\n   * Show the component; triggers the enter or exit states\n   */\n  in: PropTypes.bool,\n\n  /**\n   * By default the child component is mounted immediately along with\n   * the parent `Transition` component. If you want to \"lazy mount\" the component on the\n   * first `in={true}` you can set `mountOnEnter`. After the first enter transition the component will stay\n   * mounted, even on \"exited\", unless you also specify `unmountOnExit`.\n   */\n  mountOnEnter: PropTypes.bool,\n\n  /**\n   * By default the child component stays mounted after it reaches the `'exited'` state.\n   * Set `unmountOnExit` if you'd prefer to unmount the component after it finishes exiting.\n   */\n  unmountOnExit: PropTypes.bool,\n\n  /**\n   * Normally a component is not transitioned if it is shown when the `<Transition>` component mounts.\n   * If you want to transition on the first mount set `appear` to `true`, and the\n   * component will transition in as soon as the `<Transition>` mounts.\n   *\n   * > Note: there are no specific \"appear\" states. `appear` only adds an additional `enter` transition.\n   */\n  appear: PropTypes.bool,\n\n  /**\n   * Enable or disable enter transitions.\n   */\n  enter: PropTypes.bool,\n\n  /**\n   * Enable or disable exit transitions.\n   */\n  exit: PropTypes.bool,\n\n  /**\n   * The duration of the transition, in milliseconds.\n   * Required unless `addEndListener` is provided\n   *\n   * You may specify a single timeout for all transitions like: `timeout={500}`,\n   * or individually like:\n   *\n   * ```jsx\n   * timeout={{\n   *  enter: 300,\n   *  exit: 500,\n   * }}\n   * ```\n   *\n   * @type {number | { enter?: number, exit?: number }}\n   */\n  timeout: function timeout(props) {\n    var pt = process.env.NODE_ENV !== \"production\" ? _PropTypes.timeoutsShape : {};;\n    if (!props.addEndListener) pt = pt.isRequired;\n\n    for (var _len = arguments.length, args = new Array(_len > 1 ? _len - 1 : 0), _key = 1; _key < _len; _key++) {\n      args[_key - 1] = arguments[_key];\n    }\n\n    return pt.apply(void 0, [props].concat(args));\n  },\n\n  /**\n   * Add a custom transition end trigger. Called with the transitioning\n   * DOM node and a `done` callback. Allows for more fine grained transition end\n   * logic. **Note:** Timeouts are still used as a fallback if provided.\n   *\n   * ```jsx\n   * addEndListener={(node, done) => {\n   *   // use the css transitionend event to mark the finish of a transition\n   *   node.addEventListener('transitionend', done, false);\n   * }}\n   * ```\n   */\n  addEndListener: PropTypes.func,\n\n  /**\n   * Callback fired before the \"entering\" status is applied. An extra parameter\n   * `isAppearing` is supplied to indicate if the enter stage is occurring on the initial mount\n   *\n   * @type Function(node: HtmlElement, isAppearing: bool) -> void\n   */\n  onEnter: PropTypes.func,\n\n  /**\n   * Callback fired after the \"entering\" status is applied. An extra parameter\n   * `isAppearing` is supplied to indicate if the enter stage is occurring on the initial mount\n   *\n   * @type Function(node: HtmlElement, isAppearing: bool)\n   */\n  onEntering: PropTypes.func,\n\n  /**\n   * Callback fired after the \"entered\" status is applied. An extra parameter\n   * `isAppearing` is supplied to indicate if the enter stage is occurring on the initial mount\n   *\n   * @type Function(node: HtmlElement, isAppearing: bool) -> void\n   */\n  onEntered: PropTypes.func,\n\n  /**\n   * Callback fired before the \"exiting\" status is applied.\n   *\n   * @type Function(node: HtmlElement) -> void\n   */\n  onExit: PropTypes.func,\n\n  /**\n   * Callback fired after the \"exiting\" status is applied.\n   *\n   * @type Function(node: HtmlElement) -> void\n   */\n  onExiting: PropTypes.func,\n\n  /**\n   * Callback fired after the \"exited\" status is applied.\n   *\n   * @type Function(node: HtmlElement) -> void\n   */\n  onExited: PropTypes.func // Name the function so it is clearer in the documentation\n\n} : {};\n\nfunction noop() {}\n\nTransition.defaultProps = {\n  in: false,\n  mountOnEnter: false,\n  unmountOnExit: false,\n  appear: false,\n  enter: true,\n  exit: true,\n  onEnter: noop,\n  onEntering: noop,\n  onEntered: noop,\n  onExit: noop,\n  onExiting: noop,\n  onExited: noop\n};\nTransition.UNMOUNTED = 0;\nTransition.EXITED = 1;\nTransition.ENTERING = 2;\nTransition.ENTERED = 3;\nTransition.EXITING = 4;\n\nvar _default = (0, _reactLifecyclesCompat.polyfill)(Transition);\n\nexports.default = _default;","/**\n * Copyright (c) 2013-present, Facebook, Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\n'use strict';\n\nvar ReactPropTypesSecret = require('./lib/ReactPropTypesSecret');\n\nfunction emptyFunction() {}\n\nmodule.exports = function() {\n  function shim(props, propName, componentName, location, propFullName, secret) {\n    if (secret === ReactPropTypesSecret) {\n      // It is still safe when called from React.\n      return;\n    }\n    var err = new Error(\n      'Calling PropTypes validators directly is not supported by the `prop-types` package. ' +\n      'Use PropTypes.checkPropTypes() to call them. ' +\n      'Read more at http://fb.me/use-check-prop-types'\n    );\n    err.name = 'Invariant Violation';\n    throw err;\n  };\n  shim.isRequired = shim;\n  function getShim() {\n    return shim;\n  };\n  // Important!\n  // Keep this list in sync with production version in `./factoryWithTypeCheckers.js`.\n  var ReactPropTypes = {\n    array: shim,\n    bool: shim,\n    func: shim,\n    number: shim,\n    object: shim,\n    string: shim,\n    symbol: shim,\n\n    any: shim,\n    arrayOf: getShim,\n    element: shim,\n    instanceOf: getShim,\n    node: shim,\n    objectOf: getShim,\n    oneOf: getShim,\n    oneOfType: getShim,\n    shape: getShim,\n    exact: getShim\n  };\n\n  ReactPropTypes.checkPropTypes = emptyFunction;\n  ReactPropTypes.PropTypes = ReactPropTypes;\n\n  return ReactPropTypes;\n};\n","/**\n * Copyright (c) 2013-present, Facebook, Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\n'use strict';\n\nvar ReactPropTypesSecret = 'SECRET_DO_NOT_PASS_THIS_OR_YOU_WILL_BE_FIRED';\n\nmodule.exports = ReactPropTypesSecret;\n","'use strict';\n\nexports.__esModule = true;\n\nvar _react = require('react');\n\nvar _react2 = _interopRequireDefault(_react);\n\nvar _propTypes = require('prop-types');\n\nvar _propTypes2 = _interopRequireDefault(_propTypes);\n\nvar _gud = require('gud');\n\nvar _gud2 = _interopRequireDefault(_gud);\n\nvar _warning = require('fbjs/lib/warning');\n\nvar _warning2 = _interopRequireDefault(_warning);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }\n\nvar MAX_SIGNED_31_BIT_INT = 1073741823;\n\n// Inlined Object.is polyfill.\n// https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Object/is\nfunction objectIs(x, y) {\n  if (x === y) {\n    return x !== 0 || 1 / x === 1 / y;\n  } else {\n    return x !== x && y !== y;\n  }\n}\n\nfunction createEventEmitter(value) {\n  var handlers = [];\n  return {\n    on: function on(handler) {\n      handlers.push(handler);\n    },\n    off: function off(handler) {\n      handlers = handlers.filter(function (h) {\n        return h !== handler;\n      });\n    },\n    get: function get() {\n      return value;\n    },\n    set: function set(newValue, changedBits) {\n      value = newValue;\n      handlers.forEach(function (handler) {\n        return handler(value, changedBits);\n      });\n    }\n  };\n}\n\nfunction onlyChild(children) {\n  return Array.isArray(children) ? children[0] : children;\n}\n\nfunction createReactContext(defaultValue, calculateChangedBits) {\n  var _Provider$childContex, _Consumer$contextType;\n\n  var contextProp = '__create-react-context-' + (0, _gud2.default)() + '__';\n\n  var Provider = function (_Component) {\n    _inherits(Provider, _Component);\n\n    function Provider() {\n      var _temp, _this, _ret;\n\n      _classCallCheck(this, Provider);\n\n      for (var _len = arguments.length, args = Array(_len), _key = 0; _key < _len; _key++) {\n        args[_key] = arguments[_key];\n      }\n\n      return _ret = (_temp = (_this = _possibleConstructorReturn(this, _Component.call.apply(_Component, [this].concat(args))), _this), _this.emitter = createEventEmitter(_this.props.value), _temp), _possibleConstructorReturn(_this, _ret);\n    }\n\n    Provider.prototype.getChildContext = function getChildContext() {\n      var _ref;\n\n      return _ref = {}, _ref[contextProp] = this.emitter, _ref;\n    };\n\n    Provider.prototype.componentWillReceiveProps = function componentWillReceiveProps(nextProps) {\n      if (this.props.value !== nextProps.value) {\n        var oldValue = this.props.value;\n        var newValue = nextProps.value;\n        var changedBits = void 0;\n\n        if (objectIs(oldValue, newValue)) {\n          changedBits = 0; // No change\n        } else {\n          changedBits = typeof calculateChangedBits === 'function' ? calculateChangedBits(oldValue, newValue) : MAX_SIGNED_31_BIT_INT;\n          if (process.env.NODE_ENV !== 'production') {\n            (0, _warning2.default)((changedBits & MAX_SIGNED_31_BIT_INT) === changedBits, 'calculateChangedBits: Expected the return value to be a ' + '31-bit integer. Instead received: %s', changedBits);\n          }\n\n          changedBits |= 0;\n\n          if (changedBits !== 0) {\n            this.emitter.set(nextProps.value, changedBits);\n          }\n        }\n      }\n    };\n\n    Provider.prototype.render = function render() {\n      return this.props.children;\n    };\n\n    return Provider;\n  }(_react.Component);\n\n  Provider.childContextTypes = (_Provider$childContex = {}, _Provider$childContex[contextProp] = _propTypes2.default.object.isRequired, _Provider$childContex);\n\n  var Consumer = function (_Component2) {\n    _inherits(Consumer, _Component2);\n\n    function Consumer() {\n      var _temp2, _this2, _ret2;\n\n      _classCallCheck(this, Consumer);\n\n      for (var _len2 = arguments.length, args = Array(_len2), _key2 = 0; _key2 < _len2; _key2++) {\n        args[_key2] = arguments[_key2];\n      }\n\n      return _ret2 = (_temp2 = (_this2 = _possibleConstructorReturn(this, _Component2.call.apply(_Component2, [this].concat(args))), _this2), _this2.state = {\n        value: _this2.getValue()\n      }, _this2.onUpdate = function (newValue, changedBits) {\n        var observedBits = _this2.observedBits | 0;\n        if ((observedBits & changedBits) !== 0) {\n          _this2.setState({ value: _this2.getValue() });\n        }\n      }, _temp2), _possibleConstructorReturn(_this2, _ret2);\n    }\n\n    Consumer.prototype.componentWillReceiveProps = function componentWillReceiveProps(nextProps) {\n      var observedBits = nextProps.observedBits;\n\n      this.observedBits = observedBits === undefined || observedBits === null ? MAX_SIGNED_31_BIT_INT // Subscribe to all changes by default\n      : observedBits;\n    };\n\n    Consumer.prototype.componentDidMount = function componentDidMount() {\n      if (this.context[contextProp]) {\n        this.context[contextProp].on(this.onUpdate);\n      }\n      var observedBits = this.props.observedBits;\n\n      this.observedBits = observedBits === undefined || observedBits === null ? MAX_SIGNED_31_BIT_INT // Subscribe to all changes by default\n      : observedBits;\n    };\n\n    Consumer.prototype.componentWillUnmount = function componentWillUnmount() {\n      if (this.context[contextProp]) {\n        this.context[contextProp].off(this.onUpdate);\n      }\n    };\n\n    Consumer.prototype.getValue = function getValue() {\n      if (this.context[contextProp]) {\n        return this.context[contextProp].get();\n      } else {\n        return defaultValue;\n      }\n    };\n\n    Consumer.prototype.render = function render() {\n      return onlyChild(this.props.children)(this.state.value);\n    };\n\n    return Consumer;\n  }(_react.Component);\n\n  Consumer.contextTypes = (_Consumer$contextType = {}, _Consumer$contextType[contextProp] = _propTypes2.default.object, _Consumer$contextType);\n\n\n  return {\n    Provider: Provider,\n    Consumer: Consumer\n  };\n}\n\nexports.default = createReactContext;\nmodule.exports = exports['default'];","// @flow\n'use strict';\n\nvar key = '__global_unique_id__';\n\nmodule.exports = function() {\n  return global[key] = (global[key] || 0) + 1;\n};\n","/**\n * Copyright (c) 2014-present, Facebook, Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n */\n\n'use strict';\n\nvar emptyFunction = require('./emptyFunction');\n\n/**\n * Similar to invariant but only logs a warning if the condition is not met.\n * This can be used to log issues in development environments in critical\n * paths. Removing the logging code for production environments will keep the\n * same logic and follow the same code paths.\n */\n\nvar warning = emptyFunction;\n\nif (process.env.NODE_ENV !== 'production') {\n  var printWarning = function printWarning(format) {\n    for (var _len = arguments.length, args = Array(_len > 1 ? _len - 1 : 0), _key = 1; _key < _len; _key++) {\n      args[_key - 1] = arguments[_key];\n    }\n\n    var argIndex = 0;\n    var message = 'Warning: ' + format.replace(/%s/g, function () {\n      return args[argIndex++];\n    });\n    if (typeof console !== 'undefined') {\n      console.error(message);\n    }\n    try {\n      // --- Welcome to debugging React ---\n      // This error was thrown as a convenience so that you can use this stack\n      // to find the callsite that caused this warning to fire.\n      throw new Error(message);\n    } catch (x) {}\n  };\n\n  warning = function warning(condition, format) {\n    if (format === undefined) {\n      throw new Error('`warning(condition, format, ...args)` requires a warning ' + 'message argument');\n    }\n\n    if (format.indexOf('Failed Composite propType: ') === 0) {\n      return; // Ignore CompositeComponent proptype check.\n    }\n\n    if (!condition) {\n      for (var _len2 = arguments.length, args = Array(_len2 > 2 ? _len2 - 2 : 0), _key2 = 2; _key2 < _len2; _key2++) {\n        args[_key2 - 2] = arguments[_key2];\n      }\n\n      printWarning.apply(undefined, [format].concat(args));\n    }\n  };\n}\n\nmodule.exports = warning;","\"use strict\";\n\n/**\n * Copyright (c) 2013-present, Facebook, Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * \n */\n\nfunction makeEmptyFunction(arg) {\n  return function () {\n    return arg;\n  };\n}\n\n/**\n * This function accepts and discards inputs; it has no side effects. This is\n * primarily useful idiomatically for overridable function endpoints which\n * always need to be callable, since JS lacks a null-call idiom ala Cocoa.\n */\nvar emptyFunction = function emptyFunction() {};\n\nemptyFunction.thatReturns = makeEmptyFunction;\nemptyFunction.thatReturnsFalse = makeEmptyFunction(false);\nemptyFunction.thatReturnsTrue = makeEmptyFunction(true);\nemptyFunction.thatReturnsNull = makeEmptyFunction(null);\nemptyFunction.thatReturnsThis = function () {\n  return this;\n};\nemptyFunction.thatReturnsArgument = function (arg) {\n  return arg;\n};\n\nmodule.exports = emptyFunction;","/**\n * Copyright (c) 2013-present, Facebook, Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nfunction componentWillMount() {\n  // Call this.constructor.gDSFP to support sub-classes.\n  var state = this.constructor.getDerivedStateFromProps(this.props, this.state);\n  if (state !== null && state !== undefined) {\n    this.setState(state);\n  }\n}\n\nfunction componentWillReceiveProps(nextProps) {\n  // Call this.constructor.gDSFP to support sub-classes.\n  // Use the setState() updater to ensure state isn't stale in certain edge cases.\n  function updater(prevState) {\n    var state = this.constructor.getDerivedStateFromProps(nextProps, prevState);\n    return state !== null && state !== undefined ? state : null;\n  }\n  // Binding \"this\" is important for shallow renderer support.\n  this.setState(updater.bind(this));\n}\n\nfunction componentWillUpdate(nextProps, nextState) {\n  try {\n    var prevProps = this.props;\n    var prevState = this.state;\n    this.props = nextProps;\n    this.state = nextState;\n    this.__reactInternalSnapshotFlag = true;\n    this.__reactInternalSnapshot = this.getSnapshotBeforeUpdate(\n      prevProps,\n      prevState\n    );\n  } finally {\n    this.props = prevProps;\n    this.state = prevState;\n  }\n}\n\n// React may warn about cWM/cWRP/cWU methods being deprecated.\n// Add a flag to suppress these warnings for this special case.\ncomponentWillMount.__suppressDeprecationWarning = true;\ncomponentWillReceiveProps.__suppressDeprecationWarning = true;\ncomponentWillUpdate.__suppressDeprecationWarning = true;\n\nfunction polyfill(Component) {\n  var prototype = Component.prototype;\n\n  if (!prototype || !prototype.isReactComponent) {\n    throw new Error('Can only polyfill class components');\n  }\n\n  if (\n    typeof Component.getDerivedStateFromProps !== 'function' &&\n    typeof prototype.getSnapshotBeforeUpdate !== 'function'\n  ) {\n    return Component;\n  }\n\n  // If new component APIs are defined, \"unsafe\" lifecycles won't be called.\n  // Error if any of these lifecycles are present,\n  // Because they would work differently between older and newer (16.3+) versions of React.\n  var foundWillMountName = null;\n  var foundWillReceivePropsName = null;\n  var foundWillUpdateName = null;\n  if (typeof prototype.componentWillMount === 'function') {\n    foundWillMountName = 'componentWillMount';\n  } else if (typeof prototype.UNSAFE_componentWillMount === 'function') {\n    foundWillMountName = 'UNSAFE_componentWillMount';\n  }\n  if (typeof prototype.componentWillReceiveProps === 'function') {\n    foundWillReceivePropsName = 'componentWillReceiveProps';\n  } else if (typeof prototype.UNSAFE_componentWillReceiveProps === 'function') {\n    foundWillReceivePropsName = 'UNSAFE_componentWillReceiveProps';\n  }\n  if (typeof prototype.componentWillUpdate === 'function') {\n    foundWillUpdateName = 'componentWillUpdate';\n  } else if (typeof prototype.UNSAFE_componentWillUpdate === 'function') {\n    foundWillUpdateName = 'UNSAFE_componentWillUpdate';\n  }\n  if (\n    foundWillMountName !== null ||\n    foundWillReceivePropsName !== null ||\n    foundWillUpdateName !== null\n  ) {\n    var componentName = Component.displayName || Component.name;\n    var newApiName =\n      typeof Component.getDerivedStateFromProps === 'function'\n        ? 'getDerivedStateFromProps()'\n        : 'getSnapshotBeforeUpdate()';\n\n    throw Error(\n      'Unsafe legacy lifecycles will not be called for components using new component APIs.\\n\\n' +\n        componentName +\n        ' uses ' +\n        newApiName +\n        ' but also contains the following legacy lifecycles:' +\n        (foundWillMountName !== null ? '\\n  ' + foundWillMountName : '') +\n        (foundWillReceivePropsName !== null\n          ? '\\n  ' + foundWillReceivePropsName\n          : '') +\n        (foundWillUpdateName !== null ? '\\n  ' + foundWillUpdateName : '') +\n        '\\n\\nThe above lifecycles should be removed. Learn more about this warning here:\\n' +\n        'https://fb.me/react-async-component-lifecycle-hooks'\n    );\n  }\n\n  // React <= 16.2 does not support static getDerivedStateFromProps.\n  // As a workaround, use cWM and cWRP to invoke the new static lifecycle.\n  // Newer versions of React will ignore these lifecycles if gDSFP exists.\n  if (typeof Component.getDerivedStateFromProps === 'function') {\n    prototype.componentWillMount = componentWillMount;\n    prototype.componentWillReceiveProps = componentWillReceiveProps;\n  }\n\n  // React <= 16.2 does not support getSnapshotBeforeUpdate.\n  // As a workaround, use cWU to invoke the new lifecycle.\n  // Newer versions of React will ignore that lifecycle if gSBU exists.\n  if (typeof prototype.getSnapshotBeforeUpdate === 'function') {\n    if (typeof prototype.componentDidUpdate !== 'function') {\n      throw new Error(\n        'Cannot polyfill getSnapshotBeforeUpdate() for components that do not define componentDidUpdate() on the prototype'\n      );\n    }\n\n    prototype.componentWillUpdate = componentWillUpdate;\n\n    var componentDidUpdate = prototype.componentDidUpdate;\n\n    prototype.componentDidUpdate = function componentDidUpdatePolyfill(\n      prevProps,\n      prevState,\n      maybeSnapshot\n    ) {\n      // 16.3+ will not execute our will-update method;\n      // It will pass a snapshot value to did-update though.\n      // Older versions will require our polyfilled will-update value.\n      // We need to handle both cases, but can't just check for the presence of \"maybeSnapshot\",\n      // Because for <= 15.x versions this might be a \"prevContext\" object.\n      // We also can't just check \"__reactInternalSnapshot\",\n      // Because get-snapshot might return a falsy value.\n      // So check for the explicit __reactInternalSnapshotFlag flag to determine behavior.\n      var snapshot = this.__reactInternalSnapshotFlag\n        ? this.__reactInternalSnapshot\n        : maybeSnapshot;\n\n      componentDidUpdate.call(this, prevProps, prevState, snapshot);\n    };\n  }\n\n  return Component;\n}\n\nexport { polyfill };\n","\"use strict\";\n\nexports.__esModule = true;\nexports.transitionTimeout = transitionTimeout;\nexports.classNamesShape = exports.timeoutsShape = void 0;\n\nvar _propTypes = _interopRequireDefault(require(\"prop-types\"));\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nfunction transitionTimeout(transitionType) {\n  var timeoutPropName = 'transition' + transitionType + 'Timeout';\n  var enabledPropName = 'transition' + transitionType;\n  return function (props) {\n    // If the transition is enabled\n    if (props[enabledPropName]) {\n      // If no timeout duration is provided\n      if (props[timeoutPropName] == null) {\n        return new Error(timeoutPropName + ' wasn\\'t supplied to CSSTransitionGroup: ' + 'this can cause unreliable animations and won\\'t be supported in ' + 'a future version of React. See ' + 'https://fb.me/react-animation-transition-group-timeout for more ' + 'information.'); // If the duration isn't a number\n      } else if (typeof props[timeoutPropName] !== 'number') {\n        return new Error(timeoutPropName + ' must be a number (in milliseconds)');\n      }\n    }\n\n    return null;\n  };\n}\n\nvar timeoutsShape = _propTypes.default.oneOfType([_propTypes.default.number, _propTypes.default.shape({\n  enter: _propTypes.default.number,\n  exit: _propTypes.default.number\n}).isRequired]);\n\nexports.timeoutsShape = timeoutsShape;\n\nvar classNamesShape = _propTypes.default.oneOfType([_propTypes.default.string, _propTypes.default.shape({\n  enter: _propTypes.default.string,\n  exit: _propTypes.default.string,\n  active: _propTypes.default.string\n}), _propTypes.default.shape({\n  enter: _propTypes.default.string,\n  enterDone: _propTypes.default.string,\n  enterActive: _propTypes.default.string,\n  exit: _propTypes.default.string,\n  exitDone: _propTypes.default.string,\n  exitActive: _propTypes.default.string\n})]);\n\nexports.classNamesShape = classNamesShape;","/**\n * Grafana-Zabbix\n * Zabbix plugin for Grafana.\n * http://github.com/alexanderzobnin/grafana-zabbix\n *\n * Trigger panel.\n * This feature sponsored by CORE IT\n * http://www.coreit.fr\n *\n * Copyright 2015 Alexander Zobnin alexanderzobnin@gmail.com\n * Licensed under the Apache License, Version 2.0\n */\n\nclass TriggerPanelOptionsCtrl {\n\n  /** @ngInject */\n  constructor($scope) {\n    $scope.editor = this;\n    this.panelCtrl = $scope.ctrl;\n    this.panel = this.panelCtrl.panel;\n\n    this.layouts = [\n      { text: 'Table', value: 'table' },\n      { text: 'List',  value: 'list' }\n    ];\n    this.fontSizes = ['80%', '90%', '100%', '110%', '120%', '130%', '150%', '160%', '180%', '200%', '220%', '250%'];\n    this.ackFilters = [\n      'all triggers',\n      'unacknowledged',\n      'acknowledged'\n    ];\n    this.sortByFields = [\n      { text: 'last change', value: 'lastchange' },\n      { text: 'severity',    value: 'priority' }\n    ];\n    this.showEventsFields = [\n      { text: 'All',      value: [0,1] },\n      { text: 'OK',       value: [0] },\n      { text: 'Problems', value: 1 }\n    ];\n  }\n}\n\nexport function triggerPanelOptionsTab() {\n  return {\n    restrict: 'E',\n    scope: true,\n    templateUrl: 'public/plugins/alexanderzobnin-zabbix-app/panel-triggers/partials/options_tab.html',\n    controller: TriggerPanelOptionsCtrl,\n  };\n}\n","import _ from 'lodash';\nimport * as utils from '../datasource-zabbix/utils';\nimport { getDefaultTarget } from './triggers_panel_ctrl';\n\nclass TriggersTabCtrl {\n\n  /** @ngInject */\n  constructor($scope, $rootScope, uiSegmentSrv, templateSrv) {\n    $scope.editor = this;\n    this.panelCtrl = $scope.ctrl;\n    this.panel = this.panelCtrl.panel;\n    this.templateSrv = templateSrv;\n    this.datasources = {};\n\n    // Load scope defaults\n    var scopeDefaults = {\n      getGroupNames: {},\n      getHostNames: {},\n      getApplicationNames: {},\n      getProxyNames: {},\n      oldTarget: _.cloneDeep(this.panel.targets)\n    };\n    _.defaultsDeep(this, scopeDefaults);\n    this.selectedDatasources = this.getSelectedDatasources();\n\n    this.initDatasources();\n    this.panelCtrl.refresh();\n  }\n\n  initDatasources() {\n    return this.panelCtrl.initDatasources()\n    .then((datasources) => {\n      _.each(datasources, (datasource) => {\n        this.datasources[datasource.name] = datasource;\n        this.bindSuggestionFunctions(datasource);\n      });\n    });\n  }\n\n  bindSuggestionFunctions(datasource) {\n    // Map functions for bs-typeahead\n    let ds = datasource.name;\n    this.getGroupNames[ds] = _.bind(this.suggestGroups, this, datasource);\n    this.getHostNames[ds] = _.bind(this.suggestHosts, this, datasource);\n    this.getApplicationNames[ds] = _.bind(this.suggestApps, this, datasource);\n    this.getProxyNames[ds] = _.bind(this.suggestProxies, this, datasource);\n  }\n\n  getSelectedDatasources() {\n    return _.compact(this.panel.targets.map(target => target.datasource));\n  }\n\n  suggestGroups(datasource, query, callback) {\n    return datasource.zabbix.getAllGroups()\n    .then(groups => {\n      return _.map(groups, 'name');\n    })\n    .then(callback);\n  }\n\n  suggestHosts(datasource, query, callback) {\n    const target = this.panel.targets.find(t => t.datasource === datasource.name);\n    let groupFilter = datasource.replaceTemplateVars(target.group.filter);\n    return datasource.zabbix.getAllHosts(groupFilter)\n    .then(hosts => {\n      return _.map(hosts, 'name');\n    })\n    .then(callback);\n  }\n\n  suggestApps(datasource, query, callback) {\n    const target = this.panel.targets.find(t => t.datasource === datasource.name);\n    let groupFilter = datasource.replaceTemplateVars(target.group.filter);\n    let hostFilter = datasource.replaceTemplateVars(target.host.filter);\n    return datasource.zabbix.getAllApps(groupFilter, hostFilter)\n    .then(apps => {\n      return _.map(apps, 'name');\n    })\n    .then(callback);\n  }\n\n  suggestProxies(datasource, query, callback) {\n    return datasource.zabbix.getProxies()\n    .then(proxies => _.map(proxies, 'host'))\n    .then(callback);\n  }\n\n  datasourcesChanged() {\n    const newTargets = [];\n    _.each(this.selectedDatasources, (ds) => {\n      const dsTarget = this.panel.targets.find((target => target.datasource === ds));\n      if (dsTarget) {\n        newTargets.push(dsTarget);\n      } else {\n        const newTarget = getDefaultTarget(this.panel.targets);\n        newTarget.datasource = ds;\n        newTargets.push(newTarget);\n      }\n      this.panel.targets = newTargets;\n    });\n    this.parseTarget();\n  }\n\n  parseTarget() {\n    this.initDatasources()\n    .then(() => {\n      var newTarget = _.cloneDeep(this.panel.targets);\n      if (!_.isEqual(this.oldTarget, newTarget)) {\n        this.oldTarget = newTarget;\n        this.panelCtrl.refresh();\n      }\n    });\n  }\n\n  isRegex(str) {\n    return utils.isRegex(str);\n  }\n\n  isVariable(str) {\n    return utils.isTemplateVariable(str, this.templateSrv.variables);\n  }\n}\n\nexport function triggerPanelTriggersTab() {\n  return {\n    restrict: 'E',\n    scope: true,\n    templateUrl: 'public/plugins/alexanderzobnin-zabbix-app/panel-triggers/partials/triggers_tab.html',\n    controller: TriggersTabCtrl,\n  };\n}\n","import _ from 'lodash';\nimport moment from 'moment';\nimport { DataQuery } from '@grafana/ui/';\nimport * as utils from '../datasource-zabbix/utils';\nimport { ZBXTrigger } from './types';\n\nexport function isNewProblem(problem: ZBXTrigger, highlightNewerThan: string): boolean {\n  try {\n    const highlightIntervalMs = utils.parseInterval(highlightNewerThan);\n    const durationSec = (Date.now() - problem.lastchangeUnix * 1000);\n    return durationSec < highlightIntervalMs;\n  } catch (e) {\n    return false;\n  }\n}\n\nconst DEFAULT_TIME_FORMAT = \"DD MMM YYYY HH:mm:ss\";\n\nexport function formatLastChange(lastchangeUnix: number, customFormat?: string) {\n  const timestamp = moment.unix(lastchangeUnix);\n  const format = customFormat || DEFAULT_TIME_FORMAT;\n  const lastchange = timestamp.format(format);\n  return lastchange;\n}\n\nexport const getNextRefIdChar = (queries: DataQuery[]): string => {\n  const letters = 'ABCDEFGHIJKLMNOPQRSTUVWXYZ';\n\n  return _.find(letters, refId => {\n    return _.every(queries, other => {\n      return other.refId !== refId;\n    });\n  });\n};\n","import _ from 'lodash';\nimport { getNextRefIdChar } from './utils';\nimport { getDefaultTarget } from './triggers_panel_ctrl';\n\n// Actual schema version\nexport const CURRENT_SCHEMA_VERSION = 7;\n\nexport function migratePanelSchema(panel) {\n  if (isEmptyPanel(panel)) {\n    delete panel.targets;\n    return panel;\n  }\n\n  const schemaVersion = getSchemaVersion(panel);\n  panel.schemaVersion = CURRENT_SCHEMA_VERSION;\n\n  if (schemaVersion < 2) {\n    panel.datasources = [panel.datasource];\n    panel.targets = {};\n    panel.targets[panel.datasources[0]] = panel.triggers;\n\n    // delete old props\n    delete panel.triggers;\n    delete panel.datasource;\n  }\n\n  if (schemaVersion < 3) {\n    // delete old props\n    delete panel.lastChangeField;\n    delete panel.infoField;\n    delete panel.scroll;\n    delete panel.hideHostsInMaintenance;\n  }\n\n  if (schemaVersion < 5) {\n    if (panel.targets && !_.isEmpty(panel.targets)) {\n      _.each(panel.targets, (target) => {\n        _.defaultsDeep(target, getDefaultTarget());\n      });\n    }\n  }\n\n  if (schemaVersion < 6) {\n    if (panel.showEvents && panel.showEvents.value === '1') {\n      panel.showEvents.value = 1;\n    }\n  }\n\n  if (schemaVersion < 7) {\n    const updatedTargets = [];\n    for (const targetKey in panel.targets) {\n      const target = panel.targets[targetKey];\n      if (!isEmptyTarget(target) && !isInvalidTarget(target, targetKey)) {\n        updatedTargets.push({\n          ...target,\n          datasource: targetKey,\n        });\n      }\n    }\n    for (const target of updatedTargets) {\n      if (!target.refId) {\n        target.refId = getNextRefIdChar(updatedTargets);\n      }\n    }\n    panel.targets = updatedTargets;\n    delete panel.datasources;\n  }\n\n  return panel;\n}\n\nfunction getSchemaVersion(panel) {\n  return panel.schemaVersion || 1;\n}\n\nfunction isEmptyPanel(panel) {\n  return !panel.datasource && !panel.datasources && !panel.triggers && isEmptyTargets(panel.targets);\n}\n\nfunction isEmptyTargets(targets) {\n  return !targets || (_.isArray(targets) && (targets.length === 0 || targets.length === 1 && _.isEmpty(targets[0])));\n}\n\nfunction isEmptyTarget(target) {\n  return !target || !(target.group && target.host && target.application && target.trigger);\n}\n\nfunction isInvalidTarget(target, targetKey) {\n  return target && target.refId === 'A' && targetKey === '0';\n}\n","import React from 'react'\nimport classnames from 'classnames'\n//\nexport default {\n  get,\n  set,\n  takeRight,\n  last,\n  orderBy,\n  range,\n  remove,\n  clone,\n  getFirstDefined,\n  sum,\n  makeTemplateComponent,\n  groupBy,\n  isArray,\n  splitProps,\n  compactObject,\n  isSortingDesc,\n  normalizeComponent,\n  asPx,\n}\n\nfunction get (obj, path, def) {\n  if (!path) {\n    return obj\n  }\n  const pathObj = makePathArray(path)\n  let val\n  try {\n    val = pathObj.reduce((current, pathPart) => current[pathPart], obj)\n  } catch (e) {\n    // continue regardless of error\n  }\n  return typeof val !== 'undefined' ? val : def\n}\n\nfunction set (obj = {}, path, value) {\n  const keys = makePathArray(path)\n  let keyPart\n  let cursor = obj\n  while ((keyPart = keys.shift()) && keys.length) {\n    if (!cursor[keyPart]) {\n      cursor[keyPart] = {}\n    }\n    cursor = cursor[keyPart]\n  }\n  cursor[keyPart] = value\n  return obj\n}\n\nfunction takeRight (arr, n) {\n  const start = n > arr.length ? 0 : arr.length - n\n  return arr.slice(start)\n}\n\nfunction last (arr) {\n  return arr[arr.length - 1]\n}\n\nfunction range (n) {\n  const arr = []\n  for (let i = 0; i < n; i += 1) {\n    arr.push(n)\n  }\n  return arr\n}\n\nfunction orderBy (arr, funcs, dirs, indexKey) {\n  return arr.sort((rowA, rowB) => {\n    for (let i = 0; i < funcs.length; i += 1) {\n      const comp = funcs[i]\n      const desc = dirs[i] === false || dirs[i] === 'desc'\n      const sortInt = comp(rowA, rowB)\n      if (sortInt) {\n        return desc ? -sortInt : sortInt\n      }\n    }\n    // Use the row index for tie breakers\n    return dirs[0] ? rowA[indexKey] - rowB[indexKey] : rowB[indexKey] - rowA[indexKey]\n  })\n}\n\nfunction remove (a, b) {\n  return a.filter((o, i) => {\n    const r = b(o)\n    if (r) {\n      a.splice(i, 1)\n      return true\n    }\n    return false\n  })\n}\n\nfunction clone (a) {\n  try {\n    return JSON.parse(\n      JSON.stringify(a, (key, value) => {\n        if (typeof value === 'function') {\n          return value.toString()\n        }\n        return value\n      })\n    )\n  } catch (e) {\n    return a\n  }\n}\n\nfunction getFirstDefined (...args) {\n  for (let i = 0; i < args.length; i += 1) {\n    if (typeof args[i] !== 'undefined') {\n      return args[i]\n    }\n  }\n}\n\nfunction sum (arr) {\n  return arr.reduce((a, b) => a + b, 0)\n}\n\nfunction makeTemplateComponent (compClass, displayName) {\n  if (!displayName) {\n    throw new Error('No displayName found for template component:', compClass)\n  }\n  const cmp = ({ children, className, ...rest }) => (\n    <div className={classnames(compClass, className)} {...rest}>\n      {children}\n    </div>\n  )\n  cmp.displayName = displayName\n  return cmp\n}\n\nfunction groupBy (xs, key) {\n  return xs.reduce((rv, x, i) => {\n    const resKey = typeof key === 'function' ? key(x, i) : x[key]\n    rv[resKey] = isArray(rv[resKey]) ? rv[resKey] : []\n    rv[resKey].push(x)\n    return rv\n  }, {})\n}\n\nfunction asPx (value) {\n  value = Number(value)\n  return Number.isNaN(value) ? null : `${value}px`\n}\n\nfunction isArray (a) {\n  return Array.isArray(a)\n}\n\n// ########################################################################\n// Non-exported Helpers\n// ########################################################################\n\nfunction makePathArray (obj) {\n  return flattenDeep(obj)\n    .join('.')\n    .replace(/\\[/g, '.')\n    .replace(/\\]/g, '')\n    .split('.')\n}\n\nfunction flattenDeep (arr, newArr = []) {\n  if (!isArray(arr)) {\n    newArr.push(arr)\n  } else {\n    for (let i = 0; i < arr.length; i += 1) {\n      flattenDeep(arr[i], newArr)\n    }\n  }\n  return newArr\n}\n\nfunction splitProps ({ className, style, ...rest }) {\n  return {\n    className,\n    style,\n    rest: rest || {},\n  }\n}\n\nfunction compactObject (obj) {\n  const newObj = {}\n  if (obj) {\n    Object.keys(obj).map(key => {\n      if (\n        Object.prototype.hasOwnProperty.call(obj, key) &&\n        obj[key] !== undefined &&\n        typeof obj[key] !== 'undefined'\n      ) {\n        newObj[key] = obj[key]\n      }\n      return true\n    })\n  }\n  return newObj\n}\n\nfunction isSortingDesc (d) {\n  return !!(d.sort === 'desc' || d.desc === true || d.asc === false)\n}\n\nfunction normalizeComponent (Comp, params = {}, fallback = Comp) {\n  return typeof Comp === 'function' ? (\n    Object.getPrototypeOf(Comp).isReactComponent ? (\n      <Comp {...params} />\n    ) : (\n      Comp(params)\n    )\n  ) : (\n    fallback\n  )\n}\n","import React, { Component } from 'react'\nimport classnames from 'classnames'\n//\n// import _ from './utils'\n\nconst defaultButton = props => (\n  <button type=\"button\" {...props} className=\"-btn\">\n    {props.children}\n  </button>\n)\n\nexport default class ReactTablePagination extends Component {\n  constructor (props) {\n    super()\n\n    this.getSafePage = this.getSafePage.bind(this)\n    this.changePage = this.changePage.bind(this)\n    this.applyPage = this.applyPage.bind(this)\n\n    this.state = {\n      page: props.page,\n    }\n  }\n\n  componentWillReceiveProps (nextProps) {\n    this.setState({ page: nextProps.page })\n  }\n\n  getSafePage (page) {\n    if (Number.isNaN(page)) {\n      page = this.props.page\n    }\n    return Math.min(Math.max(page, 0), this.props.pages - 1)\n  }\n\n  changePage (page) {\n    page = this.getSafePage(page)\n    this.setState({ page })\n    if (this.props.page !== page) {\n      this.props.onPageChange(page)\n    }\n  }\n\n  applyPage (e) {\n    if (e) {\n      e.preventDefault()\n    }\n    const page = this.state.page\n    this.changePage(page === '' ? this.props.page : page)\n  }\n\n  render () {\n    const {\n      // Computed\n      pages,\n      // Props\n      page,\n      showPageSizeOptions,\n      pageSizeOptions,\n      pageSize,\n      showPageJump,\n      canPrevious,\n      canNext,\n      onPageSizeChange,\n      className,\n      PreviousComponent = defaultButton,\n      NextComponent = defaultButton,\n    } = this.props\n\n    return (\n      <div className={classnames(className, '-pagination')} style={this.props.style}>\n        <div className=\"-previous\">\n          <PreviousComponent\n            onClick={() => {\n              if (!canPrevious) return\n              this.changePage(page - 1)\n            }}\n            disabled={!canPrevious}\n          >\n            {this.props.previousText}\n          </PreviousComponent>\n        </div>\n        <div className=\"-center\">\n          <span className=\"-pageInfo\">\n            {this.props.pageText}{' '}\n            {showPageJump ? (\n              <div className=\"-pageJump\">\n                <input\n                  type={this.state.page === '' ? 'text' : 'number'}\n                  onChange={e => {\n                    const val = e.target.value\n                    const page = val - 1\n                    if (val === '') {\n                      return this.setState({ page: val })\n                    }\n                    this.setState({ page: this.getSafePage(page) })\n                  }}\n                  value={this.state.page === '' ? '' : this.state.page + 1}\n                  onBlur={this.applyPage}\n                  onKeyPress={e => {\n                    if (e.which === 13 || e.keyCode === 13) {\n                      this.applyPage()\n                    }\n                  }}\n                />\n              </div>\n            ) : (\n              <span className=\"-currentPage\">{page + 1}</span>\n            )}{' '}\n            {this.props.ofText} <span className=\"-totalPages\">{pages || 1}</span>\n          </span>\n          {showPageSizeOptions && (\n            <span className=\"select-wrap -pageSizeOptions\">\n              <select onChange={e => onPageSizeChange(Number(e.target.value))} value={pageSize}>\n                {pageSizeOptions.map((option, i) => (\n                  // eslint-disable-next-line react/no-array-index-key\n                  <option key={i} value={option}>\n                    {option} {this.props.rowsText}\n                  </option>\n                ))}\n              </select>\n            </span>\n          )}\n        </div>\n        <div className=\"-next\">\n          <NextComponent\n            onClick={() => {\n              if (!canNext) return\n              this.changePage(page + 1)\n            }}\n            disabled={!canNext}\n          >\n            {this.props.nextText}\n          </NextComponent>\n        </div>\n      </div>\n    )\n  }\n}\n","import React from 'react'\nimport classnames from 'classnames'\n//\nimport _ from './utils'\nimport Pagination from './pagination'\n\nconst emptyObj = () => ({})\n\nexport default {\n  // General\n  data: [],\n  resolveData: data => data,\n  loading: false,\n  showPagination: true,\n  showPaginationTop: false,\n  showPaginationBottom: true,\n  showPageSizeOptions: true,\n  pageSizeOptions: [5, 10, 20, 25, 50, 100],\n  defaultPageSize: 20,\n  showPageJump: true,\n  collapseOnSortingChange: true,\n  collapseOnPageChange: true,\n  collapseOnDataChange: true,\n  freezeWhenExpanded: false,\n  sortable: true,\n  multiSort: true,\n  resizable: true,\n  filterable: false,\n  defaultSortDesc: false,\n  defaultSorted: [],\n  defaultFiltered: [],\n  defaultResized: [],\n  defaultExpanded: {},\n  // eslint-disable-next-line no-unused-vars\n  defaultFilterMethod: (filter, row, column) => {\n    const id = filter.pivotId || filter.id\n    return row[id] !== undefined ? String(row[id]).startsWith(filter.value) : true\n  },\n  // eslint-disable-next-line no-unused-vars\n  defaultSortMethod: (a, b, desc) => {\n    // force null and undefined to the bottom\n    a = a === null || a === undefined ? '' : a\n    b = b === null || b === undefined ? '' : b\n    // force any string values to lowercase\n    a = typeof a === 'string' ? a.toLowerCase() : a\n    b = typeof b === 'string' ? b.toLowerCase() : b\n    // Return either 1 or -1 to indicate a sort priority\n    if (a > b) {\n      return 1\n    }\n    if (a < b) {\n      return -1\n    }\n    // returning 0, undefined or any falsey value will use subsequent sorts or\n    // the index as a tiebreaker\n    return 0\n  },\n\n  // Controlled State Props\n  // page: undefined,\n  // pageSize: undefined,\n  // sorted: [],\n  // filtered: [],\n  // resized: [],\n  // expanded: {},\n\n  // Controlled State Callbacks\n  onPageChange: undefined,\n  onPageSizeChange: undefined,\n  onSortedChange: undefined,\n  onFilteredChange: undefined,\n  onResizedChange: undefined,\n  onExpandedChange: undefined,\n\n  // Pivoting\n  pivotBy: undefined,\n\n  // Key Constants\n  pivotValKey: '_pivotVal',\n  pivotIDKey: '_pivotID',\n  subRowsKey: '_subRows',\n  aggregatedKey: '_aggregated',\n  nestingLevelKey: '_nestingLevel',\n  originalKey: '_original',\n  indexKey: '_index',\n  groupedByPivotKey: '_groupedByPivot',\n\n  // Server-side Callbacks\n  onFetchData: () => null,\n\n  // Classes\n  className: '',\n  style: {},\n\n  // Component decorators\n  getProps: emptyObj,\n  getTableProps: emptyObj,\n  getTheadGroupProps: emptyObj,\n  getTheadGroupTrProps: emptyObj,\n  getTheadGroupThProps: emptyObj,\n  getTheadProps: emptyObj,\n  getTheadTrProps: emptyObj,\n  getTheadThProps: emptyObj,\n  getTheadFilterProps: emptyObj,\n  getTheadFilterTrProps: emptyObj,\n  getTheadFilterThProps: emptyObj,\n  getTbodyProps: emptyObj,\n  getTrGroupProps: emptyObj,\n  getTrProps: emptyObj,\n  getTdProps: emptyObj,\n  getTfootProps: emptyObj,\n  getTfootTrProps: emptyObj,\n  getTfootTdProps: emptyObj,\n  getPaginationProps: emptyObj,\n  getLoadingProps: emptyObj,\n  getNoDataProps: emptyObj,\n  getResizerProps: emptyObj,\n\n  // Global Column Defaults\n  column: {\n    // Renderers\n    Cell: undefined,\n    Header: undefined,\n    Footer: undefined,\n    Aggregated: undefined,\n    Pivot: undefined,\n    PivotValue: undefined,\n    Expander: undefined,\n    Filter: undefined,\n    // All Columns\n    sortable: undefined, // use table default\n    resizable: undefined, // use table default\n    filterable: undefined, // use table default\n    show: true,\n    minWidth: 100,\n    // Cells only\n    className: '',\n    style: {},\n    getProps: emptyObj,\n    // Pivot only\n    aggregate: undefined,\n    // Headers only\n    headerClassName: '',\n    headerStyle: {},\n    getHeaderProps: emptyObj,\n    // Footers only\n    footerClassName: '',\n    footerStyle: {},\n    getFooterProps: emptyObj,\n    filterMethod: undefined,\n    filterAll: false,\n    sortMethod: undefined,\n  },\n\n  // Global Expander Column Defaults\n  expanderDefaults: {\n    sortable: false,\n    resizable: false,\n    filterable: false,\n    width: 35,\n  },\n\n  pivotDefaults: {\n    // extend the defaults for pivoted columns here\n  },\n\n  // Text\n  previousText: 'Previous',\n  nextText: 'Next',\n  loadingText: 'Loading...',\n  noDataText: 'No rows found',\n  pageText: 'Page',\n  ofText: 'of',\n  rowsText: 'rows',\n\n  // Components\n  TableComponent: ({ children, className, ...rest }) => (\n    <div\n      className={classnames('rt-table', className)}\n      role=\"grid\"\n      // tabIndex='0'\n      {...rest}\n    >\n      {children}\n    </div>\n  ),\n  TheadComponent: _.makeTemplateComponent('rt-thead', 'Thead'),\n  TbodyComponent: _.makeTemplateComponent('rt-tbody', 'Tbody'),\n  TrGroupComponent: ({ children, className, ...rest }) => (\n    <div className={classnames('rt-tr-group', className)} role=\"rowgroup\" {...rest}>\n      {children}\n    </div>\n  ),\n  TrComponent: ({ children, className, ...rest }) => (\n    <div className={classnames('rt-tr', className)} role=\"row\" {...rest}>\n      {children}\n    </div>\n  ),\n  ThComponent: ({\n    toggleSort, className, children, ...rest\n  }) => (\n    // eslint-disable-next-line jsx-a11y/click-events-have-key-events\n    <div\n      className={classnames('rt-th', className)}\n      onClick={e => toggleSort && toggleSort(e)}\n      role=\"columnheader\"\n      tabIndex=\"-1\" // Resolves eslint issues without implementing keyboard navigation incorrectly\n      {...rest}\n    >\n      {children}\n    </div>\n  ),\n  TdComponent: ({\n    toggleSort, className, children, ...rest\n  }) => (\n    <div className={classnames('rt-td', className)} role=\"gridcell\" {...rest}>\n      {children}\n    </div>\n  ),\n  TfootComponent: _.makeTemplateComponent('rt-tfoot', 'Tfoot'),\n  FilterComponent: ({ filter, onChange }) => (\n    <input\n      type=\"text\"\n      style={{\n        width: '100%',\n      }}\n      value={filter ? filter.value : ''}\n      onChange={event => onChange(event.target.value)}\n    />\n  ),\n  ExpanderComponent: ({ isExpanded }) => (\n    <div className={classnames('rt-expander', isExpanded && '-open')}>&bull;</div>\n  ),\n  PivotValueComponent: ({ subRows, value }) => (\n    <span>\n      {value} {subRows && `(${subRows.length})`}\n    </span>\n  ),\n  AggregatedComponent: ({ subRows, column }) => {\n    const previewValues = subRows.filter(d => typeof d[column.id] !== 'undefined').map((row, i) => (\n      // eslint-disable-next-line react/no-array-index-key\n      <span key={i}>\n        {row[column.id]}\n        {i < subRows.length - 1 ? ', ' : ''}\n      </span>\n    ))\n    return <span>{previewValues}</span>\n  },\n  PivotComponent: undefined, // this is a computed default generated using\n  // the ExpanderComponent and PivotValueComponent at run-time in methods.js\n  PaginationComponent: Pagination,\n  PreviousComponent: undefined,\n  NextComponent: undefined,\n  LoadingComponent: ({\n    className, loading, loadingText, ...rest\n  }) => (\n    <div className={classnames('-loading', { '-active': loading }, className)} {...rest}>\n      <div className=\"-loading-inner\">{loadingText}</div>\n    </div>\n  ),\n  NoDataComponent: _.makeTemplateComponent('rt-noData', 'NoData'),\n  ResizerComponent: _.makeTemplateComponent('rt-resizer', 'Resizer'),\n  PadRowComponent: () => <span>&nbsp;</span>,\n}\n","import PropTypes from 'prop-types'\n\nexport default {\n  // General\n  data: PropTypes.any,\n  loading: PropTypes.bool,\n  showPagination: PropTypes.bool,\n  showPaginationTop: PropTypes.bool,\n  showPaginationBottom: PropTypes.bool,\n  showPageSizeOptions: PropTypes.bool,\n  pageSizeOptions: PropTypes.array,\n  defaultPageSize: PropTypes.number,\n  showPageJump: PropTypes.bool,\n  collapseOnSortingChange: PropTypes.bool,\n  collapseOnPageChange: PropTypes.bool,\n  collapseOnDataChange: PropTypes.bool,\n  freezeWhenExpanded: PropTypes.bool,\n  sortable: PropTypes.bool,\n  resizable: PropTypes.bool,\n  filterable: PropTypes.bool,\n  defaultSortDesc: PropTypes.bool,\n  defaultSorted: PropTypes.array,\n  defaultFiltered: PropTypes.array,\n  defaultResized: PropTypes.array,\n  defaultExpanded: PropTypes.object,\n  defaultFilterMethod: PropTypes.func,\n  defaultSortMethod: PropTypes.func,\n\n  // Controlled State Callbacks\n  onPageChange: PropTypes.func,\n  onPageSizeChange: PropTypes.func,\n  onSortedChange: PropTypes.func,\n  onFilteredChange: PropTypes.func,\n  onResizedChange: PropTypes.func,\n  onExpandedChange: PropTypes.func,\n\n  // Pivoting\n  pivotBy: PropTypes.array,\n\n  // Key Constants\n  pivotValKey: PropTypes.string,\n  pivotIDKey: PropTypes.string,\n  subRowsKey: PropTypes.string,\n  aggregatedKey: PropTypes.string,\n  nestingLevelKey: PropTypes.string,\n  originalKey: PropTypes.string,\n  indexKey: PropTypes.string,\n  groupedByPivotKey: PropTypes.string,\n\n  // Server-side Callbacks\n  onFetchData: PropTypes.func,\n\n  // Classes\n  className: PropTypes.string,\n  style: PropTypes.object,\n\n  // Component decorators\n  getProps: PropTypes.func,\n  getTableProps: PropTypes.func,\n  getTheadGroupProps: PropTypes.func,\n  getTheadGroupTrProps: PropTypes.func,\n  getTheadGroupThProps: PropTypes.func,\n  getTheadProps: PropTypes.func,\n  getTheadTrProps: PropTypes.func,\n  getTheadThProps: PropTypes.func,\n  getTheadFilterProps: PropTypes.func,\n  getTheadFilterTrProps: PropTypes.func,\n  getTheadFilterThProps: PropTypes.func,\n  getTbodyProps: PropTypes.func,\n  getTrGroupProps: PropTypes.func,\n  getTrProps: PropTypes.func,\n  getTdProps: PropTypes.func,\n  getTfootProps: PropTypes.func,\n  getTfootTrProps: PropTypes.func,\n  getTfootTdProps: PropTypes.func,\n  getPaginationProps: PropTypes.func,\n  getLoadingProps: PropTypes.func,\n  getNoDataProps: PropTypes.func,\n  getResizerProps: PropTypes.func,\n\n  // Global Column Defaults\n  columns: PropTypes.arrayOf(\n    PropTypes.shape({\n      // Renderers\n      Cell: PropTypes.oneOfType([PropTypes.element, PropTypes.string, PropTypes.func]),\n      Header: PropTypes.oneOfType([PropTypes.element, PropTypes.string, PropTypes.func]),\n      Footer: PropTypes.oneOfType([PropTypes.element, PropTypes.string, PropTypes.func]),\n      Aggregated: PropTypes.oneOfType([PropTypes.element, PropTypes.string, PropTypes.func]),\n      Pivot: PropTypes.oneOfType([PropTypes.element, PropTypes.string, PropTypes.func]),\n      PivotValue: PropTypes.oneOfType([PropTypes.element, PropTypes.string, PropTypes.func]),\n      Expander: PropTypes.oneOfType([PropTypes.element, PropTypes.string, PropTypes.func]),\n      Filter: PropTypes.oneOfType([PropTypes.element, PropTypes.func]),\n\n      // All Columns\n      sortable: PropTypes.bool, // use table default\n      resizable: PropTypes.bool, // use table default\n      filterable: PropTypes.bool, // use table default\n      show: PropTypes.bool,\n      minWidth: PropTypes.number,\n\n      // Cells only\n      className: PropTypes.string,\n      style: PropTypes.object,\n      getProps: PropTypes.func,\n\n      // Pivot only\n      aggregate: PropTypes.func,\n\n      // Headers only\n      headerClassName: PropTypes.string,\n      headerStyle: PropTypes.object,\n      getHeaderProps: PropTypes.func,\n\n      // Footers only\n      footerClassName: PropTypes.string,\n      footerStyle: PropTypes.object,\n      getFooterProps: PropTypes.object,\n      filterMethod: PropTypes.func,\n      filterAll: PropTypes.bool,\n      sortMethod: PropTypes.func,\n    })\n  ),\n\n  // Global Expander Column Defaults\n  expanderDefaults: PropTypes.shape({\n    sortable: PropTypes.bool,\n    resizable: PropTypes.bool,\n    filterable: PropTypes.bool,\n    width: PropTypes.number,\n  }),\n\n  pivotDefaults: PropTypes.object,\n\n  // Text\n  previousText: PropTypes.node,\n  nextText: PropTypes.node,\n  loadingText: PropTypes.node,\n  noDataText: PropTypes.node,\n  pageText: PropTypes.node,\n  ofText: PropTypes.node,\n  rowsText: PropTypes.node,\n\n  // Components\n  TableComponent: PropTypes.oneOfType([PropTypes.func, PropTypes.element]),\n  TheadComponent: PropTypes.oneOfType([PropTypes.func, PropTypes.element]),\n  TbodyComponent: PropTypes.oneOfType([PropTypes.func, PropTypes.element]),\n  TrGroupComponent: PropTypes.oneOfType([PropTypes.func, PropTypes.element]),\n  TrComponent: PropTypes.oneOfType([PropTypes.func, PropTypes.element]),\n  ThComponent: PropTypes.oneOfType([PropTypes.func, PropTypes.element]),\n  TdComponent: PropTypes.oneOfType([PropTypes.func, PropTypes.element]),\n  TfootComponent: PropTypes.oneOfType([PropTypes.func, PropTypes.element]),\n  FilterComponent: PropTypes.oneOfType([PropTypes.func, PropTypes.element]),\n  ExpanderComponent: PropTypes.oneOfType([PropTypes.func, PropTypes.element]),\n  PivotValueComponent: PropTypes.oneOfType([PropTypes.func, PropTypes.element]),\n  AggregatedComponent: PropTypes.oneOfType([PropTypes.func, PropTypes.element]),\n  // this is a computed default generated using\n  PivotComponent: PropTypes.oneOfType([PropTypes.func, PropTypes.element]),\n  // the ExpanderComponent and PivotValueComponent at run-time in methods.js\n  PaginationComponent: PropTypes.oneOfType([PropTypes.func, PropTypes.element]),\n  PreviousComponent: PropTypes.oneOfType([PropTypes.func, PropTypes.element]),\n  NextComponent: PropTypes.oneOfType([PropTypes.func, PropTypes.element]),\n  LoadingComponent: PropTypes.oneOfType([PropTypes.func, PropTypes.element]),\n  NoDataComponent: PropTypes.oneOfType([PropTypes.func, PropTypes.element]),\n  ResizerComponent: PropTypes.oneOfType([PropTypes.func, PropTypes.element]),\n  PadRowComponent: PropTypes.oneOfType([PropTypes.func, PropTypes.element]),\n}\n","import React, { Component } from 'react'\nimport classnames from 'classnames'\n//\nimport _ from './utils'\nimport Lifecycle from './lifecycle'\nimport Methods from './methods'\nimport defaultProps from './defaultProps'\nimport propTypes from './propTypes'\n\nexport const ReactTableDefaults = defaultProps\n\nexport default class ReactTable extends Methods(Lifecycle(Component)) {\n  static propTypes = propTypes\n  static defaultProps = defaultProps\n\n  constructor (props) {\n    super()\n\n    this.getResolvedState = this.getResolvedState.bind(this)\n    this.getDataModel = this.getDataModel.bind(this)\n    this.getSortedData = this.getSortedData.bind(this)\n    this.fireFetchData = this.fireFetchData.bind(this)\n    this.getPropOrState = this.getPropOrState.bind(this)\n    this.getStateOrProp = this.getStateOrProp.bind(this)\n    this.filterData = this.filterData.bind(this)\n    this.sortData = this.sortData.bind(this)\n    this.getMinRows = this.getMinRows.bind(this)\n    this.onPageChange = this.onPageChange.bind(this)\n    this.onPageSizeChange = this.onPageSizeChange.bind(this)\n    this.sortColumn = this.sortColumn.bind(this)\n    this.filterColumn = this.filterColumn.bind(this)\n    this.resizeColumnStart = this.resizeColumnStart.bind(this)\n    this.resizeColumnEnd = this.resizeColumnEnd.bind(this)\n    this.resizeColumnMoving = this.resizeColumnMoving.bind(this)\n\n    this.state = {\n      page: 0,\n      pageSize: props.defaultPageSize,\n      sorted: props.defaultSorted,\n      expanded: props.defaultExpanded,\n      filtered: props.defaultFiltered,\n      resized: props.defaultResized,\n      currentlyResizing: false,\n      skipNextSort: false,\n    }\n  }\n\n  render () {\n    const resolvedState = this.getResolvedState()\n    const {\n      children,\n      className,\n      style,\n      getProps,\n      getTableProps,\n      getTheadGroupProps,\n      getTheadGroupTrProps,\n      getTheadGroupThProps,\n      getTheadProps,\n      getTheadTrProps,\n      getTheadThProps,\n      getTheadFilterProps,\n      getTheadFilterTrProps,\n      getTheadFilterThProps,\n      getTbodyProps,\n      getTrGroupProps,\n      getTrProps,\n      getTdProps,\n      getTfootProps,\n      getTfootTrProps,\n      getTfootTdProps,\n      getPaginationProps,\n      getLoadingProps,\n      getNoDataProps,\n      getResizerProps,\n      showPagination,\n      showPaginationTop,\n      showPaginationBottom,\n      manual,\n      loadingText,\n      noDataText,\n      sortable,\n      multiSort,\n      resizable,\n      filterable,\n      // Pivoting State\n      pivotIDKey,\n      pivotValKey,\n      pivotBy,\n      subRowsKey,\n      aggregatedKey,\n      originalKey,\n      indexKey,\n      groupedByPivotKey,\n      // State\n      loading,\n      pageSize,\n      page,\n      sorted,\n      filtered,\n      resized,\n      expanded,\n      pages,\n      onExpandedChange,\n      // Components\n      TableComponent,\n      TheadComponent,\n      TbodyComponent,\n      TrGroupComponent,\n      TrComponent,\n      ThComponent,\n      TdComponent,\n      TfootComponent,\n      PaginationComponent,\n      LoadingComponent,\n      SubComponent,\n      NoDataComponent,\n      ResizerComponent,\n      ExpanderComponent,\n      PivotValueComponent,\n      PivotComponent,\n      AggregatedComponent,\n      FilterComponent,\n      PadRowComponent,\n      // Data model\n      resolvedData,\n      allVisibleColumns,\n      headerGroups,\n      hasHeaderGroups,\n      // Sorted Data\n      sortedData,\n      currentlyResizing,\n    } = resolvedState\n\n    // Pagination\n    const startRow = pageSize * page\n    const endRow = startRow + pageSize\n    let pageRows = manual ? resolvedData : sortedData.slice(startRow, endRow)\n    const minRows = this.getMinRows()\n    const padRows = _.range(Math.max(minRows - pageRows.length, 0))\n\n    const hasColumnFooter = allVisibleColumns.some(d => d.Footer)\n    const hasFilters = filterable || allVisibleColumns.some(d => d.filterable)\n\n    const recurseRowsViewIndex = (rows, path = [], index = -1) => [\n      rows.map((row, i) => {\n        index += 1\n        const rowWithViewIndex = {\n          ...row,\n          _viewIndex: index,\n        }\n        const newPath = path.concat([i])\n        if (rowWithViewIndex[subRowsKey] && _.get(expanded, newPath)) {\n          [rowWithViewIndex[subRowsKey], index] = recurseRowsViewIndex(\n            rowWithViewIndex[subRowsKey],\n            newPath,\n            index\n          )\n        }\n        return rowWithViewIndex\n      }),\n      index,\n    ];\n    [pageRows] = recurseRowsViewIndex(pageRows)\n\n    const canPrevious = page > 0\n    const canNext = page + 1 < pages\n\n    const rowMinWidth = _.sum(\n      allVisibleColumns.map(d => {\n        const resizedColumn = resized.find(x => x.id === d.id) || {}\n        return _.getFirstDefined(resizedColumn.value, d.width, d.minWidth)\n      })\n    )\n\n    let rowIndex = -1\n\n    const finalState = {\n      ...resolvedState,\n      startRow,\n      endRow,\n      pageRows,\n      minRows,\n      padRows,\n      hasColumnFooter,\n      canPrevious,\n      canNext,\n      rowMinWidth,\n    }\n\n    const rootProps = _.splitProps(getProps(finalState, undefined, undefined, this))\n    const tableProps = _.splitProps(getTableProps(finalState, undefined, undefined, this))\n    const tBodyProps = _.splitProps(getTbodyProps(finalState, undefined, undefined, this))\n    const loadingProps = getLoadingProps(finalState, undefined, undefined, this)\n    const noDataProps = getNoDataProps(finalState, undefined, undefined, this)\n\n    // Visual Components\n\n    const makeHeaderGroup = (column, i) => {\n      const resizedValue = col => (resized.find(x => x.id === col.id) || {}).value\n      const flex = _.sum(\n        column.columns.map(col => (col.width || resizedValue(col) ? 0 : col.minWidth))\n      )\n      const width = _.sum(\n        column.columns.map(col => _.getFirstDefined(resizedValue(col), col.width, col.minWidth))\n      )\n      const maxWidth = _.sum(\n        column.columns.map(col => _.getFirstDefined(resizedValue(col), col.width, col.maxWidth))\n      )\n\n      const theadGroupThProps = _.splitProps(\n        getTheadGroupThProps(finalState, undefined, column, this)\n      )\n      const columnHeaderProps = _.splitProps(\n        column.getHeaderProps(finalState, undefined, column, this)\n      )\n\n      const classes = [\n        column.headerClassName,\n        theadGroupThProps.className,\n        columnHeaderProps.className,\n      ]\n\n      const styles = {\n        ...column.headerStyle,\n        ...theadGroupThProps.style,\n        ...columnHeaderProps.style,\n      }\n\n      const rest = {\n        ...theadGroupThProps.rest,\n        ...columnHeaderProps.rest,\n      }\n\n      const flexStyles = {\n        flex: `${flex} 0 auto`,\n        width: _.asPx(width),\n        maxWidth: _.asPx(maxWidth),\n      }\n\n      return (\n        <ThComponent\n          key={`${i}-${column.id}`}\n          className={classnames(classes)}\n          style={{\n            ...styles,\n            ...flexStyles,\n          }}\n          {...rest}\n        >\n          {_.normalizeComponent(column.Header, {\n            data: sortedData,\n            column,\n          })}\n        </ThComponent>\n      )\n    }\n\n    const makeHeaderGroups = () => {\n      const theadGroupProps = _.splitProps(\n        getTheadGroupProps(finalState, undefined, undefined, this)\n      )\n      const theadGroupTrProps = _.splitProps(\n        getTheadGroupTrProps(finalState, undefined, undefined, this)\n      )\n      return (\n        <TheadComponent\n          className={classnames('-headerGroups', theadGroupProps.className)}\n          style={{\n            ...theadGroupProps.style,\n            minWidth: `${rowMinWidth}px`,\n          }}\n          {...theadGroupProps.rest}\n        >\n          <TrComponent\n            className={theadGroupTrProps.className}\n            style={theadGroupTrProps.style}\n            {...theadGroupTrProps.rest}\n          >\n            {headerGroups.map(makeHeaderGroup)}\n          </TrComponent>\n        </TheadComponent>\n      )\n    }\n\n    const makeHeader = (column, i) => {\n      const resizedCol = resized.find(x => x.id === column.id) || {}\n      const sort = sorted.find(d => d.id === column.id)\n      const show = typeof column.show === 'function' ? column.show() : column.show\n      const width = _.getFirstDefined(resizedCol.value, column.width, column.minWidth)\n      const maxWidth = _.getFirstDefined(resizedCol.value, column.width, column.maxWidth)\n      const theadThProps = _.splitProps(getTheadThProps(finalState, undefined, column, this))\n      const columnHeaderProps = _.splitProps(\n        column.getHeaderProps(finalState, undefined, column, this)\n      )\n\n      const classes = [column.headerClassName, theadThProps.className, columnHeaderProps.className]\n\n      const styles = {\n        ...column.headerStyle,\n        ...theadThProps.style,\n        ...columnHeaderProps.style,\n      }\n\n      const rest = {\n        ...theadThProps.rest,\n        ...columnHeaderProps.rest,\n      }\n\n      const isResizable = _.getFirstDefined(column.resizable, resizable, false)\n      const resizer = isResizable ? (\n        <ResizerComponent\n          onMouseDown={e => this.resizeColumnStart(e, column, false)}\n          onTouchStart={e => this.resizeColumnStart(e, column, true)}\n          {...getResizerProps('finalState', undefined, column, this)}\n        />\n      ) : null\n\n      const isSortable = _.getFirstDefined(column.sortable, sortable, false)\n\n      return (\n        <ThComponent\n          key={`${i}-${column.id}`}\n          className={classnames(\n            classes,\n            isResizable && 'rt-resizable-header',\n            sort ? (sort.desc ? '-sort-desc' : '-sort-asc') : '',\n            isSortable && '-cursor-pointer',\n            !show && '-hidden',\n            pivotBy && pivotBy.slice(0, -1).includes(column.id) && 'rt-header-pivot'\n          )}\n          style={{\n            ...styles,\n            flex: `${width} 0 auto`,\n            width: _.asPx(width),\n            maxWidth: _.asPx(maxWidth),\n          }}\n          toggleSort={e => {\n            if (isSortable) this.sortColumn(column, multiSort ? e.shiftKey : false)\n          }}\n          {...rest}\n        >\n          <div className={classnames(isResizable && 'rt-resizable-header-content')}>\n            {_.normalizeComponent(column.Header, {\n              data: sortedData,\n              column,\n            })}\n          </div>\n          {resizer}\n        </ThComponent>\n      )\n    }\n\n    const makeHeaders = () => {\n      const theadProps = _.splitProps(getTheadProps(finalState, undefined, undefined, this))\n      const theadTrProps = _.splitProps(getTheadTrProps(finalState, undefined, undefined, this))\n      return (\n        <TheadComponent\n          className={classnames('-header', theadProps.className)}\n          style={{\n            ...theadProps.style,\n            minWidth: `${rowMinWidth}px`,\n          }}\n          {...theadProps.rest}\n        >\n          <TrComponent\n            className={theadTrProps.className}\n            style={theadTrProps.style}\n            {...theadTrProps.rest}\n          >\n            {allVisibleColumns.map(makeHeader)}\n          </TrComponent>\n        </TheadComponent>\n      )\n    }\n\n    const makeFilter = (column, i) => {\n      const resizedCol = resized.find(x => x.id === column.id) || {}\n      const width = _.getFirstDefined(resizedCol.value, column.width, column.minWidth)\n      const maxWidth = _.getFirstDefined(resizedCol.value, column.width, column.maxWidth)\n      const theadFilterThProps = _.splitProps(\n        getTheadFilterThProps(finalState, undefined, column, this)\n      )\n      const columnHeaderProps = _.splitProps(\n        column.getHeaderProps(finalState, undefined, column, this)\n      )\n\n      const classes = [\n        column.headerClassName,\n        theadFilterThProps.className,\n        columnHeaderProps.className,\n      ]\n\n      const styles = {\n        ...column.headerStyle,\n        ...theadFilterThProps.style,\n        ...columnHeaderProps.style,\n      }\n\n      const rest = {\n        ...theadFilterThProps.rest,\n        ...columnHeaderProps.rest,\n      }\n\n      const filter = filtered.find(filter => filter.id === column.id)\n\n      const ResolvedFilterComponent = column.Filter || FilterComponent\n\n      const isFilterable = _.getFirstDefined(column.filterable, filterable, false)\n\n      return (\n        <ThComponent\n          key={`${i}-${column.id}`}\n          className={classnames(classes)}\n          style={{\n            ...styles,\n            flex: `${width} 0 auto`,\n            width: _.asPx(width),\n            maxWidth: _.asPx(maxWidth),\n          }}\n          {...rest}\n        >\n          {isFilterable\n            ? _.normalizeComponent(\n                ResolvedFilterComponent,\n                {\n                  column,\n                  filter,\n                  onChange: value => this.filterColumn(column, value),\n                },\n                defaultProps.column.Filter\n              )\n            : null}\n        </ThComponent>\n      )\n    }\n\n    const makeFilters = () => {\n      const theadFilterProps = _.splitProps(\n        getTheadFilterProps(finalState, undefined, undefined, this)\n      )\n      const theadFilterTrProps = _.splitProps(\n        getTheadFilterTrProps(finalState, undefined, undefined, this)\n      )\n      return (\n        <TheadComponent\n          className={classnames('-filters', theadFilterProps.className)}\n          style={{\n            ...theadFilterProps.style,\n            minWidth: `${rowMinWidth}px`,\n          }}\n          {...theadFilterProps.rest}\n        >\n          <TrComponent\n            className={theadFilterTrProps.className}\n            style={theadFilterTrProps.style}\n            {...theadFilterTrProps.rest}\n          >\n            {allVisibleColumns.map(makeFilter)}\n          </TrComponent>\n        </TheadComponent>\n      )\n    }\n\n    const makePageRow = (row, i, path = []) => {\n      const rowInfo = {\n        original: row[originalKey],\n        row,\n        index: row[indexKey],\n        viewIndex: (rowIndex += 1),\n        pageSize,\n        page,\n        level: path.length,\n        nestingPath: path.concat([i]),\n        aggregated: row[aggregatedKey],\n        groupedByPivot: row[groupedByPivotKey],\n        subRows: row[subRowsKey],\n      }\n      const isExpanded = _.get(expanded, rowInfo.nestingPath)\n      const trGroupProps = getTrGroupProps(finalState, rowInfo, undefined, this)\n      const trProps = _.splitProps(getTrProps(finalState, rowInfo, undefined, this))\n      return (\n        <TrGroupComponent key={rowInfo.nestingPath.join('_')} {...trGroupProps}>\n          <TrComponent\n            className={classnames(trProps.className, row._viewIndex % 2 ? '-even' : '-odd')}\n            style={trProps.style}\n            {...trProps.rest}\n          >\n            {allVisibleColumns.map((column, i2) => {\n              const resizedCol = resized.find(x => x.id === column.id) || {}\n              const show = typeof column.show === 'function' ? column.show() : column.show\n              const width = _.getFirstDefined(resizedCol.value, column.width, column.minWidth)\n              const maxWidth = _.getFirstDefined(resizedCol.value, column.width, column.maxWidth)\n              const tdProps = _.splitProps(getTdProps(finalState, rowInfo, column, this))\n              const columnProps = _.splitProps(column.getProps(finalState, rowInfo, column, this))\n\n              const classes = [tdProps.className, column.className, columnProps.className]\n\n              const styles = {\n                ...tdProps.style,\n                ...column.style,\n                ...columnProps.style,\n              }\n\n              const cellInfo = {\n                ...rowInfo,\n                isExpanded,\n                column: { ...column },\n                value: rowInfo.row[column.id],\n                pivoted: column.pivoted,\n                expander: column.expander,\n                resized,\n                show,\n                width,\n                maxWidth,\n                tdProps,\n                columnProps,\n                classes,\n                styles,\n              }\n\n              const value = cellInfo.value\n\n              let useOnExpanderClick\n              let isBranch\n              let isPreview\n\n              const onExpanderClick = e => {\n                let newExpanded = _.clone(expanded)\n                if (isExpanded) {\n                  newExpanded = _.set(newExpanded, cellInfo.nestingPath, false)\n                } else {\n                  newExpanded = _.set(newExpanded, cellInfo.nestingPath, {})\n                }\n\n                return this.setStateWithData(\n                  {\n                    expanded: newExpanded,\n                  },\n                  () => onExpandedChange && onExpandedChange(newExpanded, cellInfo.nestingPath, e)\n                )\n              }\n\n              // Default to a standard cell\n              let resolvedCell = _.normalizeComponent(column.Cell, cellInfo, value)\n\n              // Resolve Renderers\n              const ResolvedAggregatedComponent =\n                column.Aggregated || (!column.aggregate ? AggregatedComponent : column.Cell)\n              const ResolvedExpanderComponent = column.Expander || ExpanderComponent\n              const ResolvedPivotValueComponent = column.PivotValue || PivotValueComponent\n              const DefaultResolvedPivotComponent =\n                PivotComponent ||\n                (props => (\n                  <div>\n                    <ResolvedExpanderComponent {...props} />\n                    <ResolvedPivotValueComponent {...props} />\n                  </div>\n                ))\n              const ResolvedPivotComponent = column.Pivot || DefaultResolvedPivotComponent\n\n              // Is this cell expandable?\n              if (cellInfo.pivoted || cellInfo.expander) {\n                // Make it expandable by defualt\n                cellInfo.expandable = true\n                useOnExpanderClick = true\n                // If pivoted, has no subRows, and does not have a subComponent,\n                // do not make expandable\n                if (cellInfo.pivoted && !cellInfo.subRows && !SubComponent) {\n                  cellInfo.expandable = false\n                }\n              }\n\n              if (cellInfo.pivoted) {\n                // Is this column a branch?\n                isBranch = rowInfo.row[pivotIDKey] === column.id && cellInfo.subRows\n                // Should this column be blank?\n                isPreview =\n                  pivotBy.indexOf(column.id) > pivotBy.indexOf(rowInfo.row[pivotIDKey]) &&\n                  cellInfo.subRows\n                // Pivot Cell Render Override\n                if (isBranch) {\n                  // isPivot\n                  resolvedCell = _.normalizeComponent(\n                    ResolvedPivotComponent,\n                    {\n                      ...cellInfo,\n                      value: row[pivotValKey],\n                    },\n                    row[pivotValKey]\n                  )\n                } else if (isPreview) {\n                  // Show the pivot preview\n                  resolvedCell = _.normalizeComponent(ResolvedAggregatedComponent, cellInfo, value)\n                } else {\n                  resolvedCell = null\n                }\n              } else if (cellInfo.aggregated) {\n                resolvedCell = _.normalizeComponent(ResolvedAggregatedComponent, cellInfo, value)\n              }\n\n              if (cellInfo.expander) {\n                resolvedCell = _.normalizeComponent(\n                  ResolvedExpanderComponent,\n                  cellInfo,\n                  row[pivotValKey]\n                )\n                if (pivotBy) {\n                  if (cellInfo.groupedByPivot) {\n                    resolvedCell = null\n                  }\n                  if (!cellInfo.subRows && !SubComponent) {\n                    resolvedCell = null\n                  }\n                }\n              }\n\n              const resolvedOnExpanderClick = useOnExpanderClick ? onExpanderClick : () => {}\n\n              // If there are multiple onClick events, make sure they don't\n              // override eachother. This should maybe be expanded to handle all\n              // function attributes\n              const interactionProps = {\n                onClick: resolvedOnExpanderClick,\n              }\n\n              if (tdProps.rest.onClick) {\n                interactionProps.onClick = e => {\n                  tdProps.rest.onClick(e, () => resolvedOnExpanderClick(e))\n                }\n              }\n\n              if (columnProps.rest.onClick) {\n                interactionProps.onClick = e => {\n                  columnProps.rest.onClick(e, () => resolvedOnExpanderClick(e))\n                }\n              }\n\n              // Return the cell\n              return (\n                <TdComponent\n                  // eslint-disable-next-line react/no-array-index-key\n                  key={`${i2}-${column.id}`}\n                  className={classnames(\n                    classes,\n                    !show && 'hidden',\n                    cellInfo.expandable && 'rt-expandable',\n                    (isBranch || isPreview) && 'rt-pivot'\n                  )}\n                  style={{\n                    ...styles,\n                    flex: `${width} 0 auto`,\n                    width: _.asPx(width),\n                    maxWidth: _.asPx(maxWidth),\n                  }}\n                  {...tdProps.rest}\n                  {...columnProps.rest}\n                  {...interactionProps}\n                >\n                  {resolvedCell}\n                </TdComponent>\n              )\n            })}\n          </TrComponent>\n          {rowInfo.subRows &&\n            isExpanded &&\n            rowInfo.subRows.map((d, i) => makePageRow(d, i, rowInfo.nestingPath))}\n          {SubComponent && !rowInfo.subRows && isExpanded && SubComponent(rowInfo)}\n        </TrGroupComponent>\n      )\n    }\n\n    const makePadColumn = (column, i) => {\n      const resizedCol = resized.find(x => x.id === column.id) || {}\n      const show = typeof column.show === 'function' ? column.show() : column.show\n      const width = _.getFirstDefined(resizedCol.value, column.width, column.minWidth)\n      const flex = width\n      const maxWidth = _.getFirstDefined(resizedCol.value, column.width, column.maxWidth)\n      const tdProps = _.splitProps(getTdProps(finalState, undefined, column, this))\n      const columnProps = _.splitProps(column.getProps(finalState, undefined, column, this))\n\n      const classes = [tdProps.className, column.className, columnProps.className]\n\n      const styles = {\n        ...tdProps.style,\n        ...column.style,\n        ...columnProps.style,\n      }\n\n      return (\n        <TdComponent\n          key={`${i}-${column.id}`}\n          className={classnames(classes, !show && 'hidden')}\n          style={{\n            ...styles,\n            flex: `${flex} 0 auto`,\n            width: _.asPx(width),\n            maxWidth: _.asPx(maxWidth),\n          }}\n          {...tdProps.rest}\n        >\n          {_.normalizeComponent(PadRowComponent)}\n        </TdComponent>\n      )\n    }\n\n    const makePadRow = (row, i) => {\n      const trGroupProps = getTrGroupProps(finalState, undefined, undefined, this)\n      const trProps = _.splitProps(getTrProps(finalState, undefined, undefined, this))\n      return (\n        <TrGroupComponent key={i} {...trGroupProps}>\n          <TrComponent\n            className={classnames(\n              '-padRow',\n              (pageRows.length + i) % 2 ? '-even' : '-odd',\n              trProps.className\n            )}\n            style={trProps.style || {}}\n          >\n            {allVisibleColumns.map(makePadColumn)}\n          </TrComponent>\n        </TrGroupComponent>\n      )\n    }\n\n    const makeColumnFooter = (column, i) => {\n      const resizedCol = resized.find(x => x.id === column.id) || {}\n      const show = typeof column.show === 'function' ? column.show() : column.show\n      const width = _.getFirstDefined(resizedCol.value, column.width, column.minWidth)\n      const maxWidth = _.getFirstDefined(resizedCol.value, column.width, column.maxWidth)\n      const tFootTdProps = _.splitProps(getTfootTdProps(finalState, undefined, undefined, this))\n      const columnProps = _.splitProps(column.getProps(finalState, undefined, column, this))\n      const columnFooterProps = _.splitProps(\n        column.getFooterProps(finalState, undefined, column, this)\n      )\n\n      const classes = [\n        tFootTdProps.className,\n        column.className,\n        columnProps.className,\n        columnFooterProps.className,\n      ]\n\n      const styles = {\n        ...tFootTdProps.style,\n        ...column.style,\n        ...columnProps.style,\n        ...columnFooterProps.style,\n      }\n\n      return (\n        <TdComponent\n          key={`${i}-${column.id}`}\n          className={classnames(classes, !show && 'hidden')}\n          style={{\n            ...styles,\n            flex: `${width} 0 auto`,\n            width: _.asPx(width),\n            maxWidth: _.asPx(maxWidth),\n          }}\n          {...columnProps.rest}\n          {...tFootTdProps.rest}\n          {...columnFooterProps.rest}\n        >\n          {_.normalizeComponent(column.Footer, {\n            data: sortedData,\n            column,\n          })}\n        </TdComponent>\n      )\n    }\n\n    const makeColumnFooters = () => {\n      const tFootProps = getTfootProps(finalState, undefined, undefined, this)\n      const tFootTrProps = _.splitProps(getTfootTrProps(finalState, undefined, undefined, this))\n      return (\n        <TfootComponent\n          className={tFootProps.className}\n          style={{\n            ...tFootProps.style,\n            minWidth: `${rowMinWidth}px`,\n          }}\n          {...tFootProps.rest}\n        >\n          <TrComponent\n            className={classnames(tFootTrProps.className)}\n            style={tFootTrProps.style}\n            {...tFootTrProps.rest}\n          >\n            {allVisibleColumns.map(makeColumnFooter)}\n          </TrComponent>\n        </TfootComponent>\n      )\n    }\n\n    const makePagination = () => {\n      const paginationProps = _.splitProps(\n        getPaginationProps(finalState, undefined, undefined, this)\n      )\n      return (\n        <PaginationComponent\n          {...resolvedState}\n          pages={pages}\n          canPrevious={canPrevious}\n          canNext={canNext}\n          onPageChange={this.onPageChange}\n          onPageSizeChange={this.onPageSizeChange}\n          className={paginationProps.className}\n          style={paginationProps.style}\n          {...paginationProps.rest}\n        />\n      )\n    }\n\n    const makeTable = () => {\n      const pagination = makePagination()\n      return (\n        <div\n          className={classnames('ReactTable', className, rootProps.className)}\n          style={{\n            ...style,\n            ...rootProps.style,\n          }}\n          {...rootProps.rest}\n        >\n          {showPagination && showPaginationTop ? (\n            <div className=\"pagination-top\">{pagination}</div>\n          ) : null}\n          <TableComponent\n            className={classnames(tableProps.className, currentlyResizing ? 'rt-resizing' : '')}\n            style={tableProps.style}\n            {...tableProps.rest}\n          >\n            {hasHeaderGroups ? makeHeaderGroups() : null}\n            {makeHeaders()}\n            {hasFilters ? makeFilters() : null}\n            <TbodyComponent\n              className={classnames(tBodyProps.className)}\n              style={{\n                ...tBodyProps.style,\n                minWidth: `${rowMinWidth}px`,\n              }}\n              {...tBodyProps.rest}\n            >\n              {pageRows.map((d, i) => makePageRow(d, i))}\n              {padRows.map(makePadRow)}\n            </TbodyComponent>\n            {hasColumnFooter ? makeColumnFooters() : null}\n          </TableComponent>\n          {showPagination && showPaginationBottom ? (\n            <div className=\"pagination-bottom\">{pagination}</div>\n          ) : null}\n          {!pageRows.length && (\n            <NoDataComponent {...noDataProps}>{_.normalizeComponent(noDataText)}</NoDataComponent>\n          )}\n          <LoadingComponent loading={loading} loadingText={loadingText} {...loadingProps} />\n        </div>\n      )\n    }\n\n    // childProps are optionally passed to a function-as-a-child\n    return children ? children(finalState, makeTable, this) : makeTable()\n  }\n}\n","import React from 'react'\nimport _ from './utils'\n\nexport default Base =>\n  class extends Base {\n    getResolvedState (props, state) {\n      const resolvedState = {\n        ..._.compactObject(this.state),\n        ..._.compactObject(this.props),\n        ..._.compactObject(state),\n        ..._.compactObject(props),\n      }\n      return resolvedState\n    }\n\n    getDataModel (newState, dataChanged) {\n      const {\n        columns,\n        pivotBy = [],\n        data,\n        resolveData,\n        pivotIDKey,\n        pivotValKey,\n        subRowsKey,\n        aggregatedKey,\n        nestingLevelKey,\n        originalKey,\n        indexKey,\n        groupedByPivotKey,\n        SubComponent,\n      } = newState\n\n      // Determine Header Groups\n      let hasHeaderGroups = false\n      columns.forEach(column => {\n        if (column.columns) {\n          hasHeaderGroups = true\n        }\n      })\n\n      let columnsWithExpander = [...columns]\n\n      let expanderColumn = columns.find(\n        col => col.expander || (col.columns && col.columns.some(col2 => col2.expander))\n      )\n      // The actual expander might be in the columns field of a group column\n      if (expanderColumn && !expanderColumn.expander) {\n        expanderColumn = expanderColumn.columns.find(col => col.expander)\n      }\n\n      // If we have SubComponent's we need to make sure we have an expander column\n      if (SubComponent && !expanderColumn) {\n        expanderColumn = { expander: true }\n        columnsWithExpander = [expanderColumn, ...columnsWithExpander]\n      }\n\n      const makeDecoratedColumn = (column, parentColumn) => {\n        let dcol\n        if (column.expander) {\n          dcol = {\n            ...this.props.column,\n            ...this.props.expanderDefaults,\n            ...column,\n          }\n        } else {\n          dcol = {\n            ...this.props.column,\n            ...column,\n          }\n        }\n\n        // Ensure minWidth is not greater than maxWidth if set\n        if (dcol.maxWidth < dcol.minWidth) {\n          dcol.minWidth = dcol.maxWidth\n        }\n\n        if (parentColumn) {\n          dcol.parentColumn = parentColumn\n        }\n\n        // First check for string accessor\n        if (typeof dcol.accessor === 'string') {\n          dcol.id = dcol.id || dcol.accessor\n          const accessorString = dcol.accessor\n          dcol.accessor = row => _.get(row, accessorString)\n          return dcol\n        }\n\n        // Fall back to functional accessor (but require an ID)\n        if (dcol.accessor && !dcol.id) {\n          console.warn(dcol)\n          throw new Error(\n            'A column id is required if using a non-string accessor for column above.'\n          )\n        }\n\n        // Fall back to an undefined accessor\n        if (!dcol.accessor) {\n          dcol.accessor = () => undefined\n        }\n\n        return dcol\n      }\n\n      const allDecoratedColumns = []\n\n      // Decorate the columns\n      const decorateAndAddToAll = (column, parentColumn) => {\n        const decoratedColumn = makeDecoratedColumn(column, parentColumn)\n        allDecoratedColumns.push(decoratedColumn)\n        return decoratedColumn\n      }\n\n      const decoratedColumns = columnsWithExpander.map(column => {\n        if (column.columns) {\n          return {\n            ...column,\n            columns: column.columns.map(d => decorateAndAddToAll(d, column)),\n          }\n        }\n        return decorateAndAddToAll(column)\n      })\n\n      // Build the visible columns, headers and flat column list\n      let visibleColumns = decoratedColumns.slice()\n      let allVisibleColumns = []\n\n      visibleColumns = visibleColumns.map(column => {\n        if (column.columns) {\n          const visibleSubColumns = column.columns.filter(\n            d => (pivotBy.indexOf(d.id) > -1 ? false : _.getFirstDefined(d.show, true))\n          )\n          return {\n            ...column,\n            columns: visibleSubColumns,\n          }\n        }\n        return column\n      })\n\n      visibleColumns = visibleColumns.filter(\n        column =>\n          column.columns\n            ? column.columns.length\n            : pivotBy.indexOf(column.id) > -1\n              ? false\n              : _.getFirstDefined(column.show, true)\n      )\n\n      // Find any custom pivot location\n      const pivotIndex = visibleColumns.findIndex(col => col.pivot)\n\n      // Handle Pivot Columns\n      if (pivotBy.length) {\n        // Retrieve the pivot columns in the correct pivot order\n        const pivotColumns = []\n        pivotBy.forEach(pivotID => {\n          const found = allDecoratedColumns.find(d => d.id === pivotID)\n          if (found) {\n            pivotColumns.push(found)\n          }\n        })\n\n        const PivotParentColumn = pivotColumns.reduce(\n          (prev, current) => prev && prev === current.parentColumn && current.parentColumn,\n          pivotColumns[0].parentColumn\n        )\n\n        let PivotGroupHeader = hasHeaderGroups && PivotParentColumn.Header\n        PivotGroupHeader = PivotGroupHeader || (() => <strong>Pivoted</strong>)\n\n        let pivotColumnGroup = {\n          Header: PivotGroupHeader,\n          columns: pivotColumns.map(col => ({\n            ...this.props.pivotDefaults,\n            ...col,\n            pivoted: true,\n          })),\n        }\n\n        // Place the pivotColumns back into the visibleColumns\n        if (pivotIndex >= 0) {\n          pivotColumnGroup = {\n            ...visibleColumns[pivotIndex],\n            ...pivotColumnGroup,\n          }\n          visibleColumns.splice(pivotIndex, 1, pivotColumnGroup)\n        } else {\n          visibleColumns.unshift(pivotColumnGroup)\n        }\n      }\n\n      // Build Header Groups\n      const headerGroups = []\n      let currentSpan = []\n\n      // A convenience function to add a header and reset the currentSpan\n      const addHeader = (columns, column) => {\n        headerGroups.push({\n          ...this.props.column,\n          ...column,\n          columns,\n        })\n        currentSpan = []\n      }\n\n      // Build flast list of allVisibleColumns and HeaderGroups\n      visibleColumns.forEach(column => {\n        if (column.columns) {\n          allVisibleColumns = allVisibleColumns.concat(column.columns)\n          if (currentSpan.length > 0) {\n            addHeader(currentSpan)\n          }\n          addHeader(column.columns, column)\n          return\n        }\n        allVisibleColumns.push(column)\n        currentSpan.push(column)\n      })\n      if (hasHeaderGroups && currentSpan.length > 0) {\n        addHeader(currentSpan)\n      }\n\n      // Access the data\n      const accessRow = (d, i, level = 0) => {\n        const row = {\n          [originalKey]: d,\n          [indexKey]: i,\n          [subRowsKey]: d[subRowsKey],\n          [nestingLevelKey]: level,\n        }\n        allDecoratedColumns.forEach(column => {\n          if (column.expander) return\n          row[column.id] = column.accessor(d)\n        })\n        if (row[subRowsKey]) {\n          row[subRowsKey] = row[subRowsKey].map((d, i) => accessRow(d, i, level + 1))\n        }\n        return row\n      }\n\n      // // If the data hasn't changed, just use the cached data\n      let resolvedData = this.resolvedData\n      // If the data has changed, run the data resolver and cache the result\n      if (!this.resolvedData || dataChanged) {\n        resolvedData = resolveData(data)\n        this.resolvedData = resolvedData\n      }\n      // Use the resolved data\n      resolvedData = resolvedData.map((d, i) => accessRow(d, i))\n\n      // TODO: Make it possible to fabricate nested rows without pivoting\n      const aggregatingColumns = allVisibleColumns.filter(d => !d.expander && d.aggregate)\n\n      // If pivoting, recursively group the data\n      const aggregate = rows => {\n        const aggregationValues = {}\n        aggregatingColumns.forEach(column => {\n          const values = rows.map(d => d[column.id])\n          aggregationValues[column.id] = column.aggregate(values, rows)\n        })\n        return aggregationValues\n      }\n      if (pivotBy.length) {\n        const groupRecursively = (rows, keys, i = 0) => {\n          // This is the last level, just return the rows\n          if (i === keys.length) {\n            return rows\n          }\n          // Group the rows together for this level\n          let groupedRows = Object.entries(_.groupBy(rows, keys[i])).map(([key, value]) => ({\n            [pivotIDKey]: keys[i],\n            [pivotValKey]: key,\n            [keys[i]]: key,\n            [subRowsKey]: value,\n            [nestingLevelKey]: i,\n            [groupedByPivotKey]: true,\n          }))\n          // Recurse into the subRows\n          groupedRows = groupedRows.map(rowGroup => {\n            const subRows = groupRecursively(rowGroup[subRowsKey], keys, i + 1)\n            return {\n              ...rowGroup,\n              [subRowsKey]: subRows,\n              [aggregatedKey]: true,\n              ...aggregate(subRows),\n            }\n          })\n          return groupedRows\n        }\n        resolvedData = groupRecursively(resolvedData, pivotBy)\n      }\n\n      return {\n        ...newState,\n        resolvedData,\n        allVisibleColumns,\n        headerGroups,\n        allDecoratedColumns,\n        hasHeaderGroups,\n      }\n    }\n\n    getSortedData (resolvedState) {\n      const {\n        manual,\n        sorted,\n        filtered,\n        defaultFilterMethod,\n        resolvedData,\n        allVisibleColumns,\n        allDecoratedColumns,\n      } = resolvedState\n\n      const sortMethodsByColumnID = {}\n\n      allDecoratedColumns.filter(col => col.sortMethod).forEach(col => {\n        sortMethodsByColumnID[col.id] = col.sortMethod\n      })\n\n      // Resolve the data from either manual data or sorted data\n      return {\n        sortedData: manual\n          ? resolvedData\n          : this.sortData(\n            this.filterData(resolvedData, filtered, defaultFilterMethod, allVisibleColumns),\n            sorted,\n            sortMethodsByColumnID\n          ),\n      }\n    }\n\n    fireFetchData () {\n      this.props.onFetchData(this.getResolvedState(), this)\n    }\n\n    getPropOrState (key) {\n      return _.getFirstDefined(this.props[key], this.state[key])\n    }\n\n    getStateOrProp (key) {\n      return _.getFirstDefined(this.state[key], this.props[key])\n    }\n\n    filterData (data, filtered, defaultFilterMethod, allVisibleColumns) {\n      let filteredData = data\n\n      if (filtered.length) {\n        filteredData = filtered.reduce((filteredSoFar, nextFilter) => {\n          const column = allVisibleColumns.find(x => x.id === nextFilter.id)\n\n          // Don't filter hidden columns or columns that have had their filters disabled\n          if (!column || column.filterable === false) {\n            return filteredSoFar\n          }\n\n          const filterMethod = column.filterMethod || defaultFilterMethod\n\n          // If 'filterAll' is set to true, pass the entire dataset to the filter method\n          if (column.filterAll) {\n            return filterMethod(nextFilter, filteredSoFar, column)\n          }\n          return filteredSoFar.filter(row => filterMethod(nextFilter, row, column))\n        }, filteredData)\n\n        // Apply the filter to the subrows if we are pivoting, and then\n        // filter any rows without subcolumns because it would be strange to show\n        filteredData = filteredData\n          .map(row => {\n            if (!row[this.props.subRowsKey]) {\n              return row\n            }\n            return {\n              ...row,\n              [this.props.subRowsKey]: this.filterData(\n                row[this.props.subRowsKey],\n                filtered,\n                defaultFilterMethod,\n                allVisibleColumns\n              ),\n            }\n          })\n          .filter(row => {\n            if (!row[this.props.subRowsKey]) {\n              return true\n            }\n            return row[this.props.subRowsKey].length > 0\n          })\n      }\n\n      return filteredData\n    }\n\n    sortData (data, sorted, sortMethodsByColumnID = {}) {\n      if (!sorted.length) {\n        return data\n      }\n\n      const sortedData = (this.props.orderByMethod || _.orderBy)(\n        data,\n        sorted.map(sort => {\n          // Support custom sorting methods for each column\n          if (sortMethodsByColumnID[sort.id]) {\n            return (a, b) => sortMethodsByColumnID[sort.id](a[sort.id], b[sort.id], sort.desc)\n          }\n          return (a, b) => this.props.defaultSortMethod(a[sort.id], b[sort.id], sort.desc)\n        }),\n        sorted.map(d => !d.desc),\n        this.props.indexKey\n      )\n\n      sortedData.forEach(row => {\n        if (!row[this.props.subRowsKey]) {\n          return\n        }\n        row[this.props.subRowsKey] = this.sortData(\n          row[this.props.subRowsKey],\n          sorted,\n          sortMethodsByColumnID\n        )\n      })\n\n      return sortedData\n    }\n\n    getMinRows () {\n      return _.getFirstDefined(this.props.minRows, this.getStateOrProp('pageSize'))\n    }\n\n    // User actions\n    onPageChange (page) {\n      const { onPageChange, collapseOnPageChange } = this.props\n\n      const newState = { page }\n      if (collapseOnPageChange) {\n        newState.expanded = {}\n      }\n      this.setStateWithData(newState, () => onPageChange && onPageChange(page))\n    }\n\n    onPageSizeChange (newPageSize) {\n      const { onPageSizeChange } = this.props\n      const { pageSize, page } = this.getResolvedState()\n\n      // Normalize the page to display\n      const currentRow = pageSize * page\n      const newPage = Math.floor(currentRow / newPageSize)\n\n      this.setStateWithData(\n        {\n          pageSize: newPageSize,\n          page: newPage,\n        },\n        () => onPageSizeChange && onPageSizeChange(newPageSize, newPage)\n      )\n    }\n\n    sortColumn (column, additive) {\n      const { sorted, skipNextSort, defaultSortDesc } = this.getResolvedState()\n\n      const firstSortDirection = Object.prototype.hasOwnProperty.call(column, 'defaultSortDesc')\n        ? column.defaultSortDesc\n        : defaultSortDesc\n      const secondSortDirection = !firstSortDirection\n\n      // we can't stop event propagation from the column resize move handlers\n      // attached to the document because of react's synthetic events\n      // so we have to prevent the sort function from actually sorting\n      // if we click on the column resize element within a header.\n      if (skipNextSort) {\n        this.setStateWithData({\n          skipNextSort: false,\n        })\n        return\n      }\n\n      const { onSortedChange } = this.props\n\n      let newSorted = _.clone(sorted || []).map(d => {\n        d.desc = _.isSortingDesc(d)\n        return d\n      })\n      if (!_.isArray(column)) {\n        // Single-Sort\n        const existingIndex = newSorted.findIndex(d => d.id === column.id)\n        if (existingIndex > -1) {\n          const existing = newSorted[existingIndex]\n          if (existing.desc === secondSortDirection) {\n            if (additive) {\n              newSorted.splice(existingIndex, 1)\n            } else {\n              existing.desc = firstSortDirection\n              newSorted = [existing]\n            }\n          } else {\n            existing.desc = secondSortDirection\n            if (!additive) {\n              newSorted = [existing]\n            }\n          }\n        } else if (additive) {\n          newSorted.push({\n            id: column.id,\n            desc: firstSortDirection,\n          })\n        } else {\n          newSorted = [\n            {\n              id: column.id,\n              desc: firstSortDirection,\n            },\n          ]\n        }\n      } else {\n        // Multi-Sort\n        const existingIndex = newSorted.findIndex(d => d.id === column[0].id)\n        // Existing Sorted Column\n        if (existingIndex > -1) {\n          const existing = newSorted[existingIndex]\n          if (existing.desc === secondSortDirection) {\n            if (additive) {\n              newSorted.splice(existingIndex, column.length)\n            } else {\n              column.forEach((d, i) => {\n                newSorted[existingIndex + i].desc = firstSortDirection\n              })\n            }\n          } else {\n            column.forEach((d, i) => {\n              newSorted[existingIndex + i].desc = secondSortDirection\n            })\n          }\n          if (!additive) {\n            newSorted = newSorted.slice(existingIndex, column.length)\n          }\n          // New Sort Column\n        } else if (additive) {\n          newSorted = newSorted.concat(\n            column.map(d => ({\n              id: d.id,\n              desc: firstSortDirection,\n            }))\n          )\n        } else {\n          newSorted = column.map(d => ({\n            id: d.id,\n            desc: firstSortDirection,\n          }))\n        }\n      }\n\n      this.setStateWithData(\n        {\n          page: (!sorted.length && newSorted.length) || !additive ? 0 : this.state.page,\n          sorted: newSorted,\n        },\n        () => onSortedChange && onSortedChange(newSorted, column, additive)\n      )\n    }\n\n    filterColumn (column, value) {\n      const { filtered } = this.getResolvedState()\n      const { onFilteredChange } = this.props\n\n      // Remove old filter first if it exists\n      const newFiltering = (filtered || []).filter(x => x.id !== column.id)\n\n      if (value !== '') {\n        newFiltering.push({\n          id: column.id,\n          value,\n        })\n      }\n\n      this.setStateWithData(\n        {\n          filtered: newFiltering,\n        },\n        () => onFilteredChange && onFilteredChange(newFiltering, column, value)\n      )\n    }\n\n    resizeColumnStart (event, column, isTouch) {\n      event.stopPropagation()\n      const parentWidth = event.target.parentElement.getBoundingClientRect().width\n\n      let pageX\n      if (isTouch) {\n        pageX = event.changedTouches[0].pageX\n      } else {\n        pageX = event.pageX\n      }\n\n      this.trapEvents = true\n      this.setStateWithData(\n        {\n          currentlyResizing: {\n            id: column.id,\n            startX: pageX,\n            parentWidth,\n          },\n        },\n        () => {\n          if (isTouch) {\n            document.addEventListener('touchmove', this.resizeColumnMoving)\n            document.addEventListener('touchcancel', this.resizeColumnEnd)\n            document.addEventListener('touchend', this.resizeColumnEnd)\n          } else {\n            document.addEventListener('mousemove', this.resizeColumnMoving)\n            document.addEventListener('mouseup', this.resizeColumnEnd)\n            document.addEventListener('mouseleave', this.resizeColumnEnd)\n          }\n        }\n      )\n    }\n\n    resizeColumnMoving (event) {\n      event.stopPropagation()\n      const { onResizedChange } = this.props\n      const { resized, currentlyResizing } = this.getResolvedState()\n\n      // Delete old value\n      const newResized = resized.filter(x => x.id !== currentlyResizing.id)\n\n      let pageX\n\n      if (event.type === 'touchmove') {\n        pageX = event.changedTouches[0].pageX\n      } else if (event.type === 'mousemove') {\n        pageX = event.pageX\n      }\n\n      // Set the min size to 10 to account for margin and border or else the\n      // group headers don't line up correctly\n      const newWidth = Math.max(\n        currentlyResizing.parentWidth + pageX - currentlyResizing.startX,\n        11\n      )\n\n      newResized.push({\n        id: currentlyResizing.id,\n        value: newWidth,\n      })\n\n      this.setStateWithData(\n        {\n          resized: newResized,\n        },\n        () => onResizedChange && onResizedChange(newResized, event)\n      )\n    }\n\n    resizeColumnEnd (event) {\n      event.stopPropagation()\n      const isTouch = event.type === 'touchend' || event.type === 'touchcancel'\n\n      if (isTouch) {\n        document.removeEventListener('touchmove', this.resizeColumnMoving)\n        document.removeEventListener('touchcancel', this.resizeColumnEnd)\n        document.removeEventListener('touchend', this.resizeColumnEnd)\n      }\n\n      // If its a touch event clear the mouse one's as well because sometimes\n      // the mouseDown event gets called as well, but the mouseUp event doesn't\n      document.removeEventListener('mousemove', this.resizeColumnMoving)\n      document.removeEventListener('mouseup', this.resizeColumnEnd)\n      document.removeEventListener('mouseleave', this.resizeColumnEnd)\n\n      // The touch events don't propagate up to the sorting's onMouseDown event so\n      // no need to prevent it from happening or else the first click after a touch\n      // event resize will not sort the column.\n      if (!isTouch) {\n        this.setStateWithData({\n          skipNextSort: true,\n          currentlyResizing: false,\n        })\n      }\n    }\n  }\n","export default Base =>\n  class extends Base {\n    componentWillMount () {\n      this.setStateWithData(this.getDataModel(this.getResolvedState(), true))\n    }\n\n    componentDidMount () {\n      this.fireFetchData()\n    }\n\n    componentWillReceiveProps (nextProps, nextState) {\n      const oldState = this.getResolvedState()\n      const newState = this.getResolvedState(nextProps, nextState)\n\n      // Do a deep compare of new and old `defaultOption` and\n      // if they are different reset `option = defaultOption`\n      const defaultableOptions = ['sorted', 'filtered', 'resized', 'expanded']\n      defaultableOptions.forEach(x => {\n        const defaultName = `default${x.charAt(0).toUpperCase() + x.slice(1)}`\n        if (JSON.stringify(oldState[defaultName]) !== JSON.stringify(newState[defaultName])) {\n          newState[x] = newState[defaultName]\n        }\n      })\n\n      // If they change these table options, we need to reset defaults\n      // or else we could get into a state where the user has changed the UI\n      // and then disabled the ability to change it back.\n      // e.g. If `filterable` has changed, set `filtered = defaultFiltered`\n      const resettableOptions = ['sortable', 'filterable', 'resizable']\n      resettableOptions.forEach(x => {\n        if (oldState[x] !== newState[x]) {\n          const baseName = x.replace('able', '')\n          const optionName = `${baseName}ed`\n          const defaultName = `default${optionName.charAt(0).toUpperCase() + optionName.slice(1)}`\n          newState[optionName] = newState[defaultName]\n        }\n      })\n\n      // Props that trigger a data update\n      if (\n        oldState.data !== newState.data ||\n        oldState.columns !== newState.columns ||\n        oldState.pivotBy !== newState.pivotBy ||\n        oldState.sorted !== newState.sorted ||\n        oldState.filtered !== newState.filtered\n      ) {\n        this.setStateWithData(this.getDataModel(newState, oldState.data !== newState.data))\n      }\n    }\n\n    setStateWithData (newState, cb) {\n      const oldState = this.getResolvedState()\n      const newResolvedState = this.getResolvedState({}, newState)\n      const { freezeWhenExpanded } = newResolvedState\n\n      // Default to unfrozen state\n      newResolvedState.frozen = false\n\n      // If freezeWhenExpanded is set, check for frozen conditions\n      if (freezeWhenExpanded) {\n        // if any rows are expanded, freeze the existing data and sorting\n        const keys = Object.keys(newResolvedState.expanded)\n        for (let i = 0; i < keys.length; i += 1) {\n          if (newResolvedState.expanded[keys[i]]) {\n            newResolvedState.frozen = true\n            break\n          }\n        }\n      }\n\n      // If the data isn't frozen and either the data or\n      // sorting model has changed, update the data\n      if (\n        (oldState.frozen && !newResolvedState.frozen) ||\n        oldState.sorted !== newResolvedState.sorted ||\n        oldState.filtered !== newResolvedState.filtered ||\n        oldState.showFilters !== newResolvedState.showFilters ||\n        (!newResolvedState.frozen && oldState.resolvedData !== newResolvedState.resolvedData)\n      ) {\n        // Handle collapseOnsortedChange & collapseOnDataChange\n        if (\n          (oldState.sorted !== newResolvedState.sorted && this.props.collapseOnSortingChange) ||\n          oldState.filtered !== newResolvedState.filtered ||\n          oldState.showFilters !== newResolvedState.showFilters ||\n          (oldState.sortedData &&\n            !newResolvedState.frozen &&\n            oldState.resolvedData !== newResolvedState.resolvedData &&\n            this.props.collapseOnDataChange)\n        ) {\n          newResolvedState.expanded = {}\n        }\n\n        Object.assign(newResolvedState, this.getSortedData(newResolvedState))\n      }\n\n      // Set page to 0 if filters change\n      if (oldState.filtered !== newResolvedState.filtered) {\n        newResolvedState.page = 0\n      }\n\n      // Calculate pageSize all the time\n      if (newResolvedState.sortedData) {\n        newResolvedState.pages = newResolvedState.manual\n          ? newResolvedState.pages\n          : Math.ceil(newResolvedState.sortedData.length / newResolvedState.pageSize)\n        newResolvedState.page = Math.max(\n          newResolvedState.page >= newResolvedState.pages\n            ? newResolvedState.pages - 1\n            : newResolvedState.page,\n          0\n        )\n      }\n\n      return this.setState(newResolvedState, () => {\n        if (cb) {\n          cb()\n        }\n        if (\n          oldState.page !== newResolvedState.page ||\n          oldState.pageSize !== newResolvedState.pageSize ||\n          oldState.sorted !== newResolvedState.sorted ||\n          oldState.filtered !== newResolvedState.filtered\n        ) {\n          this.fireFetchData()\n        }\n      })\n    }\n  }\n","import { PureComponent } from 'react';\nimport ReactDOM from 'react-dom';\n\ninterface Props {\n  className?: string;\n  root?: HTMLElement;\n}\n\nexport default class BodyPortal extends PureComponent<Props> {\n  node: HTMLElement = document.createElement('div');\n  portalRoot: HTMLElement;\n\n  constructor(props) {\n    super(props);\n    const {\n      className,\n      root = document.body\n    } = this.props;\n\n    if (className) {\n      this.node.classList.add(className);\n    }\n\n    this.portalRoot = root;\n    this.portalRoot.appendChild(this.node);\n  }\n\n  componentWillUnmount() {\n    this.portalRoot.removeChild(this.node);\n  }\n\n  render() {\n    return ReactDOM.createPortal(this.props.children, this.node);\n  }\n}\n","import isBrowser from './isBrowser';\n\nconst longerTimeoutBrowsers = ['Edge', 'Trident', 'Firefox'];\nlet timeoutDuration = 0;\nfor (let i = 0; i < longerTimeoutBrowsers.length; i += 1) {\n  if (isBrowser && navigator.userAgent.indexOf(longerTimeoutBrowsers[i]) >= 0) {\n    timeoutDuration = 1;\n    break;\n  }\n}\n\nexport function microtaskDebounce(fn) {\n  let called = false\n  return () => {\n    if (called) {\n      return\n    }\n    called = true\n    window.Promise.resolve().then(() => {\n      called = false\n      fn()\n    })\n  }\n}\n\nexport function taskDebounce(fn) {\n  let scheduled = false;\n  return () => {\n    if (!scheduled) {\n      scheduled = true;\n      setTimeout(() => {\n        scheduled = false;\n        fn();\n      }, timeoutDuration);\n    }\n  };\n}\n\nconst supportsMicroTasks = isBrowser && window.Promise\n\n\n/**\n* Create a debounced version of a method, that's asynchronously deferred\n* but called in the minimum time possible.\n*\n* @method\n* @memberof Popper.Utils\n* @argument {Function} fn\n* @returns {Function}\n*/\nexport default (supportsMicroTasks\n  ? microtaskDebounce\n  : taskDebounce);\n","/**\n * Check if the given variable is a function\n * @method\n * @memberof Popper.Utils\n * @argument {Any} functionToCheck - variable to check\n * @returns {Boolean} answer to: is a function?\n */\nexport default function isFunction(functionToCheck) {\n  const getType = {};\n  return (\n    functionToCheck &&\n    getType.toString.call(functionToCheck) === '[object Function]'\n  );\n}\n","/**\n * Get CSS computed property of the given element\n * @method\n * @memberof Popper.Utils\n * @argument {Eement} element\n * @argument {String} property\n */\nexport default function getStyleComputedProperty(element, property) {\n  if (element.nodeType !== 1) {\n    return [];\n  }\n  // NOTE: 1 DOM access here\n  const window = element.ownerDocument.defaultView;\n  const css = window.getComputedStyle(element, null);\n  return property ? css[property] : css;\n}\n","/**\n * Returns the parentNode or the host of the element\n * @method\n * @memberof Popper.Utils\n * @argument {Element} element\n * @returns {Element} parent\n */\nexport default function getParentNode(element) {\n  if (element.nodeName === 'HTML') {\n    return element;\n  }\n  return element.parentNode || element.host;\n}\n","import getStyleComputedProperty from './getStyleComputedProperty';\nimport getParentNode from './getParentNode';\n\n/**\n * Returns the scrolling parent of the given element\n * @method\n * @memberof Popper.Utils\n * @argument {Element} element\n * @returns {Element} scroll parent\n */\nexport default function getScrollParent(element) {\n  // Return body, `getScroll` will take care to get the correct `scrollTop` from it\n  if (!element) {\n    return document.body\n  }\n\n  switch (element.nodeName) {\n    case 'HTML':\n    case 'BODY':\n      return element.ownerDocument.body\n    case '#document':\n      return element.body\n  }\n\n  // Firefox want us to check `-x` and `-y` variations as well\n  const { overflow, overflowX, overflowY } = getStyleComputedProperty(element);\n  if (/(auto|scroll|overlay)/.test(overflow + overflowY + overflowX)) {\n    return element;\n  }\n\n  return getScrollParent(getParentNode(element));\n}\n","import isBrowser from './isBrowser';\n\nconst isIE11 = isBrowser && !!(window.MSInputMethodContext && document.documentMode);\nconst isIE10 = isBrowser && /MSIE 10/.test(navigator.userAgent);\n\n/**\n * Determines if the browser is Internet Explorer\n * @method\n * @memberof Popper.Utils\n * @param {Number} version to check\n * @returns {Boolean} isIE\n */\nexport default function isIE(version) {\n  if (version === 11) {\n    return isIE11;\n  }\n  if (version === 10) {\n    return isIE10;\n  }\n  return isIE11 || isIE10;\n}\n","import getStyleComputedProperty from './getStyleComputedProperty';\nimport isIE from './isIE';\n/**\n * Returns the offset parent of the given element\n * @method\n * @memberof Popper.Utils\n * @argument {Element} element\n * @returns {Element} offset parent\n */\nexport default function getOffsetParent(element) {\n  if (!element) {\n    return document.documentElement;\n  }\n\n  const noOffsetParent = isIE(10) ? document.body : null;\n\n  // NOTE: 1 DOM access here\n  let offsetParent = element.offsetParent || null;\n  // Skip hidden elements which don't have an offsetParent\n  while (offsetParent === noOffsetParent && element.nextElementSibling) {\n    offsetParent = (element = element.nextElementSibling).offsetParent;\n  }\n\n  const nodeName = offsetParent && offsetParent.nodeName;\n\n  if (!nodeName || nodeName === 'BODY' || nodeName === 'HTML') {\n    return element ? element.ownerDocument.documentElement : document.documentElement;\n  }\n\n  // .offsetParent will return the closest TH, TD or TABLE in case\n  // no offsetParent is present, I hate this job...\n  if (\n    ['TH', 'TD', 'TABLE'].indexOf(offsetParent.nodeName) !== -1 &&\n    getStyleComputedProperty(offsetParent, 'position') === 'static'\n  ) {\n    return getOffsetParent(offsetParent);\n  }\n\n  return offsetParent;\n}\n","/**\n * Finds the root node (document, shadowDOM root) of the given element\n * @method\n * @memberof Popper.Utils\n * @argument {Element} node\n * @returns {Element} root node\n */\nexport default function getRoot(node) {\n  if (node.parentNode !== null) {\n    return getRoot(node.parentNode);\n  }\n\n  return node;\n}\n","import isOffsetContainer from './isOffsetContainer';\nimport getRoot from './getRoot';\nimport getOffsetParent from './getOffsetParent';\n\n/**\n * Finds the offset parent common to the two provided nodes\n * @method\n * @memberof Popper.Utils\n * @argument {Element} element1\n * @argument {Element} element2\n * @returns {Element} common offset parent\n */\nexport default function findCommonOffsetParent(element1, element2) {\n  // This check is needed to avoid errors in case one of the elements isn't defined for any reason\n  if (!element1 || !element1.nodeType || !element2 || !element2.nodeType) {\n    return document.documentElement;\n  }\n\n  // Here we make sure to give as \"start\" the element that comes first in the DOM\n  const order =\n    element1.compareDocumentPosition(element2) &\n    Node.DOCUMENT_POSITION_FOLLOWING;\n  const start = order ? element1 : element2;\n  const end = order ? element2 : element1;\n\n  // Get common ancestor container\n  const range = document.createRange();\n  range.setStart(start, 0);\n  range.setEnd(end, 0);\n  const { commonAncestorContainer } = range;\n\n  // Both nodes are inside #document\n  if (\n    (element1 !== commonAncestorContainer &&\n      element2 !== commonAncestorContainer) ||\n    start.contains(end)\n  ) {\n    if (isOffsetContainer(commonAncestorContainer)) {\n      return commonAncestorContainer;\n    }\n\n    return getOffsetParent(commonAncestorContainer);\n  }\n\n  // one of the nodes is inside shadowDOM, find which one\n  const element1root = getRoot(element1);\n  if (element1root.host) {\n    return findCommonOffsetParent(element1root.host, element2);\n  } else {\n    return findCommonOffsetParent(element1, getRoot(element2).host);\n  }\n}\n","import getOffsetParent from './getOffsetParent';\n\nexport default function isOffsetContainer(element) {\n  const { nodeName } = element;\n  if (nodeName === 'BODY') {\n    return false;\n  }\n  return (\n    nodeName === 'HTML' || getOffsetParent(element.firstElementChild) === element\n  );\n}\n","/**\n * Gets the scroll value of the given element in the given side (top and left)\n * @method\n * @memberof Popper.Utils\n * @argument {Element} element\n * @argument {String} side `top` or `left`\n * @returns {number} amount of scrolled pixels\n */\nexport default function getScroll(element, side = 'top') {\n  const upperSide = side === 'top' ? 'scrollTop' : 'scrollLeft';\n  const nodeName = element.nodeName;\n\n  if (nodeName === 'BODY' || nodeName === 'HTML') {\n    const html = element.ownerDocument.documentElement;\n    const scrollingElement = element.ownerDocument.scrollingElement || html;\n    return scrollingElement[upperSide];\n  }\n\n  return element[upperSide];\n}\n","/*\n * Helper to detect borders of a given element\n * @method\n * @memberof Popper.Utils\n * @param {CSSStyleDeclaration} styles\n * Result of `getStyleComputedProperty` on the given element\n * @param {String} axis - `x` or `y`\n * @return {number} borders - The borders size of the given axis\n */\n\nexport default function getBordersSize(styles, axis) {\n  const sideA = axis === 'x' ? 'Left' : 'Top';\n  const sideB = sideA === 'Left' ? 'Right' : 'Bottom';\n\n  return (\n    parseFloat(styles[`border${sideA}Width`], 10) +\n    parseFloat(styles[`border${sideB}Width`], 10)\n  );\n}\n","import isIE from './isIE';\n\nfunction getSize(axis, body, html, computedStyle) {\n  return Math.max(\n    body[`offset${axis}`],\n    body[`scroll${axis}`],\n    html[`client${axis}`],\n    html[`offset${axis}`],\n    html[`scroll${axis}`],\n    isIE(10)\n      ? (parseInt(html[`offset${axis}`]) + \n      parseInt(computedStyle[`margin${axis === 'Height' ? 'Top' : 'Left'}`]) + \n      parseInt(computedStyle[`margin${axis === 'Height' ? 'Bottom' : 'Right'}`]))\n    : 0 \n  );\n}\n\nexport default function getWindowSizes(document) {\n  const body = document.body;\n  const html = document.documentElement;\n  const computedStyle = isIE(10) && getComputedStyle(html);\n\n  return {\n    height: getSize('Height', body, html, computedStyle),\n    width: getSize('Width', body, html, computedStyle),\n  };\n}\n","/**\n * Given element offsets, generate an output similar to getBoundingClientRect\n * @method\n * @memberof Popper.Utils\n * @argument {Object} offsets\n * @returns {Object} ClientRect like output\n */\nexport default function getClientRect(offsets) {\n  return {\n    ...offsets,\n    right: offsets.left + offsets.width,\n    bottom: offsets.top + offsets.height,\n  };\n}\n","import getStyleComputedProperty from './getStyleComputedProperty';\nimport getBordersSize from './getBordersSize';\nimport getWindowSizes from './getWindowSizes';\nimport getScroll from './getScroll';\nimport getClientRect from './getClientRect';\nimport isIE from './isIE';\n\n/**\n * Get bounding client rect of given element\n * @method\n * @memberof Popper.Utils\n * @param {HTMLElement} element\n * @return {Object} client rect\n */\nexport default function getBoundingClientRect(element) {\n  let rect = {};\n\n  // IE10 10 FIX: Please, don't ask, the element isn't\n  // considered in DOM in some circumstances...\n  // This isn't reproducible in IE10 compatibility mode of IE11\n  try {\n    if (isIE(10)) {\n      rect = element.getBoundingClientRect();\n      const scrollTop = getScroll(element, 'top');\n      const scrollLeft = getScroll(element, 'left');\n      rect.top += scrollTop;\n      rect.left += scrollLeft;\n      rect.bottom += scrollTop;\n      rect.right += scrollLeft;\n    }\n    else {\n      rect = element.getBoundingClientRect();\n    }\n  }\n  catch(e){}\n\n  const result = {\n    left: rect.left,\n    top: rect.top,\n    width: rect.right - rect.left,\n    height: rect.bottom - rect.top,\n  };\n\n  // subtract scrollbar size from sizes\n  const sizes = element.nodeName === 'HTML' ? getWindowSizes(element.ownerDocument) : {};\n  const width =\n    sizes.width || element.clientWidth || result.right - result.left;\n  const height =\n    sizes.height || element.clientHeight || result.bottom - result.top;\n\n  let horizScrollbar = element.offsetWidth - width;\n  let vertScrollbar = element.offsetHeight - height;\n\n  // if an hypothetical scrollbar is detected, we must be sure it's not a `border`\n  // we make this check conditional for performance reasons\n  if (horizScrollbar || vertScrollbar) {\n    const styles = getStyleComputedProperty(element);\n    horizScrollbar -= getBordersSize(styles, 'x');\n    vertScrollbar -= getBordersSize(styles, 'y');\n\n    result.width -= horizScrollbar;\n    result.height -= vertScrollbar;\n  }\n\n  return getClientRect(result);\n}\n","import getStyleComputedProperty from './getStyleComputedProperty';\nimport includeScroll from './includeScroll';\nimport getScrollParent from './getScrollParent';\nimport getBoundingClientRect from './getBoundingClientRect';\nimport runIsIE from './isIE';\nimport getClientRect from './getClientRect';\n\nexport default function getOffsetRectRelativeToArbitraryNode(children, parent, fixedPosition = false) {\n  const isIE10 = runIsIE(10);\n  const isHTML = parent.nodeName === 'HTML';\n  const childrenRect = getBoundingClientRect(children);\n  const parentRect = getBoundingClientRect(parent);\n  const scrollParent = getScrollParent(children);\n\n  const styles = getStyleComputedProperty(parent);\n  const borderTopWidth = parseFloat(styles.borderTopWidth, 10);\n  const borderLeftWidth = parseFloat(styles.borderLeftWidth, 10);\n\n  // In cases where the parent is fixed, we must ignore negative scroll in offset calc\n  if(fixedPosition && isHTML) {\n    parentRect.top = Math.max(parentRect.top, 0);\n    parentRect.left = Math.max(parentRect.left, 0);\n  }\n  let offsets = getClientRect({\n    top: childrenRect.top - parentRect.top - borderTopWidth,\n    left: childrenRect.left - parentRect.left - borderLeftWidth,\n    width: childrenRect.width,\n    height: childrenRect.height,\n  });\n  offsets.marginTop = 0;\n  offsets.marginLeft = 0;\n\n  // Subtract margins of documentElement in case it's being used as parent\n  // we do this only on HTML because it's the only element that behaves\n  // differently when margins are applied to it. The margins are included in\n  // the box of the documentElement, in the other cases not.\n  if (!isIE10 && isHTML) {\n    const marginTop = parseFloat(styles.marginTop, 10);\n    const marginLeft = parseFloat(styles.marginLeft, 10);\n\n    offsets.top -= borderTopWidth - marginTop;\n    offsets.bottom -= borderTopWidth - marginTop;\n    offsets.left -= borderLeftWidth - marginLeft;\n    offsets.right -= borderLeftWidth - marginLeft;\n\n    // Attach marginTop and marginLeft because in some circumstances we may need them\n    offsets.marginTop = marginTop;\n    offsets.marginLeft = marginLeft;\n  }\n\n  if (\n    isIE10 && !fixedPosition\n      ? parent.contains(scrollParent)\n      : parent === scrollParent && scrollParent.nodeName !== 'BODY'\n  ) {\n    offsets = includeScroll(offsets, parent);\n  }\n\n  return offsets;\n}\n","import getScroll from './getScroll';\n\n/*\n * Sum or subtract the element scroll values (left and top) from a given rect object\n * @method\n * @memberof Popper.Utils\n * @param {Object} rect - Rect object you want to change\n * @param {HTMLElement} element - The element from the function reads the scroll values\n * @param {Boolean} subtract - set to true if you want to subtract the scroll values\n * @return {Object} rect - The modifier rect object\n */\nexport default function includeScroll(rect, element, subtract = false) {\n  const scrollTop = getScroll(element, 'top');\n  const scrollLeft = getScroll(element, 'left');\n  const modifier = subtract ? -1 : 1;\n  rect.top += scrollTop * modifier;\n  rect.bottom += scrollTop * modifier;\n  rect.left += scrollLeft * modifier;\n  rect.right += scrollLeft * modifier;\n  return rect;\n}\n","import getStyleComputedProperty from './getStyleComputedProperty';\nimport isIE from './isIE';\n/**\n * Finds the first parent of an element that has a transformed property defined\n * @method\n * @memberof Popper.Utils\n * @argument {Element} element\n * @returns {Element} first transformed parent or documentElement\n */\n\nexport default function getFixedPositionOffsetParent(element) {\n  // This check is needed to avoid errors in case one of the elements isn't defined for any reason\n   if (!element || !element.parentElement || isIE()) {\n    return document.documentElement;\n  }\n  let el = element.parentElement;\n  while (el && getStyleComputedProperty(el, 'transform') === 'none') {\n    el = el.parentElement;\n  }\n  return el || document.documentElement;\n\n}\n","import getScrollParent from './getScrollParent';\nimport getParentNode from './getParentNode';\nimport findCommonOffsetParent from './findCommonOffsetParent';\nimport getOffsetRectRelativeToArbitraryNode from './getOffsetRectRelativeToArbitraryNode';\nimport getViewportOffsetRectRelativeToArtbitraryNode from './getViewportOffsetRectRelativeToArtbitraryNode';\nimport getWindowSizes from './getWindowSizes';\nimport isFixed from './isFixed';\nimport getFixedPositionOffsetParent from './getFixedPositionOffsetParent';\n\n/**\n * Computed the boundaries limits and return them\n * @method\n * @memberof Popper.Utils\n * @param {HTMLElement} popper\n * @param {HTMLElement} reference\n * @param {number} padding\n * @param {HTMLElement} boundariesElement - Element used to define the boundaries\n * @param {Boolean} fixedPosition - Is in fixed position mode\n * @returns {Object} Coordinates of the boundaries\n */\nexport default function getBoundaries(\n  popper,\n  reference,\n  padding,\n  boundariesElement,\n  fixedPosition = false\n) {\n  // NOTE: 1 DOM access here\n\n  let boundaries = { top: 0, left: 0 };\n  const offsetParent = fixedPosition ? getFixedPositionOffsetParent(popper) : findCommonOffsetParent(popper, reference);\n\n  // Handle viewport case\n  if (boundariesElement === 'viewport' ) {\n    boundaries = getViewportOffsetRectRelativeToArtbitraryNode(offsetParent, fixedPosition);\n  }\n\n  else {\n    // Handle other cases based on DOM element used as boundaries\n    let boundariesNode;\n    if (boundariesElement === 'scrollParent') {\n      boundariesNode = getScrollParent(getParentNode(reference));\n      if (boundariesNode.nodeName === 'BODY') {\n        boundariesNode = popper.ownerDocument.documentElement;\n      }\n    } else if (boundariesElement === 'window') {\n      boundariesNode = popper.ownerDocument.documentElement;\n    } else {\n      boundariesNode = boundariesElement;\n    }\n\n    const offsets = getOffsetRectRelativeToArbitraryNode(\n      boundariesNode,\n      offsetParent,\n      fixedPosition\n    );\n\n    // In case of HTML, we need a different computation\n    if (boundariesNode.nodeName === 'HTML' && !isFixed(offsetParent)) {\n      const { height, width } = getWindowSizes(popper.ownerDocument);\n      boundaries.top += offsets.top - offsets.marginTop;\n      boundaries.bottom = height + offsets.top;\n      boundaries.left += offsets.left - offsets.marginLeft;\n      boundaries.right = width + offsets.left;\n    } else {\n      // for all the other DOM elements, this one is good\n      boundaries = offsets;\n    }\n  }\n\n  // Add paddings\n  padding = padding || 0;\n  const isPaddingNumber = typeof padding === 'number';\n  boundaries.left += isPaddingNumber ? padding : padding.left || 0; \n  boundaries.top += isPaddingNumber ? padding : padding.top || 0; \n  boundaries.right -= isPaddingNumber ? padding : padding.right || 0; \n  boundaries.bottom -= isPaddingNumber ? padding : padding.bottom || 0; \n\n  return boundaries;\n}\n","import getOffsetRectRelativeToArbitraryNode from './getOffsetRectRelativeToArbitraryNode';\nimport getScroll from './getScroll';\nimport getClientRect from './getClientRect';\n\nexport default function getViewportOffsetRectRelativeToArtbitraryNode(element, excludeScroll = false) {\n  const html = element.ownerDocument.documentElement;\n  const relativeOffset = getOffsetRectRelativeToArbitraryNode(element, html);\n  const width = Math.max(html.clientWidth, window.innerWidth || 0);\n  const height = Math.max(html.clientHeight, window.innerHeight || 0);\n\n  const scrollTop = !excludeScroll ? getScroll(html) : 0;\n  const scrollLeft = !excludeScroll ? getScroll(html, 'left') : 0;\n\n  const offset = {\n    top: scrollTop - relativeOffset.top + relativeOffset.marginTop,\n    left: scrollLeft - relativeOffset.left + relativeOffset.marginLeft,\n    width,\n    height,\n  };\n\n  return getClientRect(offset);\n}\n","import getStyleComputedProperty from './getStyleComputedProperty';\nimport getParentNode from './getParentNode';\n\n/**\n * Check if the given element is fixed or is inside a fixed parent\n * @method\n * @memberof Popper.Utils\n * @argument {Element} element\n * @argument {Element} customContainer\n * @returns {Boolean} answer to \"isFixed?\"\n */\nexport default function isFixed(element) {\n  const nodeName = element.nodeName;\n  if (nodeName === 'BODY' || nodeName === 'HTML') {\n    return false;\n  }\n  if (getStyleComputedProperty(element, 'position') === 'fixed') {\n    return true;\n  }\n  return isFixed(getParentNode(element));\n}\n","import getBoundaries from '../utils/getBoundaries';\n\nfunction getArea({ width, height }) {\n  return width * height;\n}\n\n/**\n * Utility used to transform the `auto` placement to the placement with more\n * available space.\n * @method\n * @memberof Popper.Utils\n * @argument {Object} data - The data object generated by update method\n * @argument {Object} options - Modifiers configuration and options\n * @returns {Object} The data object, properly modified\n */\nexport default function computeAutoPlacement(\n  placement,\n  refRect,\n  popper,\n  reference,\n  boundariesElement,\n  padding = 0\n) {\n  if (placement.indexOf('auto') === -1) {\n    return placement;\n  }\n\n  const boundaries = getBoundaries(\n    popper,\n    reference,\n    padding,\n    boundariesElement\n  );\n\n  const rects = {\n    top: {\n      width: boundaries.width,\n      height: refRect.top - boundaries.top,\n    },\n    right: {\n      width: boundaries.right - refRect.right,\n      height: boundaries.height,\n    },\n    bottom: {\n      width: boundaries.width,\n      height: boundaries.bottom - refRect.bottom,\n    },\n    left: {\n      width: refRect.left - boundaries.left,\n      height: boundaries.height,\n    },\n  };\n\n  const sortedAreas = Object.keys(rects)\n    .map(key => ({\n      key,\n      ...rects[key],\n      area: getArea(rects[key]),\n    }))\n    .sort((a, b) => b.area - a.area);\n\n  const filteredAreas = sortedAreas.filter(\n    ({ width, height }) =>\n      width >= popper.clientWidth && height >= popper.clientHeight\n  );\n\n  const computedPlacement = filteredAreas.length > 0\n    ? filteredAreas[0].key\n    : sortedAreas[0].key;\n\n  const variation = placement.split('-')[1];\n\n  return computedPlacement + (variation ? `-${variation}` : '');\n}\n","import findCommonOffsetParent from './findCommonOffsetParent';\nimport getOffsetRectRelativeToArbitraryNode from './getOffsetRectRelativeToArbitraryNode';\nimport getFixedPositionOffsetParent from './getFixedPositionOffsetParent';\n\n/**\n * Get offsets to the reference element\n * @method\n * @memberof Popper.Utils\n * @param {Object} state\n * @param {Element} popper - the popper element\n * @param {Element} reference - the reference element (the popper will be relative to this)\n * @param {Element} fixedPosition - is in fixed position mode\n * @returns {Object} An object containing the offsets which will be applied to the popper\n */\nexport default function getReferenceOffsets(state, popper, reference, fixedPosition = null) {\n  const commonOffsetParent = fixedPosition ? getFixedPositionOffsetParent(popper) : findCommonOffsetParent(popper, reference);\n  return getOffsetRectRelativeToArbitraryNode(reference, commonOffsetParent, fixedPosition);\n}\n","/**\n * Get the outer sizes of the given element (offset size + margins)\n * @method\n * @memberof Popper.Utils\n * @argument {Element} element\n * @returns {Object} object containing width and height properties\n */\nexport default function getOuterSizes(element) {\n  const window = element.ownerDocument.defaultView;\n  const styles = window.getComputedStyle(element);\n  const x = parseFloat(styles.marginTop || 0) + parseFloat(styles.marginBottom || 0);\n  const y = parseFloat(styles.marginLeft || 0) + parseFloat(styles.marginRight || 0);\n  const result = {\n    width: element.offsetWidth + y,\n    height: element.offsetHeight + x,\n  };\n  return result;\n}\n","/**\n * Get the opposite placement of the given one\n * @method\n * @memberof Popper.Utils\n * @argument {String} placement\n * @returns {String} flipped placement\n */\nexport default function getOppositePlacement(placement) {\n  const hash = { left: 'right', right: 'left', bottom: 'top', top: 'bottom' };\n  return placement.replace(/left|right|bottom|top/g, matched => hash[matched]);\n}\n","import getOuterSizes from './getOuterSizes';\nimport getOppositePlacement from './getOppositePlacement';\n\n/**\n * Get offsets to the popper\n * @method\n * @memberof Popper.Utils\n * @param {Object} position - CSS position the Popper will get applied\n * @param {HTMLElement} popper - the popper element\n * @param {Object} referenceOffsets - the reference offsets (the popper will be relative to this)\n * @param {String} placement - one of the valid placement options\n * @returns {Object} popperOffsets - An object containing the offsets which will be applied to the popper\n */\nexport default function getPopperOffsets(popper, referenceOffsets, placement) {\n  placement = placement.split('-')[0];\n\n  // Get popper node sizes\n  const popperRect = getOuterSizes(popper);\n\n  // Add position, width and height to our offsets object\n  const popperOffsets = {\n    width: popperRect.width,\n    height: popperRect.height,\n  };\n\n  // depending by the popper placement we have to compute its offsets slightly differently\n  const isHoriz = ['right', 'left'].indexOf(placement) !== -1;\n  const mainSide = isHoriz ? 'top' : 'left';\n  const secondarySide = isHoriz ? 'left' : 'top';\n  const measurement = isHoriz ? 'height' : 'width';\n  const secondaryMeasurement = !isHoriz ? 'height' : 'width';\n\n  popperOffsets[mainSide] =\n    referenceOffsets[mainSide] +\n    referenceOffsets[measurement] / 2 -\n    popperRect[measurement] / 2;\n  if (placement === secondarySide) {\n    popperOffsets[secondarySide] =\n      referenceOffsets[secondarySide] - popperRect[secondaryMeasurement];\n  } else {\n    popperOffsets[secondarySide] =\n      referenceOffsets[getOppositePlacement(secondarySide)];\n  }\n\n  return popperOffsets;\n}\n","/**\n * Mimics the `find` method of Array\n * @method\n * @memberof Popper.Utils\n * @argument {Array} arr\n * @argument prop\n * @argument value\n * @returns index or -1\n */\nexport default function find(arr, check) {\n  // use native find if supported\n  if (Array.prototype.find) {\n    return arr.find(check);\n  }\n\n  // use `filter` to obtain the same behavior of `find`\n  return arr.filter(check)[0];\n}\n","import isFunction from './isFunction';\nimport findIndex from './findIndex';\nimport getClientRect from '../utils/getClientRect';\n\n/**\n * Loop trough the list of modifiers and run them in order,\n * each of them will then edit the data object.\n * @method\n * @memberof Popper.Utils\n * @param {dataObject} data\n * @param {Array} modifiers\n * @param {String} ends - Optional modifier name used as stopper\n * @returns {dataObject}\n */\nexport default function runModifiers(modifiers, data, ends) {\n  const modifiersToRun = ends === undefined\n    ? modifiers\n    : modifiers.slice(0, findIndex(modifiers, 'name', ends));\n\n  modifiersToRun.forEach(modifier => {\n    if (modifier['function']) { // eslint-disable-line dot-notation\n      console.warn('`modifier.function` is deprecated, use `modifier.fn`!');\n    }\n    const fn = modifier['function'] || modifier.fn; // eslint-disable-line dot-notation\n    if (modifier.enabled && isFunction(fn)) {\n      // Add properties to offsets to make them a complete clientRect object\n      // we do this before each modifier to make sure the previous one doesn't\n      // mess with these values\n      data.offsets.popper = getClientRect(data.offsets.popper);\n      data.offsets.reference = getClientRect(data.offsets.reference);\n\n      data = fn(data, modifier);\n    }\n  });\n\n  return data;\n}\n","import find from './find';\n\n/**\n * Return the index of the matching object\n * @method\n * @memberof Popper.Utils\n * @argument {Array} arr\n * @argument prop\n * @argument value\n * @returns index or -1\n */\nexport default function findIndex(arr, prop, value) {\n  // use native findIndex if supported\n  if (Array.prototype.findIndex) {\n    return arr.findIndex(cur => cur[prop] === value);\n  }\n\n  // use `find` + `indexOf` if `findIndex` isn't supported\n  const match = find(arr, obj => obj[prop] === value);\n  return arr.indexOf(match);\n}\n","import computeAutoPlacement from '../utils/computeAutoPlacement';\nimport getReferenceOffsets from '../utils/getReferenceOffsets';\nimport getPopperOffsets from '../utils/getPopperOffsets';\nimport runModifiers from '../utils/runModifiers';\n\n/**\n * Updates the position of the popper, computing the new offsets and applying\n * the new style.<br />\n * Prefer `scheduleUpdate` over `update` because of performance reasons.\n * @method\n * @memberof Popper\n */\nexport default function update() {\n  // if popper is destroyed, don't perform any further update\n  if (this.state.isDestroyed) {\n    return;\n  }\n\n  let data = {\n    instance: this,\n    styles: {},\n    arrowStyles: {},\n    attributes: {},\n    flipped: false,\n    offsets: {},\n  };\n\n  // compute reference element offsets\n  data.offsets.reference = getReferenceOffsets(\n    this.state,\n    this.popper,\n    this.reference,\n    this.options.positionFixed\n  );\n\n  // compute auto placement, store placement inside the data object,\n  // modifiers will be able to edit `placement` if needed\n  // and refer to originalPlacement to know the original value\n  data.placement = computeAutoPlacement(\n    this.options.placement,\n    data.offsets.reference,\n    this.popper,\n    this.reference,\n    this.options.modifiers.flip.boundariesElement,\n    this.options.modifiers.flip.padding\n  );\n\n  // store the computed placement inside `originalPlacement`\n  data.originalPlacement = data.placement;\n\n  data.positionFixed = this.options.positionFixed;\n\n  // compute the popper offsets\n  data.offsets.popper = getPopperOffsets(\n    this.popper,\n    data.offsets.reference,\n    data.placement\n  );\n\n  data.offsets.popper.position = this.options.positionFixed\n    ? 'fixed'\n    : 'absolute';\n\n  // run the modifiers\n  data = runModifiers(this.modifiers, data);\n\n  // the first `update` will call `onCreate` callback\n  // the other ones will call `onUpdate` callback\n  if (!this.state.isCreated) {\n    this.state.isCreated = true;\n    this.options.onCreate(data);\n  } else {\n    this.options.onUpdate(data);\n  }\n}\n","/**\n * Helper used to know if the given modifier is enabled.\n * @method\n * @memberof Popper.Utils\n * @returns {Boolean}\n */\nexport default function isModifierEnabled(modifiers, modifierName) {\n  return modifiers.some(\n    ({ name, enabled }) => enabled && name === modifierName\n  );\n}\n","/**\n * Get the prefixed supported property name\n * @method\n * @memberof Popper.Utils\n * @argument {String} property (camelCase)\n * @returns {String} prefixed property (camelCase or PascalCase, depending on the vendor prefix)\n */\nexport default function getSupportedPropertyName(property) {\n  const prefixes = [false, 'ms', 'Webkit', 'Moz', 'O'];\n  const upperProp = property.charAt(0).toUpperCase() + property.slice(1);\n\n  for (let i = 0; i < prefixes.length; i++) {\n    const prefix = prefixes[i];\n    const toCheck = prefix ? `${prefix}${upperProp}` : property;\n    if (typeof document.body.style[toCheck] !== 'undefined') {\n      return toCheck;\n    }\n  }\n  return null;\n}\n","import isModifierEnabled from '../utils/isModifierEnabled';\nimport getSupportedPropertyName from '../utils/getSupportedPropertyName';\n\n/**\n * Destroys the popper.\n * @method\n * @memberof Popper\n */\nexport default function destroy() {\n  this.state.isDestroyed = true;\n\n  // touch DOM only if `applyStyle` modifier is enabled\n  if (isModifierEnabled(this.modifiers, 'applyStyle')) {\n    this.popper.removeAttribute('x-placement');\n    this.popper.style.position = '';\n    this.popper.style.top = '';\n    this.popper.style.left = '';\n    this.popper.style.right = '';\n    this.popper.style.bottom = '';\n    this.popper.style.willChange = '';\n    this.popper.style[getSupportedPropertyName('transform')] = '';\n  }\n\n  this.disableEventListeners();\n\n  // remove the popper if user explicity asked for the deletion on destroy\n  // do not use `remove` because IE11 doesn't support it\n  if (this.options.removeOnDestroy) {\n    this.popper.parentNode.removeChild(this.popper);\n  }\n  return this;\n}\n","/**\n * Get the window associated with the element\n * @argument {Element} element\n * @returns {Window}\n */\nexport default function getWindow(element) {\n  const ownerDocument = element.ownerDocument;\n  return ownerDocument ? ownerDocument.defaultView : window;\n}\n","import getScrollParent from './getScrollParent';\nimport getWindow from './getWindow';\n\nfunction attachToScrollParents(scrollParent, event, callback, scrollParents) {\n  const isBody = scrollParent.nodeName === 'BODY';\n  const target = isBody ? scrollParent.ownerDocument.defaultView : scrollParent;\n  target.addEventListener(event, callback, { passive: true });\n\n  if (!isBody) {\n    attachToScrollParents(\n      getScrollParent(target.parentNode),\n      event,\n      callback,\n      scrollParents\n    );\n  }\n  scrollParents.push(target);\n}\n\n/**\n * Setup needed event listeners used to update the popper position\n * @method\n * @memberof Popper.Utils\n * @private\n */\nexport default function setupEventListeners(\n  reference,\n  options,\n  state,\n  updateBound\n) {\n  // Resize event listener on window\n  state.updateBound = updateBound;\n  getWindow(reference).addEventListener('resize', state.updateBound, { passive: true });\n\n  // Scroll event listener on scroll parents\n  const scrollElement = getScrollParent(reference);\n  attachToScrollParents(\n    scrollElement,\n    'scroll',\n    state.updateBound,\n    state.scrollParents\n  );\n  state.scrollElement = scrollElement;\n  state.eventsEnabled = true;\n\n  return state;\n}\n","import setupEventListeners from '../utils/setupEventListeners';\n\n/**\n * It will add resize/scroll events and start recalculating\n * position of the popper element when they are triggered.\n * @method\n * @memberof Popper\n */\nexport default function enableEventListeners() {\n  if (!this.state.eventsEnabled) {\n    this.state = setupEventListeners(\n      this.reference,\n      this.options,\n      this.state,\n      this.scheduleUpdate\n    );\n  }\n}\n","import removeEventListeners from '../utils/removeEventListeners';\n\n/**\n * It will remove resize/scroll events and won't recalculate popper position\n * when they are triggered. It also won't trigger `onUpdate` callback anymore,\n * unless you call `update` method manually.\n * @method\n * @memberof Popper\n */\nexport default function disableEventListeners() {\n  if (this.state.eventsEnabled) {\n    cancelAnimationFrame(this.scheduleUpdate);\n    this.state = removeEventListeners(this.reference, this.state);\n  }\n}\n","import getWindow from './getWindow';\n\n/**\n * Remove event listeners used to update the popper position\n * @method\n * @memberof Popper.Utils\n * @private\n */\nexport default function removeEventListeners(reference, state) {\n  // Remove resize event listener on window\n  getWindow(reference).removeEventListener('resize', state.updateBound);\n\n  // Remove scroll event listener on scroll parents\n  state.scrollParents.forEach(target => {\n    target.removeEventListener('scroll', state.updateBound);\n  });\n\n  // Reset state\n  state.updateBound = null;\n  state.scrollParents = [];\n  state.scrollElement = null;\n  state.eventsEnabled = false;\n  return state;\n}\n","/**\n * Tells if a given input is a number\n * @method\n * @memberof Popper.Utils\n * @param {*} input to check\n * @return {Boolean}\n */\nexport default function isNumeric(n) {\n  return n !== '' && !isNaN(parseFloat(n)) && isFinite(n);\n}\n","import isNumeric from './isNumeric';\n\n/**\n * Set the style to the given popper\n * @method\n * @memberof Popper.Utils\n * @argument {Element} element - Element to apply the style to\n * @argument {Object} styles\n * Object with a list of properties and values which will be applied to the element\n */\nexport default function setStyles(element, styles) {\n  Object.keys(styles).forEach(prop => {\n    let unit = '';\n    // add unit if the value is numeric and is one of the following\n    if (\n      ['width', 'height', 'top', 'right', 'bottom', 'left'].indexOf(prop) !==\n        -1 &&\n      isNumeric(styles[prop])\n    ) {\n      unit = 'px';\n    }\n    element.style[prop] = styles[prop] + unit;\n  });\n}\n","import find from './find';\n\n/**\n * Helper used to know if the given modifier depends from another one.<br />\n * It checks if the needed modifier is listed and enabled.\n * @method\n * @memberof Popper.Utils\n * @param {Array} modifiers - list of modifiers\n * @param {String} requestingName - name of requesting modifier\n * @param {String} requestedName - name of requested modifier\n * @returns {Boolean}\n */\nexport default function isModifierRequired(\n  modifiers,\n  requestingName,\n  requestedName\n) {\n  const requesting = find(modifiers, ({ name }) => name === requestingName);\n\n  const isRequired =\n    !!requesting &&\n    modifiers.some(modifier => {\n      return (\n        modifier.name === requestedName &&\n        modifier.enabled &&\n        modifier.order < requesting.order\n      );\n    });\n\n  if (!isRequired) {\n    const requesting = `\\`${requestingName}\\``;\n    const requested = `\\`${requestedName}\\``;\n    console.warn(\n      `${requested} modifier is required by ${requesting} modifier in order to work, be sure to include it before ${requesting}!`\n    );\n  }\n  return isRequired;\n}\n","import placements from '../methods/placements';\n\n// Get rid of `auto` `auto-start` and `auto-end`\nconst validPlacements = placements.slice(3);\n\n/**\n * Given an initial placement, returns all the subsequent placements\n * clockwise (or counter-clockwise).\n *\n * @method\n * @memberof Popper.Utils\n * @argument {String} placement - A valid placement (it accepts variations)\n * @argument {Boolean} counter - Set to true to walk the placements counterclockwise\n * @returns {Array} placements including their variations\n */\nexport default function clockwise(placement, counter = false) {\n  const index = validPlacements.indexOf(placement);\n  const arr = validPlacements\n    .slice(index + 1)\n    .concat(validPlacements.slice(0, index));\n  return counter ? arr.reverse() : arr;\n}\n","import getOppositePlacement from '../utils/getOppositePlacement';\nimport getOppositeVariation from '../utils/getOppositeVariation';\nimport getPopperOffsets from '../utils/getPopperOffsets';\nimport runModifiers from '../utils/runModifiers';\nimport getBoundaries from '../utils/getBoundaries';\nimport isModifierEnabled from '../utils/isModifierEnabled';\nimport clockwise from '../utils/clockwise';\n\nconst BEHAVIORS = {\n  FLIP: 'flip',\n  CLOCKWISE: 'clockwise',\n  COUNTERCLOCKWISE: 'counterclockwise',\n};\n\n/**\n * @function\n * @memberof Modifiers\n * @argument {Object} data - The data object generated by update method\n * @argument {Object} options - Modifiers configuration and options\n * @returns {Object} The data object, properly modified\n */\nexport default function flip(data, options) {\n  // if `inner` modifier is enabled, we can't use the `flip` modifier\n  if (isModifierEnabled(data.instance.modifiers, 'inner')) {\n    return data;\n  }\n\n  if (data.flipped && data.placement === data.originalPlacement) {\n    // seems like flip is trying to loop, probably there's not enough space on any of the flippable sides\n    return data;\n  }\n\n  const boundaries = getBoundaries(\n    data.instance.popper,\n    data.instance.reference,\n    options.padding,\n    options.boundariesElement,\n    data.positionFixed\n  );\n\n  let placement = data.placement.split('-')[0];\n  let placementOpposite = getOppositePlacement(placement);\n  let variation = data.placement.split('-')[1] || '';\n\n  let flipOrder = [];\n\n  switch (options.behavior) {\n    case BEHAVIORS.FLIP:\n      flipOrder = [placement, placementOpposite];\n      break;\n    case BEHAVIORS.CLOCKWISE:\n      flipOrder = clockwise(placement);\n      break;\n    case BEHAVIORS.COUNTERCLOCKWISE:\n      flipOrder = clockwise(placement, true);\n      break;\n    default:\n      flipOrder = options.behavior;\n  }\n\n  flipOrder.forEach((step, index) => {\n    if (placement !== step || flipOrder.length === index + 1) {\n      return data;\n    }\n\n    placement = data.placement.split('-')[0];\n    placementOpposite = getOppositePlacement(placement);\n\n    const popperOffsets = data.offsets.popper;\n    const refOffsets = data.offsets.reference;\n\n    // using floor because the reference offsets may contain decimals we are not going to consider here\n    const floor = Math.floor;\n    const overlapsRef =\n      (placement === 'left' &&\n        floor(popperOffsets.right) > floor(refOffsets.left)) ||\n      (placement === 'right' &&\n        floor(popperOffsets.left) < floor(refOffsets.right)) ||\n      (placement === 'top' &&\n        floor(popperOffsets.bottom) > floor(refOffsets.top)) ||\n      (placement === 'bottom' &&\n        floor(popperOffsets.top) < floor(refOffsets.bottom));\n\n    const overflowsLeft = floor(popperOffsets.left) < floor(boundaries.left);\n    const overflowsRight = floor(popperOffsets.right) > floor(boundaries.right);\n    const overflowsTop = floor(popperOffsets.top) < floor(boundaries.top);\n    const overflowsBottom =\n      floor(popperOffsets.bottom) > floor(boundaries.bottom);\n\n    const overflowsBoundaries =\n      (placement === 'left' && overflowsLeft) ||\n      (placement === 'right' && overflowsRight) ||\n      (placement === 'top' && overflowsTop) ||\n      (placement === 'bottom' && overflowsBottom);\n\n    // flip the variation if required\n    const isVertical = ['top', 'bottom'].indexOf(placement) !== -1;\n    const flippedVariation =\n      !!options.flipVariations &&\n      ((isVertical && variation === 'start' && overflowsLeft) ||\n        (isVertical && variation === 'end' && overflowsRight) ||\n        (!isVertical && variation === 'start' && overflowsTop) ||\n        (!isVertical && variation === 'end' && overflowsBottom));\n\n    if (overlapsRef || overflowsBoundaries || flippedVariation) {\n      // this boolean to detect any flip loop\n      data.flipped = true;\n\n      if (overlapsRef || overflowsBoundaries) {\n        placement = flipOrder[index + 1];\n      }\n\n      if (flippedVariation) {\n        variation = getOppositeVariation(variation);\n      }\n\n      data.placement = placement + (variation ? '-' + variation : '');\n\n      // this object contains `position`, we want to preserve it along with\n      // any additional property we may add in the future\n      data.offsets.popper = {\n        ...data.offsets.popper,\n        ...getPopperOffsets(\n          data.instance.popper,\n          data.offsets.reference,\n          data.placement\n        ),\n      };\n\n      data = runModifiers(data.instance.modifiers, data, 'flip');\n    }\n  });\n  return data;\n}\n","import isNumeric from '../utils/isNumeric';\nimport getClientRect from '../utils/getClientRect';\nimport find from '../utils/find';\n\n/**\n * Converts a string containing value + unit into a px value number\n * @function\n * @memberof {modifiers~offset}\n * @private\n * @argument {String} str - Value + unit string\n * @argument {String} measurement - `height` or `width`\n * @argument {Object} popperOffsets\n * @argument {Object} referenceOffsets\n * @returns {Number|String}\n * Value in pixels, or original string if no values were extracted\n */\nexport function toValue(str, measurement, popperOffsets, referenceOffsets) {\n  // separate value from unit\n  const split = str.match(/((?:\\-|\\+)?\\d*\\.?\\d*)(.*)/);\n  const value = +split[1];\n  const unit = split[2];\n\n  // If it's not a number it's an operator, I guess\n  if (!value) {\n    return str;\n  }\n\n  if (unit.indexOf('%') === 0) {\n    let element;\n    switch (unit) {\n      case '%p':\n        element = popperOffsets;\n        break;\n      case '%':\n      case '%r':\n      default:\n        element = referenceOffsets;\n    }\n\n    const rect = getClientRect(element);\n    return rect[measurement] / 100 * value;\n  } else if (unit === 'vh' || unit === 'vw') {\n    // if is a vh or vw, we calculate the size based on the viewport\n    let size;\n    if (unit === 'vh') {\n      size = Math.max(\n        document.documentElement.clientHeight,\n        window.innerHeight || 0\n      );\n    } else {\n      size = Math.max(\n        document.documentElement.clientWidth,\n        window.innerWidth || 0\n      );\n    }\n    return size / 100 * value;\n  } else {\n    // if is an explicit pixel unit, we get rid of the unit and keep the value\n    // if is an implicit unit, it's px, and we return just the value\n    return value;\n  }\n}\n\n/**\n * Parse an `offset` string to extrapolate `x` and `y` numeric offsets.\n * @function\n * @memberof {modifiers~offset}\n * @private\n * @argument {String} offset\n * @argument {Object} popperOffsets\n * @argument {Object} referenceOffsets\n * @argument {String} basePlacement\n * @returns {Array} a two cells array with x and y offsets in numbers\n */\nexport function parseOffset(\n  offset,\n  popperOffsets,\n  referenceOffsets,\n  basePlacement\n) {\n  const offsets = [0, 0];\n\n  // Use height if placement is left or right and index is 0 otherwise use width\n  // in this way the first offset will use an axis and the second one\n  // will use the other one\n  const useHeight = ['right', 'left'].indexOf(basePlacement) !== -1;\n\n  // Split the offset string to obtain a list of values and operands\n  // The regex addresses values with the plus or minus sign in front (+10, -20, etc)\n  const fragments = offset.split(/(\\+|\\-)/).map(frag => frag.trim());\n\n  // Detect if the offset string contains a pair of values or a single one\n  // they could be separated by comma or space\n  const divider = fragments.indexOf(\n    find(fragments, frag => frag.search(/,|\\s/) !== -1)\n  );\n\n  if (fragments[divider] && fragments[divider].indexOf(',') === -1) {\n    console.warn(\n      'Offsets separated by white space(s) are deprecated, use a comma (,) instead.'\n    );\n  }\n\n  // If divider is found, we divide the list of values and operands to divide\n  // them by ofset X and Y.\n  const splitRegex = /\\s*,\\s*|\\s+/;\n  let ops = divider !== -1\n    ? [\n        fragments\n          .slice(0, divider)\n          .concat([fragments[divider].split(splitRegex)[0]]),\n        [fragments[divider].split(splitRegex)[1]].concat(\n          fragments.slice(divider + 1)\n        ),\n      ]\n    : [fragments];\n\n  // Convert the values with units to absolute pixels to allow our computations\n  ops = ops.map((op, index) => {\n    // Most of the units rely on the orientation of the popper\n    const measurement = (index === 1 ? !useHeight : useHeight)\n      ? 'height'\n      : 'width';\n    let mergeWithPrevious = false;\n    return (\n      op\n        // This aggregates any `+` or `-` sign that aren't considered operators\n        // e.g.: 10 + +5 => [10, +, +5]\n        .reduce((a, b) => {\n          if (a[a.length - 1] === '' && ['+', '-'].indexOf(b) !== -1) {\n            a[a.length - 1] = b;\n            mergeWithPrevious = true;\n            return a;\n          } else if (mergeWithPrevious) {\n            a[a.length - 1] += b;\n            mergeWithPrevious = false;\n            return a;\n          } else {\n            return a.concat(b);\n          }\n        }, [])\n        // Here we convert the string values into number values (in px)\n        .map(str => toValue(str, measurement, popperOffsets, referenceOffsets))\n    );\n  });\n\n  // Loop trough the offsets arrays and execute the operations\n  ops.forEach((op, index) => {\n    op.forEach((frag, index2) => {\n      if (isNumeric(frag)) {\n        offsets[index] += frag * (op[index2 - 1] === '-' ? -1 : 1);\n      }\n    });\n  });\n  return offsets;\n}\n\n/**\n * @function\n * @memberof Modifiers\n * @argument {Object} data - The data object generated by update method\n * @argument {Object} options - Modifiers configuration and options\n * @argument {Number|String} options.offset=0\n * The offset value as described in the modifier description\n * @returns {Object} The data object, properly modified\n */\nexport default function offset(data, { offset }) {\n  const { placement, offsets: { popper, reference } } = data;\n  const basePlacement = placement.split('-')[0];\n\n  let offsets;\n  if (isNumeric(+offset)) {\n    offsets = [+offset, 0];\n  } else {\n    offsets = parseOffset(offset, popper, reference, basePlacement);\n  }\n\n  if (basePlacement === 'left') {\n    popper.top += offsets[0];\n    popper.left -= offsets[1];\n  } else if (basePlacement === 'right') {\n    popper.top += offsets[0];\n    popper.left += offsets[1];\n  } else if (basePlacement === 'top') {\n    popper.left += offsets[0];\n    popper.top -= offsets[1];\n  } else if (basePlacement === 'bottom') {\n    popper.left += offsets[0];\n    popper.top += offsets[1];\n  }\n\n  data.popper = popper;\n  return data;\n}\n","/**\n * @function\n * @memberof Modifiers\n * @argument {Object} data - The data object generated by `update` method\n * @argument {Object} options - Modifiers configuration and options\n * @returns {Object} The data object, properly modified\n */\nexport default function shift(data) {\n  const placement = data.placement;\n  const basePlacement = placement.split('-')[0];\n  const shiftvariation = placement.split('-')[1];\n\n  // if shift shiftvariation is specified, run the modifier\n  if (shiftvariation) {\n    const { reference, popper } = data.offsets;\n    const isVertical = ['bottom', 'top'].indexOf(basePlacement) !== -1;\n    const side = isVertical ? 'left' : 'top';\n    const measurement = isVertical ? 'width' : 'height';\n\n    const shiftOffsets = {\n      start: { [side]: reference[side] },\n      end: {\n        [side]: reference[side] + reference[measurement] - popper[measurement],\n      },\n    };\n\n    data.offsets.popper = { ...popper, ...shiftOffsets[shiftvariation] };\n  }\n\n  return data;\n}\n","import getOffsetParent from '../utils/getOffsetParent';\nimport getBoundaries from '../utils/getBoundaries';\nimport getSupportedPropertyName from '../utils/getSupportedPropertyName';\n\n/**\n * @function\n * @memberof Modifiers\n * @argument {Object} data - The data object generated by `update` method\n * @argument {Object} options - Modifiers configuration and options\n * @returns {Object} The data object, properly modified\n */\nexport default function preventOverflow(data, options) {\n  let boundariesElement =\n    options.boundariesElement || getOffsetParent(data.instance.popper);\n\n  // If offsetParent is the reference element, we really want to\n  // go one step up and use the next offsetParent as reference to\n  // avoid to make this modifier completely useless and look like broken\n  if (data.instance.reference === boundariesElement) {\n    boundariesElement = getOffsetParent(boundariesElement);\n  }\n\n  // NOTE: DOM access here\n  // resets the popper's position so that the document size can be calculated excluding\n  // the size of the popper element itself\n  const transformProp = getSupportedPropertyName('transform');\n  const popperStyles = data.instance.popper.style; // assignment to help minification\n  const { top, left, [transformProp]: transform } = popperStyles;\n  popperStyles.top = '';\n  popperStyles.left = '';\n  popperStyles[transformProp] = '';\n\n  const boundaries = getBoundaries(\n    data.instance.popper,\n    data.instance.reference,\n    options.padding,\n    boundariesElement,\n    data.positionFixed\n  );\n\n  // NOTE: DOM access here\n  // restores the original style properties after the offsets have been computed\n  popperStyles.top = top;\n  popperStyles.left = left;\n  popperStyles[transformProp] = transform;\n\n  options.boundaries = boundaries;\n\n  const order = options.priority;\n  let popper = data.offsets.popper;\n\n  const check = {\n    primary(placement) {\n      let value = popper[placement];\n      if (\n        popper[placement] < boundaries[placement] &&\n        !options.escapeWithReference\n      ) {\n        value = Math.max(popper[placement], boundaries[placement]);\n      }\n      return { [placement]: value };\n    },\n    secondary(placement) {\n      const mainSide = placement === 'right' ? 'left' : 'top';\n      let value = popper[mainSide];\n      if (\n        popper[placement] > boundaries[placement] &&\n        !options.escapeWithReference\n      ) {\n        value = Math.min(\n          popper[mainSide],\n          boundaries[placement] -\n            (placement === 'right' ? popper.width : popper.height)\n        );\n      }\n      return { [mainSide]: value };\n    },\n  };\n\n  order.forEach(placement => {\n    const side =\n      ['left', 'top'].indexOf(placement) !== -1 ? 'primary' : 'secondary';\n    popper = { ...popper, ...check[side](placement) };\n  });\n\n  data.offsets.popper = popper;\n\n  return data;\n}\n","/**\n * @function\n * @memberof Modifiers\n * @argument {Object} data - The data object generated by update method\n * @argument {Object} options - Modifiers configuration and options\n * @returns {Object} The data object, properly modified\n */\nexport default function keepTogether(data) {\n  const { popper, reference } = data.offsets;\n  const placement = data.placement.split('-')[0];\n  const floor = Math.floor;\n  const isVertical = ['top', 'bottom'].indexOf(placement) !== -1;\n  const side = isVertical ? 'right' : 'bottom';\n  const opSide = isVertical ? 'left' : 'top';\n  const measurement = isVertical ? 'width' : 'height';\n\n  if (popper[side] < floor(reference[opSide])) {\n    data.offsets.popper[opSide] =\n      floor(reference[opSide]) - popper[measurement];\n  }\n  if (popper[opSide] > floor(reference[side])) {\n    data.offsets.popper[opSide] = floor(reference[side]);\n  }\n\n  return data;\n}\n","import getClientRect from '../utils/getClientRect';\nimport getOuterSizes from '../utils/getOuterSizes';\nimport isModifierRequired from '../utils/isModifierRequired';\nimport getStyleComputedProperty from '../utils/getStyleComputedProperty';\n\n/**\n * @function\n * @memberof Modifiers\n * @argument {Object} data - The data object generated by update method\n * @argument {Object} options - Modifiers configuration and options\n * @returns {Object} The data object, properly modified\n */\nexport default function arrow(data, options) {\n  // arrow depends on keepTogether in order to work\n  if (!isModifierRequired(data.instance.modifiers, 'arrow', 'keepTogether')) {\n    return data;\n  }\n\n  let arrowElement = options.element;\n\n  // if arrowElement is a string, suppose it's a CSS selector\n  if (typeof arrowElement === 'string') {\n    arrowElement = data.instance.popper.querySelector(arrowElement);\n\n    // if arrowElement is not found, don't run the modifier\n    if (!arrowElement) {\n      return data;\n    }\n  } else {\n    // if the arrowElement isn't a query selector we must check that the\n    // provided DOM node is child of its popper node\n    if (!data.instance.popper.contains(arrowElement)) {\n      console.warn(\n        'WARNING: `arrow.element` must be child of its popper element!'\n      );\n      return data;\n    }\n  }\n\n  const placement = data.placement.split('-')[0];\n  const { popper, reference } = data.offsets;\n  const isVertical = ['left', 'right'].indexOf(placement) !== -1;\n\n  const len = isVertical ? 'height' : 'width';\n  const sideCapitalized = isVertical ? 'Top' : 'Left';\n  const side = sideCapitalized.toLowerCase();\n  const altSide = isVertical ? 'left' : 'top';\n  const opSide = isVertical ? 'bottom' : 'right';\n  const arrowElementSize = getOuterSizes(arrowElement)[len];\n\n  //\n  // extends keepTogether behavior making sure the popper and its\n  // reference have enough pixels in conjunction\n  //\n\n  // top/left side\n  if (reference[opSide] - arrowElementSize < popper[side]) {\n    data.offsets.popper[side] -=\n      popper[side] - (reference[opSide] - arrowElementSize);\n  }\n  // bottom/right side\n  if (reference[side] + arrowElementSize > popper[opSide]) {\n    data.offsets.popper[side] +=\n      reference[side] + arrowElementSize - popper[opSide];\n  }\n  data.offsets.popper = getClientRect(data.offsets.popper);\n\n  // compute center of the popper\n  const center = reference[side] + reference[len] / 2 - arrowElementSize / 2;\n\n  // Compute the sideValue using the updated popper offsets\n  // take popper margin in account because we don't have this info available\n  const css = getStyleComputedProperty(data.instance.popper);\n  const popperMarginSide = parseFloat(css[`margin${sideCapitalized}`], 10);\n  const popperBorderSide = parseFloat(css[`border${sideCapitalized}Width`], 10);\n  let sideValue =\n    center - data.offsets.popper[side] - popperMarginSide - popperBorderSide;\n\n  // prevent arrowElement from being placed not contiguously to its popper\n  sideValue = Math.max(Math.min(popper[len] - arrowElementSize, sideValue), 0);\n\n  data.arrowElement = arrowElement;\n  data.offsets.arrow = {\n    [side]: Math.round(sideValue),\n    [altSide]: '', // make sure to unset any eventual altSide value from the DOM node\n  };\n\n  return data;\n}\n","/**\n * Get the opposite placement variation of the given one\n * @method\n * @memberof Popper.Utils\n * @argument {String} placement variation\n * @returns {String} flipped placement variation\n */\nexport default function getOppositeVariation(variation) {\n  if (variation === 'end') {\n    return 'start';\n  } else if (variation === 'start') {\n    return 'end';\n  }\n  return variation;\n}\n","import getClientRect from '../utils/getClientRect';\nimport getOppositePlacement from '../utils/getOppositePlacement';\n\n/**\n * @function\n * @memberof Modifiers\n * @argument {Object} data - The data object generated by `update` method\n * @argument {Object} options - Modifiers configuration and options\n * @returns {Object} The data object, properly modified\n */\nexport default function inner(data) {\n  const placement = data.placement;\n  const basePlacement = placement.split('-')[0];\n  const { popper, reference } = data.offsets;\n  const isHoriz = ['left', 'right'].indexOf(basePlacement) !== -1;\n\n  const subtractLength = ['top', 'left'].indexOf(basePlacement) === -1;\n\n  popper[isHoriz ? 'left' : 'top'] =\n    reference[basePlacement] -\n    (subtractLength ? popper[isHoriz ? 'width' : 'height'] : 0);\n\n  data.placement = getOppositePlacement(placement);\n  data.offsets.popper = getClientRect(popper);\n\n  return data;\n}\n","import isModifierRequired from '../utils/isModifierRequired';\nimport find from '../utils/find';\n\n/**\n * @function\n * @memberof Modifiers\n * @argument {Object} data - The data object generated by update method\n * @argument {Object} options - Modifiers configuration and options\n * @returns {Object} The data object, properly modified\n */\nexport default function hide(data) {\n  if (!isModifierRequired(data.instance.modifiers, 'hide', 'preventOverflow')) {\n    return data;\n  }\n\n  const refRect = data.offsets.reference;\n  const bound = find(\n    data.instance.modifiers,\n    modifier => modifier.name === 'preventOverflow'\n  ).boundaries;\n\n  if (\n    refRect.bottom < bound.top ||\n    refRect.left > bound.right ||\n    refRect.top > bound.bottom ||\n    refRect.right < bound.left\n  ) {\n    // Avoid unnecessary DOM access if visibility hasn't changed\n    if (data.hide === true) {\n      return data;\n    }\n\n    data.hide = true;\n    data.attributes['x-out-of-boundaries'] = '';\n  } else {\n    // Avoid unnecessary DOM access if visibility hasn't changed\n    if (data.hide === false) {\n      return data;\n    }\n\n    data.hide = false;\n    data.attributes['x-out-of-boundaries'] = false;\n  }\n\n  return data;\n}\n","import getSupportedPropertyName from '../utils/getSupportedPropertyName';\nimport find from '../utils/find';\nimport getOffsetParent from '../utils/getOffsetParent';\nimport getBoundingClientRect from '../utils/getBoundingClientRect';\nimport getRoundedOffsets from '../utils/getRoundedOffsets';\nimport isBrowser from '../utils/isBrowser';\n\nconst isFirefox = isBrowser && /Firefox/i.test(navigator.userAgent);\n\n/**\n * @function\n * @memberof Modifiers\n * @argument {Object} data - The data object generated by `update` method\n * @argument {Object} options - Modifiers configuration and options\n * @returns {Object} The data object, properly modified\n */\nexport default function computeStyle(data, options) {\n  const { x, y } = options;\n  const { popper } = data.offsets;\n\n  // Remove this legacy support in Popper.js v2\n  const legacyGpuAccelerationOption = find(\n    data.instance.modifiers,\n    modifier => modifier.name === 'applyStyle'\n  ).gpuAcceleration;\n  if (legacyGpuAccelerationOption !== undefined) {\n    console.warn(\n      'WARNING: `gpuAcceleration` option moved to `computeStyle` modifier and will not be supported in future versions of Popper.js!'\n    );\n  }\n  const gpuAcceleration =\n    legacyGpuAccelerationOption !== undefined\n      ? legacyGpuAccelerationOption\n      : options.gpuAcceleration;\n\n  const offsetParent = getOffsetParent(data.instance.popper);\n  const offsetParentRect = getBoundingClientRect(offsetParent);\n\n  // Styles\n  const styles = {\n    position: popper.position,\n  };\n\n  const offsets = getRoundedOffsets(\n    data,\n    window.devicePixelRatio < 2 || !isFirefox\n  );\n\n  const sideA = x === 'bottom' ? 'top' : 'bottom';\n  const sideB = y === 'right' ? 'left' : 'right';\n\n  // if gpuAcceleration is set to `true` and transform is supported,\n  //  we use `translate3d` to apply the position to the popper we\n  // automatically use the supported prefixed version if needed\n  const prefixedProperty = getSupportedPropertyName('transform');\n\n  // now, let's make a step back and look at this code closely (wtf?)\n  // If the content of the popper grows once it's been positioned, it\n  // may happen that the popper gets misplaced because of the new content\n  // overflowing its reference element\n  // To avoid this problem, we provide two options (x and y), which allow\n  // the consumer to define the offset origin.\n  // If we position a popper on top of a reference element, we can set\n  // `x` to `top` to make the popper grow towards its top instead of\n  // its bottom.\n  let left, top;\n  if (sideA === 'bottom') {\n    // when offsetParent is <html> the positioning is relative to the bottom of the screen (excluding the scrollbar)\n    // and not the bottom of the html element\n    if (offsetParent.nodeName === 'HTML') {\n      top = -offsetParent.clientHeight + offsets.bottom;\n    } else {\n      top = -offsetParentRect.height + offsets.bottom;\n    }\n  } else {\n    top = offsets.top;\n  }\n  if (sideB === 'right') {\n    if (offsetParent.nodeName === 'HTML') {\n      left = -offsetParent.clientWidth + offsets.right;\n    } else {\n      left = -offsetParentRect.width + offsets.right;\n    }\n  } else {\n    left = offsets.left;\n  }\n  if (gpuAcceleration && prefixedProperty) {\n    styles[prefixedProperty] = `translate3d(${left}px, ${top}px, 0)`;\n    styles[sideA] = 0;\n    styles[sideB] = 0;\n    styles.willChange = 'transform';\n  } else {\n    // othwerise, we use the standard `top`, `left`, `bottom` and `right` properties\n    const invertTop = sideA === 'bottom' ? -1 : 1;\n    const invertLeft = sideB === 'right' ? -1 : 1;\n    styles[sideA] = top * invertTop;\n    styles[sideB] = left * invertLeft;\n    styles.willChange = `${sideA}, ${sideB}`;\n  }\n\n  // Attributes\n  const attributes = {\n    'x-placement': data.placement,\n  };\n\n  // Update `data` attributes, styles and arrowStyles\n  data.attributes = { ...attributes, ...data.attributes };\n  data.styles = { ...styles, ...data.styles };\n  data.arrowStyles = { ...data.offsets.arrow, ...data.arrowStyles };\n\n  return data;\n}\n","/**\n * @function\n * @memberof Popper.Utils\n * @argument {Object} data - The data object generated by `update` method\n * @argument {Boolean} shouldRound - If the offsets should be rounded at all\n * @returns {Object} The popper's position offsets rounded\n *\n * The tale of pixel-perfect positioning. It's still not 100% perfect, but as\n * good as it can be within reason.\n * Discussion here: https://github.com/FezVrasta/popper.js/pull/715\n *\n * Low DPI screens cause a popper to be blurry if not using full pixels (Safari\n * as well on High DPI screens).\n *\n * Firefox prefers no rounding for positioning and does not have blurriness on\n * high DPI screens.\n *\n * Only horizontal placement and left/right values need to be considered.\n */\nexport default function getRoundedOffsets(data, shouldRound) {\n  const { popper, reference } = data.offsets;\n\n  const isVertical = ['left', 'right'].indexOf(data.placement) !== -1;\n  const isVariation = data.placement.indexOf('-') !== -1;\n  const sameWidthOddness = reference.width % 2 === popper.width % 2;\n  const bothOddWidth = reference.width % 2 === 1 && popper.width % 2 === 1;\n  const noRound = v => v;\n\n  const horizontalToInteger = !shouldRound\n    ? noRound\n    : isVertical || isVariation || sameWidthOddness\n    ? Math.round\n    : Math.floor;\n  const verticalToInteger = !shouldRound ? noRound : Math.round;\n\n  return {\n    left: horizontalToInteger(\n      bothOddWidth && !isVariation && shouldRound\n        ? popper.left - 1\n        : popper.left\n    ),\n    top: verticalToInteger(popper.top),\n    bottom: verticalToInteger(popper.bottom),\n    right: horizontalToInteger(popper.right),\n  };\n}\n","/**\n * Set the attributes to the given popper\n * @method\n * @memberof Popper.Utils\n * @argument {Element} element - Element to apply the attributes to\n * @argument {Object} styles\n * Object with a list of properties and values which will be applied to the element\n */\nexport default function setAttributes(element, attributes) {\n  Object.keys(attributes).forEach(function(prop) {\n    const value = attributes[prop];\n    if (value !== false) {\n      element.setAttribute(prop, attributes[prop]);\n    } else {\n      element.removeAttribute(prop);\n    }\n  });\n}\n","import setStyles from '../utils/setStyles';\nimport setAttributes from '../utils/setAttributes';\nimport getReferenceOffsets from '../utils/getReferenceOffsets';\nimport computeAutoPlacement from '../utils/computeAutoPlacement';\n\n/**\n * @function\n * @memberof Modifiers\n * @argument {Object} data - The data object generated by `update` method\n * @argument {Object} data.styles - List of style properties - values to apply to popper element\n * @argument {Object} data.attributes - List of attribute properties - values to apply to popper element\n * @argument {Object} options - Modifiers configuration and options\n * @returns {Object} The same data object\n */\nexport default function applyStyle(data) {\n  // any property present in `data.styles` will be applied to the popper,\n  // in this way we can make the 3rd party modifiers add custom styles to it\n  // Be aware, modifiers could override the properties defined in the previous\n  // lines of this modifier!\n  setStyles(data.instance.popper, data.styles);\n\n  // any property present in `data.attributes` will be applied to the popper,\n  // they will be set as HTML attributes of the element\n  setAttributes(data.instance.popper, data.attributes);\n\n  // if arrowElement is defined and arrowStyles has some properties\n  if (data.arrowElement && Object.keys(data.arrowStyles).length) {\n    setStyles(data.arrowElement, data.arrowStyles);\n  }\n\n  return data;\n}\n\n/**\n * Set the x-placement attribute before everything else because it could be used\n * to add margins to the popper margins needs to be calculated to get the\n * correct popper offsets.\n * @method\n * @memberof Popper.modifiers\n * @param {HTMLElement} reference - The reference element used to position the popper\n * @param {HTMLElement} popper - The HTML element used as popper\n * @param {Object} options - Popper.js options\n */\nexport function applyStyleOnLoad(\n  reference,\n  popper,\n  options,\n  modifierOptions,\n  state\n) {\n  // compute reference element offsets\n  const referenceOffsets = getReferenceOffsets(state, popper, reference, options.positionFixed);\n\n  // compute auto placement, store placement inside the data object,\n  // modifiers will be able to edit `placement` if needed\n  // and refer to originalPlacement to know the original value\n  const placement = computeAutoPlacement(\n    options.placement,\n    referenceOffsets,\n    popper,\n    reference,\n    options.modifiers.flip.boundariesElement,\n    options.modifiers.flip.padding\n  );\n\n  popper.setAttribute('x-placement', placement);\n\n  // Apply `position` to popper before anything else because\n  // without the position applied we can't guarantee correct computations\n  setStyles(popper, { position: options.positionFixed ? 'fixed' : 'absolute' });\n\n  return options;\n}\n","// Utils\nimport debounce from './utils/debounce';\nimport isFunction from './utils/isFunction';\n\n// Methods\nimport update from './methods/update';\nimport destroy from './methods/destroy';\nimport enableEventListeners from './methods/enableEventListeners';\nimport disableEventListeners from './methods/disableEventListeners';\nimport Defaults from './methods/defaults';\nimport placements from './methods/placements';\n\nexport default class Popper {\n  /**\n   * Creates a new Popper.js instance.\n   * @class Popper\n   * @param {HTMLElement|referenceObject} reference - The reference element used to position the popper\n   * @param {HTMLElement} popper - The HTML element used as the popper\n   * @param {Object} options - Your custom options to override the ones defined in [Defaults](#defaults)\n   * @return {Object} instance - The generated Popper.js instance\n   */\n  constructor(reference, popper, options = {}) {\n    // make update() debounced, so that it only runs at most once-per-tick\n    this.update = debounce(this.update.bind(this));\n\n    // with {} we create a new object with the options inside it\n    this.options = { ...Popper.Defaults, ...options };\n\n    // init state\n    this.state = {\n      isDestroyed: false,\n      isCreated: false,\n      scrollParents: [],\n    };\n\n    // get reference and popper elements (allow jQuery wrappers)\n    this.reference = reference && reference.jquery ? reference[0] : reference;\n    this.popper = popper && popper.jquery ? popper[0] : popper;\n\n    // Deep merge modifiers options\n    this.options.modifiers = {};\n    Object.keys({\n      ...Popper.Defaults.modifiers,\n      ...options.modifiers,\n    }).forEach(name => {\n      this.options.modifiers[name] = {\n        // If it's a built-in modifier, use it as base\n        ...(Popper.Defaults.modifiers[name] || {}),\n        // If there are custom options, override and merge with default ones\n        ...(options.modifiers ? options.modifiers[name] : {}),\n      };\n    });\n\n    // Refactoring modifiers' list (Object => Array)\n    this.modifiers = Object.keys(this.options.modifiers)\n      .map(name => ({\n        name,\n        ...this.options.modifiers[name],\n      }))\n      // sort the modifiers by order\n      .sort((a, b) => a.order - b.order);\n\n    // modifiers have the ability to execute arbitrary code when Popper.js get inited\n    // such code is executed in the same order of its modifier\n    // they could add new properties to their options configuration\n    // BE AWARE: don't add options to `options.modifiers.name` but to `modifierOptions`!\n    this.modifiers.forEach(modifierOptions => {\n      if (modifierOptions.enabled && isFunction(modifierOptions.onLoad)) {\n        modifierOptions.onLoad(\n          this.reference,\n          this.popper,\n          this.options,\n          modifierOptions,\n          this.state\n        );\n      }\n    });\n\n    // fire the first update to position the popper in the right place\n    this.update();\n\n    const eventsEnabled = this.options.eventsEnabled;\n    if (eventsEnabled) {\n      // setup event listeners, they will take care of update the position in specific situations\n      this.enableEventListeners();\n    }\n\n    this.state.eventsEnabled = eventsEnabled;\n  }\n\n  // We can't use class properties because they don't get listed in the\n  // class prototype and break stuff like Sinon stubs\n  update() {\n    return update.call(this);\n  }\n  destroy() {\n    return destroy.call(this);\n  }\n  enableEventListeners() {\n    return enableEventListeners.call(this);\n  }\n  disableEventListeners() {\n    return disableEventListeners.call(this);\n  }\n\n  /**\n   * Schedules an update. It will run on the next UI update available.\n   * @method scheduleUpdate\n   * @memberof Popper\n   */\n  scheduleUpdate = () => requestAnimationFrame(this.update);\n\n  /**\n   * Collection of utilities useful when writing custom modifiers.\n   * Starting from version 1.7, this method is available only if you\n   * include `popper-utils.js` before `popper.js`.\n   *\n   * **DEPRECATION**: This way to access PopperUtils is deprecated\n   * and will be removed in v2! Use the PopperUtils module directly instead.\n   * Due to the high instability of the methods contained in Utils, we can't\n   * guarantee them to follow semver. Use them at your own risk!\n   * @static\n   * @private\n   * @type {Object}\n   * @deprecated since version 1.8\n   * @member Utils\n   * @memberof Popper\n   */\n  static Utils = (typeof window !== 'undefined' ? window : global).PopperUtils;\n\n  static placements = placements;\n\n  static Defaults = Defaults;\n}\n\n/**\n * The `referenceObject` is an object that provides an interface compatible with Popper.js\n * and lets you use it as replacement of a real DOM node.<br />\n * You can use this method to position a popper relatively to a set of coordinates\n * in case you don't have a DOM node to use as reference.\n *\n * ```\n * new Popper(referenceObject, popperNode);\n * ```\n *\n * NB: This feature isn't supported in Internet Explorer 10.\n * @name referenceObject\n * @property {Function} data.getBoundingClientRect\n * A function that returns a set of coordinates compatible with the native `getBoundingClientRect` method.\n * @property {number} data.clientWidth\n * An ES6 getter that will return the width of the virtual reference element.\n * @property {number} data.clientHeight\n * An ES6 getter that will return the height of the virtual reference element.\n */\n","import _extends from \"@babel/runtime/helpers/extends\";\nimport _inheritsLoose from \"@babel/runtime/helpers/inheritsLoose\";\nimport _assertThisInitialized from \"@babel/runtime/helpers/assertThisInitialized\";\nimport _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nimport * as React from \"react\";\nimport createContext from \"create-react-context\";\nexport var ManagerContext = createContext({\n  getReferenceRef: undefined,\n  referenceNode: undefined\n});\n\nvar Manager =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inheritsLoose(Manager, _React$Component);\n\n  function Manager() {\n    var _this;\n\n    _this = _React$Component.call(this) || this;\n\n    _defineProperty(_assertThisInitialized(_assertThisInitialized(_this)), \"getReferenceRef\", function (referenceNode) {\n      return _this.setState(function (_ref) {\n        var context = _ref.context;\n        return {\n          context: _extends({}, context, {\n            referenceNode: referenceNode\n          })\n        };\n      });\n    });\n\n    _this.state = {\n      context: {\n        getReferenceRef: _this.getReferenceRef,\n        referenceNode: undefined\n      }\n    };\n    return _this;\n  }\n\n  var _proto = Manager.prototype;\n\n  _proto.render = function render() {\n    return React.createElement(ManagerContext.Provider, {\n      value: this.state.context\n    }, this.props.children);\n  };\n\n  return Manager;\n}(React.Component);\n\nexport { Manager as default };","/**\n * Takes an argument and if it's an array, returns the first item in the array,\n * otherwise returns the argument. Used for Preact compatibility.\n */\nexport var unwrapArray = function unwrapArray(arg) {\n  return Array.isArray(arg) ? arg[0] : arg;\n};\n/**\n * Takes a maybe-undefined function and arbitrary args and invokes the function\n * only if it is defined.\n */\n\nexport var safeInvoke = function safeInvoke(fn) {\n  if (typeof fn === \"function\") {\n    for (var _len = arguments.length, args = new Array(_len > 1 ? _len - 1 : 0), _key = 1; _key < _len; _key++) {\n      args[_key - 1] = arguments[_key];\n    }\n\n    return fn.apply(void 0, args);\n  }\n};","import _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/objectWithoutPropertiesLoose\";\nimport _extends from \"@babel/runtime/helpers/extends\";\nimport _inheritsLoose from \"@babel/runtime/helpers/inheritsLoose\";\nimport _assertThisInitialized from \"@babel/runtime/helpers/assertThisInitialized\";\nimport _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nimport * as React from 'react';\nimport PopperJS from 'popper.js';\nimport { ManagerContext } from './Manager';\nimport { safeInvoke, unwrapArray } from './utils';\nvar initialStyle = {\n  position: 'absolute',\n  top: 0,\n  left: 0,\n  opacity: 0,\n  pointerEvents: 'none'\n};\nvar initialArrowStyle = {};\nexport var InnerPopper =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inheritsLoose(InnerPopper, _React$Component);\n\n  function InnerPopper() {\n    var _this;\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _React$Component.call.apply(_React$Component, [this].concat(args)) || this;\n\n    _defineProperty(_assertThisInitialized(_assertThisInitialized(_this)), \"state\", {\n      data: undefined,\n      placement: undefined\n    });\n\n    _defineProperty(_assertThisInitialized(_assertThisInitialized(_this)), \"popperInstance\", void 0);\n\n    _defineProperty(_assertThisInitialized(_assertThisInitialized(_this)), \"popperNode\", null);\n\n    _defineProperty(_assertThisInitialized(_assertThisInitialized(_this)), \"arrowNode\", null);\n\n    _defineProperty(_assertThisInitialized(_assertThisInitialized(_this)), \"setPopperNode\", function (popperNode) {\n      if (!popperNode || _this.popperNode === popperNode) return;\n      safeInvoke(_this.props.innerRef, popperNode);\n      _this.popperNode = popperNode;\n\n      _this.updatePopperInstance();\n    });\n\n    _defineProperty(_assertThisInitialized(_assertThisInitialized(_this)), \"setArrowNode\", function (arrowNode) {\n      _this.arrowNode = arrowNode;\n    });\n\n    _defineProperty(_assertThisInitialized(_assertThisInitialized(_this)), \"updateStateModifier\", {\n      enabled: true,\n      order: 900,\n      fn: function fn(data) {\n        var placement = data.placement;\n\n        _this.setState({\n          data: data,\n          placement: placement\n        });\n\n        return data;\n      }\n    });\n\n    _defineProperty(_assertThisInitialized(_assertThisInitialized(_this)), \"getOptions\", function () {\n      return {\n        placement: _this.props.placement,\n        eventsEnabled: _this.props.eventsEnabled,\n        positionFixed: _this.props.positionFixed,\n        modifiers: _extends({}, _this.props.modifiers, {\n          arrow: _extends({}, _this.props.modifiers && _this.props.modifiers.arrow, {\n            enabled: !!_this.arrowNode,\n            element: _this.arrowNode\n          }),\n          applyStyle: {\n            enabled: false\n          },\n          updateStateModifier: _this.updateStateModifier\n        })\n      };\n    });\n\n    _defineProperty(_assertThisInitialized(_assertThisInitialized(_this)), \"getPopperStyle\", function () {\n      return !_this.popperNode || !_this.state.data ? initialStyle : _extends({\n        position: _this.state.data.offsets.popper.position\n      }, _this.state.data.styles);\n    });\n\n    _defineProperty(_assertThisInitialized(_assertThisInitialized(_this)), \"getPopperPlacement\", function () {\n      return !_this.state.data ? undefined : _this.state.placement;\n    });\n\n    _defineProperty(_assertThisInitialized(_assertThisInitialized(_this)), \"getArrowStyle\", function () {\n      return !_this.arrowNode || !_this.state.data ? initialArrowStyle : _this.state.data.arrowStyles;\n    });\n\n    _defineProperty(_assertThisInitialized(_assertThisInitialized(_this)), \"getOutOfBoundariesState\", function () {\n      return _this.state.data ? _this.state.data.hide : undefined;\n    });\n\n    _defineProperty(_assertThisInitialized(_assertThisInitialized(_this)), \"destroyPopperInstance\", function () {\n      if (!_this.popperInstance) return;\n\n      _this.popperInstance.destroy();\n\n      _this.popperInstance = null;\n    });\n\n    _defineProperty(_assertThisInitialized(_assertThisInitialized(_this)), \"updatePopperInstance\", function () {\n      _this.destroyPopperInstance();\n\n      var _assertThisInitialize = _assertThisInitialized(_assertThisInitialized(_this)),\n          popperNode = _assertThisInitialize.popperNode;\n\n      var referenceElement = _this.props.referenceElement;\n      if (!referenceElement || !popperNode) return;\n      _this.popperInstance = new PopperJS(referenceElement, popperNode, _this.getOptions());\n    });\n\n    _defineProperty(_assertThisInitialized(_assertThisInitialized(_this)), \"scheduleUpdate\", function () {\n      if (_this.popperInstance) {\n        _this.popperInstance.scheduleUpdate();\n      }\n    });\n\n    return _this;\n  }\n\n  var _proto = InnerPopper.prototype;\n\n  _proto.componentDidUpdate = function componentDidUpdate(prevProps, prevState) {\n    // If the Popper.js options have changed, update the instance (destroy + create)\n    if (this.props.placement !== prevProps.placement || this.props.referenceElement !== prevProps.referenceElement || this.props.positionFixed !== prevProps.positionFixed) {\n      this.updatePopperInstance();\n    } else if (this.props.eventsEnabled !== prevProps.eventsEnabled && this.popperInstance) {\n      this.props.eventsEnabled ? this.popperInstance.enableEventListeners() : this.popperInstance.disableEventListeners();\n    } // A placement difference in state means popper determined a new placement\n    // apart from the props value. By the time the popper element is rendered with\n    // the new position Popper has already measured it, if the place change triggers\n    // a size change it will result in a misaligned popper. So we schedule an update to be sure.\n\n\n    if (prevState.placement !== this.state.placement) {\n      this.scheduleUpdate();\n    }\n  };\n\n  _proto.componentWillUnmount = function componentWillUnmount() {\n    safeInvoke(this.props.innerRef, null);\n    this.destroyPopperInstance();\n  };\n\n  _proto.render = function render() {\n    return unwrapArray(this.props.children)({\n      ref: this.setPopperNode,\n      style: this.getPopperStyle(),\n      placement: this.getPopperPlacement(),\n      outOfBoundaries: this.getOutOfBoundariesState(),\n      scheduleUpdate: this.scheduleUpdate,\n      arrowProps: {\n        ref: this.setArrowNode,\n        style: this.getArrowStyle()\n      }\n    });\n  };\n\n  return InnerPopper;\n}(React.Component);\n\n_defineProperty(InnerPopper, \"defaultProps\", {\n  placement: 'bottom',\n  eventsEnabled: true,\n  referenceElement: undefined,\n  positionFixed: false\n});\n\nvar placements = PopperJS.placements;\nexport { placements };\nexport default function Popper(_ref) {\n  var referenceElement = _ref.referenceElement,\n      props = _objectWithoutPropertiesLoose(_ref, [\"referenceElement\"]);\n\n  return React.createElement(ManagerContext.Consumer, null, function (_ref2) {\n    var referenceNode = _ref2.referenceNode;\n    return React.createElement(InnerPopper, _extends({\n      referenceElement: referenceElement !== undefined ? referenceElement : referenceNode\n    }, props));\n  });\n}","import _extends from \"@babel/runtime/helpers/extends\";\nimport _inheritsLoose from \"@babel/runtime/helpers/inheritsLoose\";\nimport _assertThisInitialized from \"@babel/runtime/helpers/assertThisInitialized\";\nimport _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nimport * as React from 'react';\nimport warning from 'warning';\nimport { ManagerContext } from './Manager';\nimport { safeInvoke, unwrapArray } from './utils';\n\nvar InnerReference =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inheritsLoose(InnerReference, _React$Component);\n\n  function InnerReference() {\n    var _this;\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _React$Component.call.apply(_React$Component, [this].concat(args)) || this;\n\n    _defineProperty(_assertThisInitialized(_assertThisInitialized(_this)), \"refHandler\", function (node) {\n      safeInvoke(_this.props.innerRef, node);\n      safeInvoke(_this.props.getReferenceRef, node);\n    });\n\n    return _this;\n  }\n\n  var _proto = InnerReference.prototype;\n\n  _proto.render = function render() {\n    warning(this.props.getReferenceRef, '`Reference` should not be used outside of a `Manager` component.');\n    return unwrapArray(this.props.children)({\n      ref: this.refHandler\n    });\n  };\n\n  return InnerReference;\n}(React.Component);\n\nexport default function Reference(props) {\n  return React.createElement(ManagerContext.Consumer, null, function (_ref) {\n    var getReferenceRef = _ref.getReferenceRef;\n    return React.createElement(InnerReference, _extends({\n      getReferenceRef: getReferenceRef\n    }, props));\n  });\n}","import React, { PureComponent } from 'react';\nimport classNames from 'classnames';\nimport BodyPortal from './Portal';\nimport { Manager, Popper as ReactPopper, Reference } from 'react-popper';\nimport Transition from 'react-transition-group/Transition';\n\nconst defaultTransitionStyles = {\n  transition: 'opacity 200ms linear',\n  opacity: 0,\n};\n\nconst transitionStyles = {\n  exited: { opacity: 0 },\n  entering: { opacity: 0 },\n  entered: { opacity: 1 },\n  exiting: { opacity: 0 },\n};\n\ninterface Props {\n  renderContent: (content: any) => any;\n  show: boolean;\n  placement?: any;\n  content: string | ((props: any) => JSX.Element);\n  refClassName?: string;\n  popperClassName?: string;\n}\n\nclass Popper extends PureComponent<Props> {\n  render() {\n    const { children, renderContent, show, placement, refClassName } = this.props;\n    const { content } = this.props;\n    const popperClassName = classNames('popper', this.props.popperClassName);\n\n    return (\n      <Manager>\n        <Reference>\n          {({ ref }) => (\n            <div className={`popper_ref ${refClassName || ''}`} ref={ref}>\n              {children}\n            </div>\n          )}\n        </Reference>\n        <Transition in={show} timeout={100} mountOnEnter={true} unmountOnExit={true}>\n          {transitionState => (\n            <BodyPortal>\n              <ReactPopper placement={placement}>\n                {({ ref, style, placement, arrowProps }) => {\n                  return (\n                    <div\n                      ref={ref}\n                      style={{\n                        ...style,\n                        ...defaultTransitionStyles,\n                        ...transitionStyles[transitionState],\n                      }}\n                      data-placement={placement}\n                      className={popperClassName}\n                    >\n                      <div className=\"popper__background\">\n                        {renderContent(content)}\n                        <div ref={arrowProps.ref} data-placement={placement} className=\"popper__arrow\" />\n                      </div>\n                    </div>\n                  );\n                }}\n              </ReactPopper>\n            </BodyPortal>\n          )}\n        </Transition>\n      </Manager>\n    );\n  }\n}\n\nexport default Popper;\n","import React from 'react';\n\nexport interface UsingPopperProps {\n  showPopper: (prevState: object) => void;\n  hidePopper: (prevState: object) => void;\n  renderContent: (content: any) => any;\n  show: boolean;\n  placement?: string;\n  content: string | ((props: any) => JSX.Element);\n  className?: string;\n  refClassName?: string;\n  popperClassName?: string;\n}\n\ninterface Props {\n  placement?: string;\n  className?: string;\n  refClassName?: string;\n  popperClassName?: string;\n  content: string | ((props: any) => JSX.Element);\n}\n\ninterface State {\n  placement: string;\n  show: boolean;\n}\n\nexport default function withPopper(WrappedComponent) {\n  return class extends React.Component<Props, State> {\n    constructor(props) {\n      super(props);\n      this.setState = this.setState.bind(this);\n      this.state = {\n        placement: this.props.placement || 'auto',\n        show: false,\n      };\n    }\n\n    componentWillReceiveProps(nextProps) {\n      if (nextProps.placement && nextProps.placement !== this.state.placement) {\n        this.setState(prevState => {\n          return {\n            ...prevState,\n            placement: nextProps.placement,\n          };\n        });\n      }\n    }\n\n    showPopper = () => {\n      this.setState(prevState => ({\n        ...prevState,\n        show: true,\n      }));\n    };\n\n    hidePopper = () => {\n      this.setState(prevState => ({\n        ...prevState,\n        show: false,\n      }));\n    };\n\n    renderContent(content) {\n      if (typeof content === 'function') {\n        // If it's a function we assume it's a React component\n        const ReactComponent = content;\n        return <ReactComponent />;\n      }\n      return content;\n    }\n\n    render() {\n      const { show, placement } = this.state;\n      const className = this.props.className || '';\n\n      return (\n        <WrappedComponent\n          {...this.props}\n          showPopper={this.showPopper}\n          hidePopper={this.hidePopper}\n          renderContent={this.renderContent}\n          show={show}\n          placement={placement}\n          className={className}\n        />\n      );\n    }\n  };\n}\n","import React, { PureComponent } from 'react';\nimport Popper from './Popper';\nimport withPopper, { UsingPopperProps } from './withPopper';\n\nclass Tooltip extends PureComponent<UsingPopperProps> {\n  render() {\n    const { children, hidePopper, showPopper, className, ...restProps } = this.props;\n\n    return (\n      <div className={`popper__manager ${className}`} onMouseEnter={showPopper} onMouseLeave={hidePopper}>\n        <Popper {...restProps}>{children}</Popper>\n      </div>\n    );\n  }\n}\n\nexport default withPopper(Tooltip);\n","import React, { PureComponent } from 'react';\nimport { ZBXTag } from '../types';\nimport Tooltip from './Tooltip/Tooltip';\n\nconst TAG_COLORS = [\n  '#E24D42',\n  '#1F78C1',\n  '#BA43A9',\n  '#705DA0',\n  '#466803',\n  '#508642',\n  '#447EBC',\n  '#C15C17',\n  '#890F02',\n  '#757575',\n  '#0A437C',\n  '#6D1F62',\n  '#584477',\n  '#629E51',\n  '#2F4F4F',\n  '#BF1B00',\n  '#806EB7',\n  '#8a2eb8',\n  '#699e00',\n  '#000000',\n  '#3F6833',\n  '#2F575E',\n  '#99440A',\n  '#E0752D',\n  '#0E4AB4',\n  '#58140C',\n  '#052B51',\n  '#511749',\n  '#3F2B5B',\n];\n\nconst TAG_BORDER_COLORS = [\n  '#FF7368',\n  '#459EE7',\n  '#E069CF',\n  '#9683C6',\n  '#6C8E29',\n  '#76AC68',\n  '#6AA4E2',\n  '#E7823D',\n  '#AF3528',\n  '#9B9B9B',\n  '#3069A2',\n  '#934588',\n  '#7E6A9D',\n  '#88C477',\n  '#557575',\n  '#E54126',\n  '#A694DD',\n  '#B054DE',\n  '#8FC426',\n  '#262626',\n  '#658E59',\n  '#557D84',\n  '#BF6A30',\n  '#FF9B53',\n  '#3470DA',\n  '#7E3A32',\n  '#2B5177',\n  '#773D6F',\n  '#655181',\n];\n\n/**\n * Returns tag badge background and border colors based on hashed tag name.\n * @param name tag name\n */\nexport function getTagColorsFromName(name: string): { color: string; borderColor: string } {\n  const hash = djb2(name.toLowerCase());\n  const color = TAG_COLORS[Math.abs(hash % TAG_COLORS.length)];\n  const borderColor = TAG_BORDER_COLORS[Math.abs(hash % TAG_BORDER_COLORS.length)];\n  return { color, borderColor };\n}\n\nfunction djb2(str) {\n  let hash = 5381;\n  for (let i = 0; i < str.length; i++) {\n    hash = (hash << 5) + hash + str.charCodeAt(i); /* hash * 33 + c */\n  }\n  return hash;\n}\n\ninterface EventTagProps {\n  tag: ZBXTag;\n  highlight?: boolean;\n  onClick?: (tag: ZBXTag, ctrlKey?: boolean, shiftKey?: boolean) => void;\n}\n\nexport default class EventTag extends PureComponent<EventTagProps> {\n  handleClick = (event) => {\n    if (this.props.onClick) {\n      this.props.onClick(this.props.tag, event.ctrlKey, event.shiftKey);\n    }\n  }\n\n  render() {\n    const { tag, highlight } = this.props;\n    const tagColor = getTagColorsFromName(tag.tag);\n    const style: React.CSSProperties = {\n      background: tagColor.color,\n      borderColor: tagColor.borderColor,\n    };\n    return (\n      <Tooltip placement=\"bottom\" content=\"Click to add tag filter or Ctrl/Shift+click to remove\">\n        <span className={`label label-tag zbx-tag ${highlight ? 'highlighted' : ''}`}\n          style={style}\n          onClick={this.handleClick}>\n          {tag.value ?\n            `${tag.tag}: ${tag.value}` :\n            `${tag.tag}`\n          }\n        </span>\n      </Tooltip>\n    );\n  }\n}\n","import React, { PureComponent } from 'react';\nimport ReactDOM from 'react-dom';\nimport classNames from 'classnames';\n\nconst KEYBOARD_ENTER_KEY = 13;\nconst KEYBOARD_ESCAPE_KEY = 27;\n\ninterface ModalProps {\n  isOpen?: boolean;\n  withBackdrop?: boolean;\n  onSubmit: (data?: AckProblemData) => Promise<any> | any;\n  onClose?: () => void;\n}\n\ninterface ModalState {\n  value: string;\n  error: boolean;\n  message: string;\n}\n\nexport interface AckProblemData {\n  message: string;\n  closeProblem?: boolean;\n  action?: number;\n}\n\nexport class Modal extends PureComponent<ModalProps, ModalState> {\n  modalContainer: HTMLElement;\n\n  constructor(props) {\n    super(props);\n    this.state = {\n      value: '',\n      error: false,\n      message: '',\n    };\n\n    this.modalContainer = document.body;\n  }\n\n  handleChange = (event: React.ChangeEvent<HTMLInputElement>) => {\n    this.setState({ value: event.target.value, error: false });\n  }\n\n  handleKeyUp = (event: React.KeyboardEvent<HTMLInputElement>) => {\n    if (event.which === KEYBOARD_ENTER_KEY || event.key === 'Enter') {\n      this.submit();\n    } else if (event.which === KEYBOARD_ESCAPE_KEY || event.key === 'Escape') {\n      this.dismiss();\n    }\n  }\n\n  handleBackdropClick = () => {\n    this.dismiss();\n  }\n\n  dismiss = () => {\n    this.setState({ value: '', error: false, message: '' });\n    this.props.onClose();\n  }\n\n  submit = () => {\n    if (!this.state.value) {\n      return this.setState({\n        error: true,\n        message: 'Enter message text'\n      });\n    }\n    this.props.onSubmit({\n      message: this.state.value\n    }).then(() => {\n      this.dismiss();\n    });\n  }\n\n  render() {\n    if (!this.props.isOpen || !this.modalContainer) {\n      return null;\n    }\n\n    const inputClass = classNames('gf-form-input', { 'zbx-ack-error': this.state.error });\n\n    const modalNode = (\n      <div className=\"modal modal--narrow zbx-ack-modal\" key=\"modal\">\n        <div className=\"modal-body\">\n          <div className=\"modal-header\">\n            <h2 className=\"modal-header-title\">\n              <i className=\"fa fa-reply-all\"></i>\n              <span className=\"p-l-1\">Acknowledge Problem</span>\n            </h2>\n\n            <a className=\"modal-header-close\" onClick={this.dismiss}>\n              <i className=\"fa fa-remove\"></i>\n            </a>\n          </div>\n          <div className=\"modal-content\">\n            <div className=\"gf-form\">\n              <label className=\"gf-form-hint\">\n                <input className={inputClass}\n                  type=\"text\"\n                  name=\"message\"\n                  placeholder=\"Message\"\n                  maxLength={64}\n                  autoComplete=\"off\"\n                  autoFocus={true}\n                  value={this.state.value}\n                  onChange={this.handleChange}\n                  onKeyUp={this.handleKeyUp}>\n                </input>\n                <small className=\"gf-form-hint-text muted\">Press Enter to submit</small>\n                {this.state.error &&\n                  <small className=\"gf-form-hint-text muted ack-error-message\">{this.state.message}</small>\n                }\n              </label>\n            </div>\n\n            <div className=\"gf-form-button-row text-center\">\n              <button className=\"btn btn-success\" onClick={this.submit}>Acknowledge</button>\n              <button className=\"btn btn-inverse\" onClick={this.dismiss}>Cancel</button>\n            </div>\n          </div>\n        </div>\n      </div>\n    );\n\n    const modalNodeWithBackdrop = [\n      modalNode,\n      <div className=\"modal-backdrop in\" key=\"modal-backdrop\" onClick={this.handleBackdropClick}></div>\n    ];\n\n    const modal = this.props.withBackdrop ? modalNodeWithBackdrop : modalNode;\n    return ReactDOM.createPortal(modal, this.modalContainer);\n  }\n}\n","import React from 'react';\n\ninterface FAIconProps {\n  icon: string;\n  customClass?: string;\n}\n\nexport default function FAIcon(props: FAIconProps) {\n  return (\n    <span className={`fa-icon-container ${props.customClass || ''}`}>\n      <i className={`fa fa-${props.icon}`}></i>\n    </span>\n  );\n}\n","import React from 'react';\nimport FAIcon from '../FAIcon';\nimport Tooltip from '../Tooltip/Tooltip';\nimport { ZBXTrigger, ZBXAlert } from '../../types';\n\nexport interface ProblemStatusBarProps {\n  problem: ZBXTrigger;\n  alerts?: ZBXAlert[];\n  className?: string;\n}\n\nexport default function ProblemStatusBar(props: ProblemStatusBarProps) {\n  const { problem, alerts, className } = props;\n  const multiEvent = problem.type === '1';\n  const link = problem.url && problem.url !== '';\n  const maintenance = problem.maintenance;\n  const manualClose = problem.manual_close === '1';\n  const error = problem.error && problem.error !== '';\n  const stateUnknown = problem.state === '1';\n  const closeByTag = problem.correlation_mode === '1';\n  const actions = alerts && alerts.length !== 0;\n  const actionMessage = actions ? alerts[0].message : '';\n\n  return (\n    <div className={`problem-statusbar ${className || ''}`}>\n      <ProblemStatusBarItem icon=\"wrench\" fired={maintenance} tooltip=\"Host maintenance\" />\n      <ProblemStatusBarItem icon=\"globe\" fired={link} link={link && problem.url} tooltip=\"External link\" />\n      <ProblemStatusBarItem icon=\"bullhorn\" fired={multiEvent} tooltip=\"Trigger generates multiple problem events\" />\n      <ProblemStatusBarItem icon=\"tag\" fired={closeByTag} tooltip={`OK event closes problems matched to tag: ${problem.correlation_tag}`} />\n      <ProblemStatusBarItem icon=\"circle-o-notch\" fired={actions} tooltip={actionMessage} />\n      <ProblemStatusBarItem icon=\"question-circle\" fired={stateUnknown} tooltip=\"Current trigger state is unknown\" />\n      <ProblemStatusBarItem icon=\"warning\" fired={error} tooltip={problem.error} />\n      <ProblemStatusBarItem icon=\"window-close-o\" fired={manualClose} tooltip=\"Manual close problem\" />\n    </div>\n  );\n}\n\ninterface ProblemStatusBarItemProps {\n  icon: string;\n  fired?: boolean;\n  link?: string;\n  tooltip?: string;\n}\n\nfunction ProblemStatusBarItem(props: ProblemStatusBarItemProps) {\n  const { fired, icon, link, tooltip } = props;\n  let item = (\n    <div className={`problem-statusbar-item ${fired ? 'fired' : 'muted'}`}>\n      <FAIcon icon={icon} />\n    </div>\n  );\n  if (tooltip && fired) {\n    item = (\n      <Tooltip placement=\"bottom\" content={tooltip}>\n        {item}\n      </Tooltip>\n    );\n  }\n  return link ? <a href={link} target=\"_blank\">{item}</a> : item;\n}\n","import React from 'react';\nimport { ZBXAcknowledge } from '../../types';\n\ninterface AcknowledgesListProps {\n  acknowledges: ZBXAcknowledge[];\n}\n\nexport default function AcknowledgesList(props: AcknowledgesListProps) {\n  const { acknowledges } = props;\n  return (\n    <div className=\"problem-ack-list\">\n      <div className=\"problem-ack-col problem-ack-time\">\n        {acknowledges.map(ack => <span key={ack.acknowledgeid} className=\"problem-ack-time\">{ack.time}</span>)}\n      </div>\n      <div className=\"problem-ack-col problem-ack-user\">\n        {acknowledges.map(ack => <span key={ack.acknowledgeid} className=\"problem-ack-user\">{ack.user}</span>)}\n      </div>\n      <div className=\"problem-ack-col problem-ack-message\">\n        {acknowledges.map(ack => <span key={ack.acknowledgeid} className=\"problem-ack-message\">{ack.message}</span>)}\n      </div>\n    </div>\n  );\n}\n","import React, { PureComponent } from 'react';\nimport _ from 'lodash';\nimport moment from 'moment';\nimport { GFTimeRange, ZBXEvent, ZBXAcknowledge } from '../../types';\n\nconst DEFAULT_OK_COLOR = 'rgb(56, 189, 113)';\nconst DEFAULT_PROBLEM_COLOR = 'rgb(215, 0, 0)';\nconst EVENT_POINT_SIZE = 16;\nconst INNER_POINT_SIZE = 0.6;\nconst HIGHLIGHTED_POINT_SIZE = 1.1;\nconst EVENT_REGION_HEIGHT = Math.round(EVENT_POINT_SIZE * 0.6);\n\nexport interface ProblemTimelineProps {\n  events: ZBXEvent[];\n  timeRange: GFTimeRange;\n  okColor?: string;\n  problemColor?: string;\n  eventRegionHeight?: number;\n  eventPointSize?: number;\n}\n\ninterface ProblemTimelineState {\n  width: number;\n  highlightedEvent?: ZBXEvent | null;\n  highlightedRegion?: number | null;\n  showEventInfo?: boolean;\n  eventInfo?: EventInfo;\n}\n\ninterface EventInfo {\n  timestamp?: number;\n  duration?: number;\n  message?: string;\n}\n\nexport default class ProblemTimeline extends PureComponent<ProblemTimelineProps, ProblemTimelineState> {\n  rootRef: any;\n  sortedEvents: ZBXEvent[];\n\n  static defaultProps = {\n    okColor: DEFAULT_OK_COLOR,\n    problemColor: DEFAULT_PROBLEM_COLOR,\n    eventRegionHeight: EVENT_REGION_HEIGHT,\n    eventPointSize: EVENT_POINT_SIZE,\n  };\n\n  constructor(props) {\n    super(props);\n    this.state = {\n      width: 0,\n      highlightedEvent: null,\n      highlightedRegion: null,\n      showEventInfo: false,\n      eventInfo: {}\n    };\n  }\n\n  componentDidUpdate(prevProps, prevState) {\n    if (this.rootRef && prevState.width !== this.rootRef.clientWidth) {\n      const width = this.rootRef.clientWidth;\n      this.setState({ width });\n    }\n  }\n\n  setRootRef = ref => {\n    this.rootRef = ref;\n    const width = ref && ref.clientWidth || 0;\n    this.setState({ width });\n  }\n\n  handlePointHighlight = (index: number, secondIndex?: number) => {\n    const event: ZBXEvent = this.sortedEvents[index];\n    const regionToHighlight = this.getRegionToHighlight(index);\n    let duration: number;\n    if (secondIndex !== undefined) {\n      duration = this.getEventDuration(index, secondIndex);\n    }\n    this.setState({\n      highlightedEvent: event,\n      showEventInfo: true,\n      highlightedRegion: regionToHighlight,\n      eventInfo: {\n        duration\n      }\n    });\n    // this.showEventInfo(event);\n  }\n\n  handlePointUnHighlight = () => {\n    this.setState({ showEventInfo: false, highlightedRegion: null });\n  }\n\n  handleAckHighlight = (ack: ZBXAcknowledge, index: number) => {\n    this.setState({\n      showEventInfo: true,\n      eventInfo: {\n        timestamp: Number(ack.clock),\n        message: ack.message,\n      }\n    });\n  }\n\n  handleAckUnHighlight = () => {\n    this.setState({ showEventInfo: false });\n  }\n\n  showEventInfo = (event: ZBXEvent) => {\n    this.setState({ highlightedEvent: event, showEventInfo: true });\n  }\n\n  hideEventInfo = () => {\n    this.setState({ showEventInfo: false });\n  }\n\n  getRegionToHighlight = (index: number): number => {\n    const event = this.sortedEvents[index];\n    const regionToHighlight = event.value === '1' ? index + 1 : index;\n    return regionToHighlight;\n  }\n\n  getEventDuration(firstIndex: number, secondIndex: number): number {\n    return Math.abs(Number(this.sortedEvents[firstIndex].clock) - Number(this.sortedEvents[secondIndex].clock)) * 1000;\n  }\n\n  sortEvents() {\n    const events = _.sortBy(this.props.events, e => Number(e.clock));\n    this.sortedEvents = events;\n    return events;\n  }\n\n  getEventAcks(events: ZBXEvent[]): ZBXAcknowledge[] {\n    const acks: ZBXAcknowledge[] = [];\n    for (const event of events) {\n      if (event.acknowledges) {\n        for (const ack of event.acknowledges) {\n          acks.push(ack);\n        }\n      }\n    }\n    return _.sortBy(acks, ack => Number(ack.clock));\n  }\n\n  render() {\n    if (!this.rootRef) {\n      return <div className=\"event-timeline\" ref={this.setRootRef} />;\n    }\n\n    const { timeRange, eventPointSize, eventRegionHeight } = this.props;\n    const events = this.sortEvents();\n    const acknowledges = this.getEventAcks(events);\n    const boxWidth = this.state.width + eventPointSize;\n    const boxHeight = Math.round(eventPointSize * 2.5);\n    const width = boxWidth - eventPointSize;\n    const padding = Math.round(eventPointSize / 2);\n    const pointsYpos = eventRegionHeight / 2;\n    const timelineYpos = Math.round(boxHeight / 2 - eventPointSize / 2);\n\n    return (\n      <div className=\"event-timeline\" ref={this.setRootRef} style={{ transform: `translate(${-padding}px, 0)`}}>\n        <TimelineInfoContainer className=\"timeline-info-container\"\n          event={this.state.highlightedEvent}\n          eventInfo={this.state.eventInfo}\n          show={this.state.showEventInfo}\n          left={padding}\n      />\n        <svg className=\"event-timeline-canvas\" viewBox={`0 0 ${boxWidth} ${boxHeight}`}>\n          <defs>\n            <TimelineSVGFilters />\n          </defs>\n          <g className=\"event-timeline-group\" transform={`translate(${padding}, ${timelineYpos})`}>\n            <g className=\"event-timeline-regions\" filter=\"url(#boxShadow)\">\n              <TimelineRegions\n                events={events}\n                timeRange={timeRange}\n                width={width}\n                height={eventRegionHeight}\n                highlightedRegion={this.state.highlightedRegion}\n              />\n            </g>\n            <g className=\"timeline-acknowledges\" transform={`translate(0, ${pointsYpos})`}>\n              <TimelineAcks\n                acknowledges={acknowledges}\n                timeRange={timeRange}\n                width={width}\n                size={eventPointSize}\n                onHighlight={this.handleAckHighlight}\n                onUnHighlight={this.handleAckUnHighlight}\n              />\n            </g>\n            <g className=\"timeline-points\" transform={`translate(0, ${pointsYpos})`}>\n              <TimelinePoints\n                events={events}\n                timeRange={timeRange}\n                width={width}\n                pointSize={eventPointSize}\n                onPointHighlight={this.handlePointHighlight}\n                onPointUnHighlight={this.handlePointUnHighlight}\n              />\n            </g>\n          </g>\n        </svg>\n      </div>\n    );\n  }\n}\n\nfunction TimelineSVGFilters() {\n  return (\n    <React.Fragment>\n      <filter id=\"dropShadow\" x=\"-50%\" y=\"-50%\" width=\"200%\" height=\"200%\">\n        <feGaussianBlur in=\"SourceAlpha\" stdDeviation=\"2\" />\n        <feOffset dx=\"1\" dy=\"1\" />\n        <feMerge>\n          <feMergeNode />\n          <feMergeNode in=\"SourceGraphic\" />\n        </feMerge>\n      </filter>\n      <filter id=\"boxShadow\" x=\"-50%\" y=\"-50%\" width=\"200%\" height=\"200%\">\n        <feGaussianBlur in=\"SourceAlpha\" stdDeviation=\"1\" />\n        <feComponentTransfer>\n          <feFuncA type=\"linear\" slope=\"0.7\" />\n        </feComponentTransfer>\n        <feOffset dx=\"1\" dy=\"1\" />\n        <feMerge>\n          <feMergeNode />\n          <feMergeNode in=\"SourceGraphic\" />\n        </feMerge>\n      </filter>\n      <filter id=\"glowShadow\" x=\"-50%\" y=\"-50%\" width=\"200%\" height=\"200%\">\n        <feGaussianBlur in=\"SourceGraphic\" stdDeviation=\"2\" />\n        <feMerge>\n          <feMergeNode />\n          <feMergeNode in=\"SourceGraphic\" />\n        </feMerge>\n      </filter>\n      <filter id=\"timelinePointBlur\" x=\"-50%\" y=\"-50%\" width=\"200%\" height=\"200%\">\n        <feGaussianBlur in=\"SourceGraphic\" stdDeviation=\"2\" result=\"blurOut\" />\n      </filter>\n    </React.Fragment>\n  );\n}\n\ninterface TimelineInfoContainerProps {\n  event?: ZBXEvent | null;\n  eventInfo?: EventInfo | null;\n  show?: boolean;\n  left?: number;\n  className?: string;\n}\n\nclass TimelineInfoContainer extends PureComponent<TimelineInfoContainerProps> {\n  static defaultProps = {\n    left: 0,\n    className: '',\n    show: false,\n  };\n\n  render() {\n    const { event, eventInfo, show, className, left } = this.props;\n    let infoItems, durationItem;\n    if (event) {\n      const ts = moment(Number(event.clock) * 1000);\n      const tsFormatted = ts.format('HH:mm:ss');\n      infoItems = [\n        <span key=\"ts\" className=\"event-timestamp\">\n          <span className=\"event-timestamp-label\">Time:&nbsp;</span>\n          <span className=\"event-timestamp-value\">{tsFormatted}</span>\n        </span>\n      ];\n    }\n    if (eventInfo && eventInfo.duration) {\n      const duration = eventInfo.duration;\n      const durationFormatted = moment.utc(duration).format('HH:mm:ss');\n      durationItem = (\n        <span key=\"duration\" className=\"event-timestamp\">\n          <span className=\"event-timestamp-label\">Duration:&nbsp;</span>\n          <span className=\"event-timestamp-value\">{durationFormatted}</span>\n        </span>\n      );\n    }\n    if (eventInfo && eventInfo.timestamp) {\n      const ts = moment(eventInfo.timestamp * 1000);\n      const tsFormatted = ts.format('HH:mm:ss');\n      infoItems = [\n        <span key=\"ts\" className=\"event-timestamp\">\n          <span className=\"event-timestamp-label\">Time:&nbsp;</span>\n          <span className=\"event-timestamp-value\">{tsFormatted}</span>\n        </span>\n      ];\n    }\n\n    const containerStyle: React.CSSProperties = { left };\n    if (!show) {\n      containerStyle.opacity = 0;\n    }\n\n    return (\n      <div className={className} style={containerStyle}>\n        <div>\n          {infoItems}\n        </div>\n        <div>\n          {durationItem}\n        </div>\n        {eventInfo && eventInfo.message &&\n          <div>\n            <span key=\"duration\" className=\"event-timestamp\">\n              <span className=\"event-timestamp-label\">Message:&nbsp;</span>\n              <span className=\"event-timestamp-value\">{eventInfo.message}</span>\n            </span>\n          </div>\n        }\n      </div>\n    );\n  }\n}\n\ninterface TimelineRegionsProps {\n  events: ZBXEvent[];\n  timeRange: GFTimeRange;\n  width: number;\n  height: number;\n  okColor?: string;\n  problemColor?: string;\n  highlightedRegion?: number | null;\n}\n\nclass TimelineRegions extends PureComponent<TimelineRegionsProps> {\n  static defaultProps = {\n    highlightedRegion: null,\n  };\n\n  render() {\n    const { events, timeRange, width, height, highlightedRegion } = this.props;\n    const { timeFrom, timeTo } = timeRange;\n    const range = timeTo - timeFrom;\n\n    let firstItem: React.ReactNode;\n    if (events.length) {\n      const firstTs = events.length ? Number(events[0].clock) : timeTo;\n      const duration = (firstTs - timeFrom) / range;\n      const regionWidth = Math.round(duration * width);\n      const highlighted = highlightedRegion === 0;\n      const valueClass = `problem-event--${events[0].value !== '1' ? 'problem' : 'ok'}`;\n      const className = `problem-event-region ${valueClass} ${highlighted ? 'highlighted' : ''}`;\n      const firstEventAttributes = {\n        x: 0,\n        y: 0,\n        width: regionWidth,\n        height: height,\n      };\n      firstItem = (\n        <rect key='0' className={className} {...firstEventAttributes}></rect>\n      );\n    }\n\n    const eventsIntervalItems = events.map((event, index) => {\n      const ts = Number(event.clock);\n      const nextTs = index < events.length - 1 ? Number(events[index + 1].clock) : timeTo;\n      const duration = (nextTs - ts) / range;\n      const regionWidth = Math.round(duration * width);\n      const posLeft = Math.round((ts - timeFrom) / range * width);\n      const highlighted = highlightedRegion && highlightedRegion - 1 === index;\n      const valueClass = `problem-event--${event.value === '1' ? 'problem' : 'ok'}`;\n      const className = `problem-event-region ${valueClass} ${highlighted ? 'highlighted' : ''}`;\n      const attributes = {\n        x: posLeft,\n        y: 0,\n        width: regionWidth,\n        height: height,\n      };\n\n      return (\n        <rect key={event.eventid} className={className} {...attributes} />\n      );\n    });\n\n    return [\n      firstItem,\n      eventsIntervalItems\n    ];\n  }\n}\n\ninterface TimelinePointsProps {\n  events: ZBXEvent[];\n  timeRange: GFTimeRange;\n  width: number;\n  pointSize: number;\n  okColor?: string;\n  problemColor?: string;\n  highlightRegion?: boolean;\n  onPointHighlight?: (index: number, secondIndex?: number) => void;\n  onPointUnHighlight?: () => void;\n}\n\ninterface TimelinePointsState {\n  order: number[];\n  highlighted: number[];\n}\n\nclass TimelinePoints extends PureComponent<TimelinePointsProps, TimelinePointsState> {\n  static defaultProps = {\n    highlightRegion: true,\n  };\n\n  constructor(props) {\n    super(props);\n    this.state = { order: [], highlighted: [] };\n  }\n\n  bringToFront = (indexes: number[], highlight = false) => {\n    const { events } = this.props;\n    let order = events.map((v, i) => i);\n    order = moveToEnd(order, indexes);\n    const highlighted = highlight ? indexes : null;\n    this.setState({ order, highlighted });\n  }\n\n  highlightPoint = (index: number) => () => {\n    let pointsToHighlight = [index];\n    if (this.props.onPointHighlight) {\n      if (this.props.highlightRegion) {\n        pointsToHighlight = this.getRegionEvents(index);\n        const secondIndex = pointsToHighlight.length === 2 ? pointsToHighlight[1] : undefined;\n        this.props.onPointHighlight(index, secondIndex);\n      } else {\n        this.props.onPointHighlight(index);\n      }\n    }\n    this.bringToFront(pointsToHighlight, true);\n  }\n\n  getRegionEvents(index: number) {\n    const events = this.props.events;\n    const event = events[index];\n    if (event.value === '1' && index < events.length ) {\n      // Problem event\n      for (let i = index; i < events.length; i++) {\n        if (events[i].value === '0') {\n          const okEventIndex = i;\n          return [index, okEventIndex];\n        }\n      }\n    } else if (event.value === '0' && index > 0) {\n      // OK event\n      let lastProblemIndex = null;\n      for (let i = index - 1; i >= 0; i--) {\n        if (events[i].value === '1') {\n          lastProblemIndex = i;\n        } else {\n          break;\n        }\n      }\n      if (lastProblemIndex !== null) {\n        return [index, lastProblemIndex];\n      }\n    }\n    return [index];\n  }\n\n  unHighlightPoint = index => () => {\n    if (this.props.onPointUnHighlight) {\n      this.props.onPointUnHighlight();\n    }\n    const order = this.props.events.map((v, i) => i);\n    this.setState({ order, highlighted: [] });\n  }\n\n  render() {\n    const { events, timeRange, width, pointSize } = this.props;\n    const { timeFrom, timeTo } = timeRange;\n    const range = timeTo - timeFrom;\n    const pointR = pointSize / 2;\n    const eventsItems = events.map((event, i) => {\n      const ts = Number(event.clock);\n      const posLeft = Math.round((ts - timeFrom) / range * width - pointR);\n      const className = `problem-event-item problem-event--${event.value === '1' ? 'problem' : 'ok'}`;\n      const highlighted = this.state.highlighted.indexOf(i) !== -1;\n\n      return (\n        <TimelinePoint\n          key={event.eventid}\n          className={className}\n          x={posLeft}\n          r={pointR}\n          highlighted={highlighted}\n          onPointHighlight={this.highlightPoint(i)}\n          onPointUnHighlight={this.unHighlightPoint(i)}\n        />\n      );\n    });\n    if (this.state.order.length) {\n      return this.state.order.map(i => eventsItems[i]);\n    }\n    return eventsItems;\n  }\n}\n\ninterface TimelinePointProps {\n  x: number;\n  r: number;\n  color?: string;\n  highlighted?: boolean;\n  className?: string;\n  onPointHighlight?: () => void;\n  onPointUnHighlight?: () => void;\n}\n\ninterface TimelinePointState {\n  highlighted?: boolean;\n}\n\nclass TimelinePoint extends PureComponent<TimelinePointProps, TimelinePointState> {\n  constructor(props) {\n    super(props);\n    this.state = { highlighted: false };\n  }\n\n  componentDidUpdate(prevProps: TimelinePointProps) {\n    // Update component after reordering to make animation working\n    if (prevProps.highlighted !== this.props.highlighted) {\n      this.setState({ highlighted: this.props.highlighted });\n    }\n  }\n\n  handleMouseOver = () => {\n    if (this.props.onPointHighlight) {\n      this.props.onPointHighlight();\n    }\n  }\n\n  handleMouseLeave = () => {\n    if (this.props.onPointUnHighlight) {\n      this.props.onPointUnHighlight();\n    }\n  }\n\n  render() {\n    const { x } = this.props;\n    const r = this.state.highlighted ? Math.round(this.props.r * HIGHLIGHTED_POINT_SIZE) : this.props.r;\n    const cx = x + this.props.r;\n    const rInner = Math.round(r * INNER_POINT_SIZE);\n    const className = `${this.props.className || ''} ${this.state.highlighted ? 'highlighted' : ''}`;\n    return (\n      <g className={className}\n        transform={`translate(${cx}, 0)`}\n        filter=\"url(#dropShadow)\"\n        onMouseOver={this.handleMouseOver}\n        onMouseLeave={this.handleMouseLeave}>\n        <circle cx={0} cy={0} r={r} className=\"point-border\" />\n        <circle cx={0} cy={0} r={rInner} className=\"point-core\" />\n      </g>\n    );\n  }\n}\n\ninterface TimelineAcksProps {\n  acknowledges: ZBXAcknowledge[];\n  timeRange: GFTimeRange;\n  width: number;\n  size: number;\n  onHighlight?: (ack: ZBXAcknowledge, index: number) => void;\n  onUnHighlight?: () => void;\n}\n\ninterface TimelineAcksState {\n  order: number[];\n  highlighted: number;\n}\n\nclass TimelineAcks extends PureComponent<TimelineAcksProps, TimelineAcksState> {\n  constructor(props) {\n    super(props);\n    this.state = { order: [], highlighted: null };\n  }\n\n  handleHighlight = (index: number) => () => {\n    if (this.props.onHighlight) {\n      const ack = this.props.acknowledges[index];\n      this.props.onHighlight(ack, index);\n    }\n    this.bringToFront(index, true);\n  }\n\n  handleUnHighlight = () => {\n    if (this.props.onUnHighlight) {\n      this.props.onUnHighlight();\n    }\n    const order = this.props.acknowledges.map((v, i) => i);\n    this.setState({ order, highlighted: null });\n  }\n\n  bringToFront = (index: number, highlight = false) => {\n    const { acknowledges } = this.props;\n    let order = acknowledges.map((v, i) => i);\n    order = moveToEnd(order, [index]);\n    const highlighted = highlight ? index : null;\n    this.setState({ order, highlighted });\n  }\n\n  render() {\n    const { acknowledges, timeRange, width, size } = this.props;\n    const { timeFrom, timeTo } = timeRange;\n    const range = timeTo - timeFrom;\n    const pointR = size / 2;\n    const eventsItems = acknowledges.map((ack, i) => {\n      const ts = Number(ack.clock);\n      const posLeft = Math.round((ts - timeFrom) / range * width - pointR);\n      const highlighted = this.state.highlighted === i;\n\n      return (\n        <TimelineAck\n          key={ack.eventid}\n          x={posLeft}\n          r={pointR}\n          highlighted={highlighted}\n          onHighlight={this.handleHighlight(i)}\n          onUnHighlight={this.handleUnHighlight}\n        />\n      );\n    });\n    if (this.state.order.length) {\n      return this.state.order.map(i => eventsItems[i]);\n    }\n    return eventsItems;\n  }\n}\n\ninterface TimelineAckProps {\n  x: number;\n  r: number;\n  highlighted?: boolean;\n  onHighlight?: () => void;\n  onUnHighlight?: () => void;\n}\n\ninterface TimelineAckState {\n  highlighted?: boolean;\n}\n\nclass TimelineAck extends PureComponent<TimelineAckProps, TimelineAckState> {\n  constructor(props) {\n    super(props);\n    this.state = { highlighted: false };\n  }\n\n  componentDidUpdate(prevProps: TimelineAckProps) {\n    // Update component after reordering to make animation working\n    if (prevProps.highlighted !== this.props.highlighted) {\n      this.setState({ highlighted: this.props.highlighted });\n    }\n  }\n\n  handleHighlight = () => {\n    if (this.props.onHighlight) {\n      this.props.onHighlight();\n    }\n  }\n\n  handleUnHighlight = () => {\n    if (this.props.onUnHighlight) {\n      this.props.onUnHighlight();\n    }\n  }\n\n  render() {\n    const { x } = this.props;\n    const r = this.state.highlighted ? Math.round(this.props.r * HIGHLIGHTED_POINT_SIZE) : this.props.r;\n    const cx = x + this.props.r;\n    const rInner = Math.round(r * INNER_POINT_SIZE);\n    const className = `problem-event-ack ${this.state.highlighted ? 'highlighted' : ''}`;\n    return (\n      <g className={className}\n        transform={`translate(${cx}, 0)`}\n        filter=\"url(#dropShadow)\"\n        onMouseOver={this.handleHighlight}\n        onMouseLeave={this.handleUnHighlight}>\n        <circle cx={0} cy={0} r={r} className=\"point-border\" />\n        <circle cx={0} cy={0} r={rInner} className=\"point-core\" />\n      </g>\n    );\n  }\n}\n\nfunction moveToEnd<T>(array: T[], itemsToMove: number[]): T[] {\n  const removed = _.pullAt(array, itemsToMove);\n  removed.reverse();\n  array.push(...removed);\n  return array;\n}\n","import React, { PureComponent } from 'react';\nimport moment from 'moment';\nimport * as utils from '../../../datasource-zabbix/utils';\nimport { ZBXTrigger, ZBXItem, ZBXAcknowledge, ZBXHost, ZBXGroup, ZBXEvent, GFTimeRange, RTRow, ZBXTag, ZBXAlert } from '../../types';\nimport { Modal, AckProblemData } from '../Modal';\nimport EventTag from '../EventTag';\nimport Tooltip from '../Tooltip/Tooltip';\nimport ProblemStatusBar from './ProblemStatusBar';\nimport AcknowledgesList from './AcknowledgesList';\nimport ProblemTimeline from './ProblemTimeline';\nimport FAIcon from '../FAIcon';\n\ninterface ProblemDetailsProps extends RTRow<ZBXTrigger> {\n  rootWidth: number;\n  timeRange: GFTimeRange;\n  showTimeline?: boolean;\n  getProblemEvents: (problem: ZBXTrigger) => Promise<ZBXEvent[]>;\n  getProblemAlerts: (problem: ZBXTrigger) => Promise<ZBXAlert[]>;\n  onProblemAck?: (problem: ZBXTrigger, data: AckProblemData) => Promise<any> | any;\n  onTagClick?: (tag: ZBXTag, datasource: string, ctrlKey?: boolean, shiftKey?: boolean) => void;\n}\n\ninterface ProblemDetailsState {\n  events: ZBXEvent[];\n  alerts: ZBXAlert[];\n  show: boolean;\n  showAckDialog: boolean;\n}\n\nexport default class ProblemDetails extends PureComponent<ProblemDetailsProps, ProblemDetailsState> {\n  constructor(props) {\n    super(props);\n    this.state = {\n      events: [],\n      alerts: [],\n      show: false,\n      showAckDialog: false,\n    };\n  }\n\n  componentDidMount() {\n    if (this.props.showTimeline) {\n      this.fetchProblemEvents();\n    }\n    this.fetchProblemAlerts();\n    requestAnimationFrame(() => {\n      this.setState({ show: true });\n    });\n  }\n\n  handleTagClick = (tag: ZBXTag, ctrlKey?: boolean, shiftKey?: boolean) => {\n    if (this.props.onTagClick) {\n      this.props.onTagClick(tag, this.props.original.datasource, ctrlKey, shiftKey);\n    }\n  }\n\n  fetchProblemEvents() {\n    const problem = this.props.original;\n    this.props.getProblemEvents(problem)\n    .then(events => {\n      this.setState({ events });\n    });\n  }\n\n  fetchProblemAlerts() {\n    const problem = this.props.original;\n    this.props.getProblemAlerts(problem)\n    .then(alerts => {\n      this.setState({ alerts });\n    });\n  }\n\n  ackProblem = (data: AckProblemData) => {\n    const problem = this.props.original as ZBXTrigger;\n    return this.props.onProblemAck(problem, data).then(result => {\n      this.closeAckDialog();\n    }).catch(err => {\n      console.log(err);\n      this.closeAckDialog();\n    });\n  }\n\n  showAckDialog = () => {\n    this.setState({ showAckDialog: true });\n  }\n\n  closeAckDialog = () => {\n    this.setState({ showAckDialog: false });\n  }\n\n  render() {\n    const problem = this.props.original as ZBXTrigger;\n    const alerts = this.state.alerts;\n    const rootWidth = this.props.rootWidth;\n    const displayClass = this.state.show ? 'show' : '';\n    const wideLayout = rootWidth > 1200;\n    const compactStatusBar = rootWidth < 800 || problem.acknowledges && wideLayout && rootWidth < 1400;\n    const age = moment.unix(problem.lastchangeUnix).fromNow(true);\n    const showAcknowledges = problem.acknowledges && problem.acknowledges.length !== 0;\n\n    return (\n      <div className={`problem-details-container ${displayClass}`}>\n        <div className=\"problem-details\">\n          <div className=\"problem-details-row\">\n            <div className=\"problem-value-container\">\n              <div className=\"problem-age\">\n                <FAIcon icon=\"clock-o\" />\n                <span>{age}</span>\n              </div>\n              {problem.items && <ProblemItems items={problem.items} />}\n            </div>\n            <ProblemStatusBar problem={problem} alerts={alerts} className={compactStatusBar && 'compact'} />\n            {problem.showAckButton &&\n              <div className=\"problem-actions\">\n                <ProblemActionButton className=\"navbar-button navbar-button--settings\"\n                  icon=\"reply-all\"\n                  tooltip=\"Acknowledge problem\"\n                  onClick={this.showAckDialog} />\n              </div>\n            }\n          </div>\n          {problem.comments &&\n            <div className=\"problem-description\">\n              <span className=\"description-label\">Description:&nbsp;</span>\n              <span>{problem.comments}</span>\n            </div>\n          }\n          {problem.tags && problem.tags.length > 0 &&\n            <div className=\"problem-tags\">\n              {problem.tags && problem.tags.map(tag =>\n                <EventTag\n                  key={tag.tag + tag.value}\n                  tag={tag}\n                  highlight={tag.tag === problem.correlation_tag}\n                  onClick={this.handleTagClick}\n                />)\n              }\n            </div>\n          }\n          {this.props.showTimeline && this.state.events.length > 0 &&\n            <ProblemTimeline events={this.state.events} timeRange={this.props.timeRange} />\n          }\n          {showAcknowledges && !wideLayout &&\n            <div className=\"problem-ack-container\">\n              <h6><FAIcon icon=\"reply-all\" /> Acknowledges</h6>\n              <AcknowledgesList acknowledges={problem.acknowledges} />\n            </div>\n          }\n        </div>\n        {showAcknowledges && wideLayout &&\n          <div className=\"problem-details-middle\">\n            <div className=\"problem-ack-container\">\n              <h6><FAIcon icon=\"reply-all\" /> Acknowledges</h6>\n              <AcknowledgesList acknowledges={problem.acknowledges} />\n            </div>\n          </div>\n        }\n        <div className=\"problem-details-right\">\n          <div className=\"problem-details-right-item\">\n            <FAIcon icon=\"database\" />\n            <span>{problem.datasource}</span>\n          </div>\n          {problem.proxy &&\n            <div className=\"problem-details-right-item\">\n              <FAIcon icon=\"cloud\" />\n              <span>{problem.proxy}</span>\n            </div>\n          }\n          {problem.groups && <ProblemGroups groups={problem.groups} className=\"problem-details-right-item\" />}\n          {problem.hosts && <ProblemHosts hosts={problem.hosts} className=\"problem-details-right-item\" />}\n        </div>\n        <Modal withBackdrop={true}\n          isOpen={this.state.showAckDialog}\n          onSubmit={this.ackProblem}\n          onClose={this.closeAckDialog} />\n      </div>\n    );\n  }\n}\n\ninterface ProblemItemProps {\n  item: ZBXItem;\n  showName?: boolean;\n}\n\nfunction ProblemItem(props: ProblemItemProps) {\n  const { item, showName } = props;\n  const itemName = utils.expandItemName(item.name, item.key_);\n  return (\n    <Tooltip placement=\"bottom\" content={itemName}>\n      <div className=\"problem-item\">\n        <FAIcon icon=\"thermometer-three-quarters\" />\n        {showName && <span className=\"problem-item-name\">{item.name}: </span>}\n        <span className=\"problem-item-value\">{item.lastvalue}</span>\n      </div>\n    </Tooltip>\n  );\n}\n\ninterface ProblemItemsProps {\n  items: ZBXItem[];\n}\n\nclass ProblemItems extends PureComponent<ProblemItemsProps> {\n  render() {\n    const { items } = this.props;\n    return (items.length > 1 ?\n      items.map(item => <ProblemItem item={item} key={item.itemid} showName={true} />) :\n      <ProblemItem item={items[0]} />\n    );\n  }\n}\n\ninterface ProblemGroupsProps {\n  groups: ZBXGroup[];\n  className?: string;\n}\n\nclass ProblemGroups extends PureComponent<ProblemGroupsProps> {\n  render() {\n    return this.props.groups.map(g => (\n      <div className={this.props.className || ''} key={g.groupid}>\n        <FAIcon icon=\"folder\" />\n        <span>{g.name}</span>\n      </div>\n    ));\n  }\n}\n\ninterface ProblemHostsProps {\n  hosts: ZBXHost[];\n  className?: string;\n}\n\nclass ProblemHosts extends PureComponent<ProblemHostsProps> {\n  render() {\n    return this.props.hosts.map(h => (\n      <div className={this.props.className || ''} key={h.hostid}>\n        <FAIcon icon=\"server\" />\n        <span>{h.name}</span>\n      </div>\n    ));\n  }\n}\n\ninterface ProblemActionButtonProps {\n  icon: string;\n  tooltip?: string;\n  className?: string;\n  onClick?: (event?) => void;\n}\n\nclass ProblemActionButton extends PureComponent<ProblemActionButtonProps> {\n  handleClick = (event) => {\n    this.props.onClick(event);\n  }\n\n  render() {\n    const { icon, tooltip, className } = this.props;\n    let button = (\n      <button className={`btn problem-action-button ${className || ''}`} onClick={this.handleClick}>\n        <FAIcon icon={icon} />\n      </button>\n    );\n    if (tooltip) {\n      button = (\n        <Tooltip placement=\"bottom\" content={tooltip}>\n          {button}\n        </Tooltip>\n      );\n    }\n    return button;\n  }\n}\n","import React from 'react';\nimport classNames from 'classnames';\n\ninterface GFHeartIconProps {\n  status: 'critical' | 'warning' | 'online' | 'ok' | 'problem';\n  className?: string;\n}\n\nexport default function GFHeartIcon(props: GFHeartIconProps) {\n  const status = props.status;\n  const className = classNames(\"icon-gf\", props.className,\n    { \"icon-gf-critical\": status === 'critical' || status === 'problem' || status === 'warning'},\n    { \"icon-gf-online\": status === 'online' || status === 'ok' },\n  );\n  return (\n    <i className={className}></i>\n  );\n}\n","import React, { PureComponent } from 'react';\nimport ReactTable from 'react-table';\nimport classNames from 'classnames';\nimport _ from 'lodash';\nimport moment from 'moment';\nimport * as utils from '../../../datasource-zabbix/utils';\nimport { isNewProblem } from '../../utils';\nimport { ProblemsPanelOptions, ZBXTrigger, ZBXEvent, GFTimeRange, RTCell, ZBXTag, TriggerSeverity, RTResized, ZBXAlert } from '../../types';\nimport EventTag from '../EventTag';\nimport ProblemDetails from './ProblemDetails';\nimport { AckProblemData } from '../Modal';\nimport GFHeartIcon from '../GFHeartIcon';\n\nexport interface ProblemListProps {\n  problems: ZBXTrigger[];\n  panelOptions: ProblemsPanelOptions;\n  loading?: boolean;\n  timeRange?: GFTimeRange;\n  pageSize?: number;\n  fontSize?: number;\n  getProblemEvents: (problem: ZBXTrigger) => ZBXEvent[];\n  getProblemAlerts: (problem: ZBXTrigger) => ZBXAlert[];\n  onProblemAck?: (problem: ZBXTrigger, data: AckProblemData) => void;\n  onTagClick?: (tag: ZBXTag, datasource: string, ctrlKey?: boolean, shiftKey?: boolean) => void;\n  onPageSizeChange?: (pageSize: number, pageIndex: number) => void;\n  onColumnResize?: (newResized: RTResized) => void;\n}\n\ninterface ProblemListState {\n  expanded: any;\n  page: number;\n}\n\nexport default class ProblemList extends PureComponent<ProblemListProps, ProblemListState> {\n  rootWidth: number;\n  rootRef: any;\n\n  constructor(props) {\n    super(props);\n    this.state = {\n      expanded: {},\n      page: 0,\n    };\n  }\n\n  setRootRef = ref => {\n    this.rootRef = ref;\n  }\n\n  handleProblemAck = (problem: ZBXTrigger, data: AckProblemData) => {\n    return this.props.onProblemAck(problem, data);\n  }\n\n  handlePageSizeChange = (pageSize, pageIndex) => {\n    if (this.props.onPageSizeChange) {\n      this.props.onPageSizeChange(pageSize, pageIndex);\n    }\n  }\n\n  handleResizedChange = (newResized, event) => {\n    if (this.props.onColumnResize) {\n      this.props.onColumnResize(newResized);\n    }\n  }\n\n  handleExpandedChange = expanded => {\n    const nextExpanded = { ...this.state.expanded };\n    nextExpanded[this.state.page] = expanded;\n    this.setState({\n      expanded: nextExpanded\n    });\n  }\n\n  handleTagClick = (tag: ZBXTag, datasource: string, ctrlKey?: boolean, shiftKey?: boolean) => {\n    if (this.props.onTagClick) {\n      this.props.onTagClick(tag, datasource, ctrlKey, shiftKey);\n    }\n  }\n\n  getExpandedPage = (page: number) => {\n    return this.state.expanded[page] || {};\n  }\n\n  buildColumns() {\n    const result = [];\n    const options = this.props.panelOptions;\n    const highlightNewerThan = options.highlightNewEvents && options.highlightNewerThan;\n    const statusCell = props => StatusCell(props, options.okEventColor, DEFAULT_PROBLEM_COLOR, highlightNewerThan);\n    const statusIconCell = props => StatusIconCell(props, highlightNewerThan);\n\n    const columns = [\n      { Header: 'Host', accessor: 'host', show: options.hostField },\n      { Header: 'Host (Technical Name)', accessor: 'hostTechName', show: options.hostTechNameField },\n      { Header: 'Host Groups', accessor: 'groups', show: options.hostGroups, Cell: GroupCell },\n      { Header: 'Proxy', accessor: 'proxy', show: options.hostProxy },\n      {\n        Header: 'Severity', show: options.severityField, className: 'problem-severity', width: 120,\n        accessor: problem => problem.priority,\n        id: 'severity',\n        Cell: props => SeverityCell(props, options.triggerSeverity, options.markAckEvents, options.ackEventColor),\n      },\n      {\n        Header: '', id: 'statusIcon', show: options.statusIcon, className: 'problem-status-icon', width: 50,\n        accessor: 'value',\n        Cell: statusIconCell,\n      },\n      { Header: 'Status', accessor: 'value', show: options.statusField, width: 100, Cell: statusCell },\n      { Header: 'Problem', accessor: 'description', minWidth: 200, Cell: ProblemCell},\n      {\n        Header: 'Tags', accessor: 'tags', show: options.showTags, className: 'problem-tags',\n        Cell: props => <TagCell {...props} onTagClick={this.handleTagClick} />\n      },\n      {\n        Header: 'Age', className: 'problem-age', width: 100, show: options.ageField, accessor: 'lastchangeUnix',\n        id: 'age',\n        Cell: AgeCell,\n      },\n      {\n        Header: 'Time', className: 'last-change', width: 150, accessor: 'lastchangeUnix',\n        id: 'lastchange',\n        Cell: props => LastChangeCell(props, options.customLastChangeFormat && options.lastChangeFormat),\n      },\n      { Header: '', className: 'custom-expander', width: 60, expander: true, Expander: CustomExpander },\n    ];\n    for (const column of columns) {\n      if (column.show || column.show === undefined) {\n        delete column.show;\n        result.push(column);\n      }\n    }\n    return result;\n  }\n\n  render() {\n    const columns = this.buildColumns();\n    this.rootWidth = this.rootRef && this.rootRef.clientWidth;\n    const { pageSize, fontSize, panelOptions } = this.props;\n    const panelClass = classNames('panel-problems', { [`font-size--${fontSize}`]: fontSize });\n    let pageSizeOptions = [5, 10, 20, 25, 50, 100];\n    if (pageSize) {\n      pageSizeOptions.push(pageSize);\n      pageSizeOptions = _.uniq(_.sortBy(pageSizeOptions));\n    }\n\n    return (\n      <div className={panelClass} ref={this.setRootRef}>\n        <ReactTable\n          data={this.props.problems}\n          columns={columns}\n          defaultPageSize={10}\n          pageSize={pageSize}\n          pageSizeOptions={pageSizeOptions}\n          resized={panelOptions.resizedColumns}\n          minRows={0}\n          loading={this.props.loading}\n          noDataText=\"No problems found\"\n          SubComponent={props =>\n            <ProblemDetails {...props}\n              rootWidth={this.rootWidth}\n              timeRange={this.props.timeRange}\n              showTimeline={panelOptions.problemTimeline}\n              getProblemEvents={this.props.getProblemEvents}\n              getProblemAlerts={this.props.getProblemAlerts}\n              onProblemAck={this.handleProblemAck}\n              onTagClick={this.handleTagClick}\n            />\n          }\n          expanded={this.getExpandedPage(this.state.page)}\n          onExpandedChange={this.handleExpandedChange}\n          onPageChange={page => this.setState({ page })}\n          onPageSizeChange={this.handlePageSizeChange}\n          onResizedChange={this.handleResizedChange}\n        />\n      </div>\n    );\n  }\n}\n\nfunction SeverityCell(props: RTCell<ZBXTrigger>, problemSeverityDesc: TriggerSeverity[], markAckEvents?: boolean, ackEventColor?: string) {\n  const problem = props.original;\n  let color: string;\n  const severityDesc = _.find(problemSeverityDesc, s => s.priority === Number(props.original.priority));\n  color = severityDesc.color;\n\n  // Mark acknowledged triggers with different color\n  if (markAckEvents && problem.acknowledges && problem.acknowledges.length) {\n    color = ackEventColor;\n  }\n\n  return (\n    <div className='severity-cell' style={{ background: color }}>\n      {severityDesc.severity}\n    </div>\n  );\n}\n\nconst DEFAULT_OK_COLOR = 'rgb(56, 189, 113)';\nconst DEFAULT_PROBLEM_COLOR = 'rgb(215, 0, 0)';\n\nfunction StatusCell(props: RTCell<ZBXTrigger>, okColor = DEFAULT_OK_COLOR, problemColor = DEFAULT_PROBLEM_COLOR, highlightNewerThan?: string) {\n  const status = props.value === '0' ? 'RESOLVED' : 'PROBLEM';\n  const color = props.value === '0' ? okColor : problemColor;\n  let newProblem = false;\n  if (highlightNewerThan) {\n    newProblem = isNewProblem(props.original, highlightNewerThan);\n  }\n  return (\n    <span className={newProblem ? 'problem-status--new' : ''} style={{ color }}>{status}</span>\n  );\n}\n\nfunction StatusIconCell(props: RTCell<ZBXTrigger>, highlightNewerThan?: string) {\n  const status = props.value === '0' ? 'ok' : 'problem';\n  let newProblem = false;\n  if (highlightNewerThan) {\n    newProblem = isNewProblem(props.original, highlightNewerThan);\n  }\n  const className = classNames('zbx-problem-status-icon',\n    { 'problem-status--new': newProblem },\n    { 'zbx-problem': props.value === '1' },\n    { 'zbx-ok': props.value === '0' },\n  );\n  return <GFHeartIcon status={status} className={className} />;\n}\n\nfunction GroupCell(props: RTCell<ZBXTrigger>) {\n  let groups = \"\";\n  if (props.value && props.value.length) {\n    groups = props.value.map(g => g.name).join(', ');\n  }\n  return (\n    <span>{groups}</span>\n  );\n}\n\nfunction ProblemCell(props: RTCell<ZBXTrigger>) {\n  const comments = props.original.comments;\n  return (\n    <div>\n      <span className=\"problem-description\">{props.value}</span>\n      {/* {comments && <FAIcon icon=\"file-text-o\" customClass=\"comments-icon\" />} */}\n    </div>\n  );\n}\n\nfunction AgeCell(props: RTCell<ZBXTrigger>) {\n  const problem = props.original;\n  const timestamp = moment.unix(problem.lastchangeUnix);\n  const age = timestamp.fromNow(true);\n  return <span>{age}</span>;\n}\n\nfunction LastChangeCell(props: RTCell<ZBXTrigger>, customFormat?: string) {\n  const DEFAULT_TIME_FORMAT = \"DD MMM YYYY HH:mm:ss\";\n  const problem = props.original;\n  const timestamp = moment.unix(problem.lastchangeUnix);\n  const format = customFormat || DEFAULT_TIME_FORMAT;\n  const lastchange = timestamp.format(format);\n  return <span>{lastchange}</span>;\n}\n\ninterface TagCellProps extends RTCell<ZBXTrigger> {\n  onTagClick: (tag: ZBXTag, datasource: string) => void;\n}\n\nclass TagCell extends PureComponent<TagCellProps> {\n  handleTagClick = (tag: ZBXTag) => {\n    if (this.props.onTagClick) {\n      this.props.onTagClick(tag, this.props.original.datasource);\n    }\n  }\n\n  render() {\n    const tags = this.props.value || [];\n    return [\n      tags.map(tag => <EventTag key={tag.tag + tag.value} tag={tag} onClick={this.handleTagClick} /> )\n    ];\n  }\n}\n\nfunction CustomExpander(props: RTCell<any>) {\n  return (\n    <span className={props.isExpanded ? \"expanded\" : \"\"}>\n      <i className=\"fa fa-info-circle\"></i>\n    </span>\n  );\n}\n","import React, { PureComponent } from 'react';\nimport { ZBXTrigger } from '../../types';\n\ninterface AlertAcknowledgesProps {\n  problem: ZBXTrigger;\n  onClick: (event?) => void;\n}\n\nexport default class AlertAcknowledges extends PureComponent<AlertAcknowledgesProps> {\n  handleClick = (event) => {\n    this.props.onClick(event);\n  }\n\n  render() {\n    const { problem } = this.props;\n    const ackRows = problem.acknowledges && problem.acknowledges.map(ack => {\n      return (\n        <tr key={ack.acknowledgeid}>\n          <td>{ack.time}</td>\n          <td>{ack.user}</td>\n          <td>{ack.message}</td>\n        </tr>\n      );\n    });\n    return (\n      <div className=\"ack-tooltip\">\n        <table className=\"table\">\n          <thead>\n            <tr>\n              <th className=\"ack-time\">Time</th>\n              <th className=\"ack-user\">User</th>\n              <th className=\"ack-comments\">Comments</th>\n            </tr>\n          </thead>\n          <tbody>\n            {ackRows}\n          </tbody>\n        </table>\n        {problem.showAckButton &&\n          <div className=\"ack-add-button\">\n            <button id=\"add-acknowledge-btn\" className=\"btn btn-mini btn-inverse gf-form-button\" onClick={this.handleClick}>\n              <i className=\"fa fa-plus\"></i>\n            </button>\n          </div>\n        }\n      </div>\n    );\n  }\n}\n","import React, { CSSProperties } from 'react';\nimport classNames from 'classnames';\nimport { ZBXTrigger } from '../../types';\n\ninterface AlertIconProps {\n  problem: ZBXTrigger;\n  color: string;\n  blink?: boolean;\n  highlightBackground?: boolean;\n}\n\nexport default function AlertIcon(props: AlertIconProps) {\n  const { problem, color, blink, highlightBackground } = props;\n  const priority = Number(problem.priority);\n  let iconClass = '';\n  if (problem.value === '1' && priority >= 2) {\n    iconClass = 'icon-gf-critical';\n  } else {\n    iconClass = 'icon-gf-online';\n  }\n\n  const className = classNames('icon-gf', iconClass, { 'zabbix-trigger--blinked': blink });\n  const style: CSSProperties = {};\n  if (!highlightBackground) {\n    style.color = color;\n  }\n\n  return (\n    <div className=\"alert-rule-item__icon\" style={style}>\n      <i className={className}></i>\n    </div>\n  );\n}\n","import React, { PureComponent, CSSProperties } from 'react';\nimport classNames from 'classnames';\nimport _ from 'lodash';\nimport moment from 'moment';\nimport { isNewProblem, formatLastChange } from '../../utils';\nimport { ProblemsPanelOptions, ZBXTrigger, ZBXTag } from '../../types';\nimport { AckProblemData, Modal } from '.././Modal';\nimport EventTag from '../EventTag';\nimport Tooltip from '.././Tooltip/Tooltip';\nimport AlertAcknowledges from './AlertAcknowledges';\nimport AlertIcon from './AlertIcon';\n\ninterface AlertCardProps {\n  problem: ZBXTrigger;\n  panelOptions: ProblemsPanelOptions;\n  onTagClick?: (tag: ZBXTag, datasource: string) => void;\n  onProblemAck?: (problem: ZBXTrigger, data: AckProblemData) => Promise<any> | any;\n}\n\ninterface AlertCardState {\n  showAckDialog: boolean;\n}\n\nexport default class AlertCard extends PureComponent<AlertCardProps, AlertCardState> {\n  constructor(props) {\n    super(props);\n    this.state = { showAckDialog: false };\n  }\n\n  handleTagClick = (tag: ZBXTag) => {\n    if (this.props.onTagClick) {\n      this.props.onTagClick(tag, this.props.problem.datasource);\n    }\n  }\n\n  ackProblem = (data: AckProblemData) => {\n    const problem = this.props.problem;\n    return this.props.onProblemAck(problem, data).then(result => {\n      this.closeAckDialog();\n    }).catch(err => {\n      console.log(err);\n      this.closeAckDialog();\n    });\n  }\n\n  showAckDialog = () => {\n    const problem = this.props.problem;\n    if (problem.showAckButton) {\n      this.setState({ showAckDialog: true });\n    }\n  }\n\n  closeAckDialog = () => {\n    this.setState({ showAckDialog: false });\n  }\n\n  render() {\n    const { problem, panelOptions } = this.props;\n    const showDatasourceName = panelOptions.targets && panelOptions.targets.length > 1;\n    const cardClass = classNames('alert-rule-item', 'zbx-trigger-card', { 'zbx-trigger-highlighted': panelOptions.highlightBackground });\n    const descriptionClass = classNames('alert-rule-item__text', { 'zbx-description--newline': panelOptions.descriptionAtNewLine });\n    const severityDesc = _.find(panelOptions.triggerSeverity, s => s.priority === Number(problem.priority));\n    const lastchange = formatLastChange(problem.lastchangeUnix, panelOptions.customLastChangeFormat && panelOptions.lastChangeFormat);\n    const age = moment.unix(problem.lastchangeUnix).fromNow(true);\n\n    let newProblem = false;\n    if (panelOptions.highlightNewerThan) {\n      newProblem = isNewProblem(problem, panelOptions.highlightNewerThan);\n    }\n    const blink = panelOptions.highlightNewEvents && newProblem;\n\n    let problemColor: string;\n    if (problem.value === '0') {\n      problemColor = panelOptions.okEventColor;\n    } else if (panelOptions.markAckEvents && problem.acknowledges && problem.acknowledges.length) {\n      problemColor = panelOptions.ackEventColor;\n    } else {\n      problemColor = severityDesc.color;\n    }\n\n    const cardStyle: CSSProperties = {};\n    if (panelOptions.highlightBackground) {\n      cardStyle.backgroundColor = problemColor;\n    }\n\n    return (\n      <li className={cardClass} style={cardStyle}>\n        <AlertIcon problem={problem} color={problemColor} highlightBackground={panelOptions.highlightBackground} blink={blink} />\n\n        <div className=\"alert-rule-item__body\">\n          <div className=\"alert-rule-item__header\">\n            <div className=\"alert-rule-item__name\">\n              <span className=\"zabbix-trigger-name\">{problem.description}</span>\n              {(panelOptions.hostField || panelOptions.hostTechNameField) && (\n                <AlertHost problem={problem} panelOptions={panelOptions} />\n              )}\n              {panelOptions.hostGroups && <AlertGroup problem={problem} panelOptions={panelOptions} />}\n\n              {panelOptions.showTags && (\n                <span className=\"zbx-trigger-tags\">\n                  {problem.tags && problem.tags.map(tag =>\n                    <EventTag\n                      key={tag.tag + tag.value}\n                      tag={tag}\n                      highlight={tag.tag === problem.correlation_tag}\n                      onClick={this.handleTagClick}\n                    />\n                  )}\n                </span>\n              )}\n            </div>\n\n            <div className={descriptionClass}>\n              {panelOptions.statusField && <AlertStatus problem={problem} blink={blink} />}\n              {panelOptions.severityField && (\n                <AlertSeverity severityDesc={severityDesc} blink={blink} highlightBackground={panelOptions.highlightBackground} />\n              )}\n              <span className=\"alert-rule-item__time\">\n                {panelOptions.ageField && \"for \" + age}\n              </span>\n              {panelOptions.descriptionField && !panelOptions.descriptionAtNewLine && (\n                <span className=\"zbx-description\" dangerouslySetInnerHTML={{ __html: problem.comments }} />\n              )}\n            </div>\n\n            {panelOptions.descriptionField && panelOptions.descriptionAtNewLine && (\n              <div className=\"alert-rule-item__text zbx-description--newline\" >\n                <span\n                  className=\"alert-rule-item__info zbx-description\"\n                  dangerouslySetInnerHTML={{ __html: problem.comments }}\n                />\n              </div>\n            )}\n\n          </div>\n        </div>\n\n        {showDatasourceName && (\n          <div className=\"alert-rule-item__time zabbix-trigger-source\">\n            <span>\n              <i className=\"fa fa-database\"></i>\n              {problem.datasource}\n            </span>\n          </div>\n        )}\n\n        <div className=\"alert-rule-item__time zbx-trigger-lastchange\">\n          <span>{lastchange || \"last change unknown\"}</span>\n          <div className=\"trigger-info-block zbx-status-icons\">\n            {problem.url && <a href={problem.url} target=\"_blank\"><i className=\"fa fa-external-link\"></i></a>}\n            {problem.state === '1' && (\n              <Tooltip placement=\"bottom\" content={problem.error}>\n                <span><i className=\"fa fa-question-circle\"></i></span>\n              </Tooltip>\n            )}\n            {problem.lastEvent && (\n              <AlertAcknowledgesButton problem={problem} onClick={this.showAckDialog} />\n            )}\n          </div>\n        </div>\n        <Modal withBackdrop={true}\n          isOpen={this.state.showAckDialog}\n          onSubmit={this.ackProblem}\n          onClose={this.closeAckDialog} />\n      </li>\n    );\n  }\n}\n\ninterface AlertHostProps {\n  problem: ZBXTrigger;\n  panelOptions: ProblemsPanelOptions;\n}\n\nfunction AlertHost(props: AlertHostProps) {\n  const problem = props.problem;\n  const panel = props.panelOptions;\n  let host = \"\";\n  if (panel.hostField && panel.hostTechNameField) {\n    host = `${problem.host} (${problem.hostTechName})`;\n  } else if (panel.hostField || panel.hostTechNameField) {\n    host = panel.hostField ? problem.host : problem.hostTechName;\n  }\n  if (panel.hostProxy && problem.proxy) {\n    host = `${problem.proxy}: ${host}`;\n  }\n\n  return (\n    <span className=\"zabbix-hostname\">\n      {problem.maintenance && <i className=\"fa fa-wrench zbx-maintenance-icon\"></i>}\n      {host}\n    </span>\n  );\n}\n\ninterface AlertGroupProps {\n  problem: ZBXTrigger;\n  panelOptions: ProblemsPanelOptions;\n}\n\nfunction AlertGroup(props: AlertGroupProps) {\n  const problem = props.problem;\n  const panel = props.panelOptions;\n  let groupNames = \"\";\n  if (panel.hostGroups) {\n    const groups = _.map(problem.groups, 'name').join(', ');\n    groupNames += `[ ${groups} ]`;\n  }\n\n  return (\n    <span className=\"zabbix-hostname\">{groupNames}</span>\n  );\n}\n\nconst DEFAULT_OK_COLOR = 'rgb(56, 189, 113)';\nconst DEFAULT_PROBLEM_COLOR = 'rgb(215, 0, 0)';\n\nfunction AlertStatus(props) {\n  const { problem, okColor, problemColor, blink } = props;\n  const status = problem.value === '0' ? 'RESOLVED' : 'PROBLEM';\n  const color = problem.value === '0' ? okColor || DEFAULT_OK_COLOR : problemColor || DEFAULT_PROBLEM_COLOR;\n  const className = classNames(\n    'zbx-trigger-state',\n    { 'alert-state-critical': problem.value === '1' },\n    { 'alert-state-ok': problem.value === '0' },\n    { 'zabbix-trigger--blinked': blink }\n  );\n  return (\n    <span className={className}>\n      {status}\n    </span>\n  );\n}\n\nfunction AlertSeverity(props) {\n  const { severityDesc, highlightBackground, blink } = props;\n  const className = classNames('zbx-trigger-severity', { 'zabbix-trigger--blinked': blink });\n  const style: CSSProperties = {};\n  if (!highlightBackground) {\n    style.color = severityDesc.color;\n  }\n  return (\n    <span className={className} style={style}>\n      {severityDesc.severity}\n    </span>\n  );\n}\n\ninterface AlertAcknowledgesButtonProps {\n  problem: ZBXTrigger;\n  onClick: (event?) => void;\n}\n\nclass AlertAcknowledgesButton extends PureComponent<AlertAcknowledgesButtonProps> {\n  handleClick = (event) => {\n    this.props.onClick(event);\n  }\n\n  renderTooltipContent = () => {\n    return <AlertAcknowledges problem={this.props.problem} onClick={this.handleClick} />;\n  }\n\n  render() {\n    const { problem } = this.props;\n    let content = null;\n    if (problem.acknowledges && problem.acknowledges.length) {\n      content = (\n        <Tooltip placement=\"bottom\" popperClassName=\"ack-tooltip\" content={this.renderTooltipContent}>\n          <span><i className=\"fa fa-comments\"></i></span>\n        </Tooltip>\n      );\n    } else if (problem.showAckButton) {\n      content = (\n        <Tooltip placement=\"bottom\" content=\"Acknowledge problem\">\n          <span role=\"button\" onClick={this.handleClick}><i className=\"fa fa-comments-o\"></i></span>\n        </Tooltip>\n      );\n    }\n    return content;\n  }\n}\n","import React, { PureComponent, CSSProperties } from 'react';\nimport classNames from 'classnames';\nimport { ProblemsPanelOptions, ZBXTrigger, GFTimeRange, ZBXTag } from '../../types';\nimport { AckProblemData } from '.././Modal';\nimport AlertCard from './AlertCard';\n\nexport interface AlertListProps {\n  problems: ZBXTrigger[];\n  panelOptions: ProblemsPanelOptions;\n  loading?: boolean;\n  timeRange?: GFTimeRange;\n  pageSize?: number;\n  fontSize?: number;\n  onProblemAck?: (problem: ZBXTrigger, data: AckProblemData) => void;\n  onTagClick?: (tag: ZBXTag, datasource: string) => void;\n}\n\ninterface AlertListState {\n  page: number;\n  currentProblems: ZBXTrigger[];\n}\n\nexport default class AlertList extends PureComponent<AlertListProps, AlertListState> {\n  constructor(props) {\n    super(props);\n    this.state = {\n      page: 0,\n      currentProblems: this.getCurrentProblems(0),\n    };\n  }\n\n  getCurrentProblems(page: number) {\n    const { pageSize, problems } = this.props;\n    const start = pageSize * page;\n    const end = Math.min(pageSize * (page + 1), problems.length);\n    return this.props.problems.slice(start, end);\n  }\n\n  handlePageChange = (newPage: number) => {\n    const items = this.getCurrentProblems(newPage);\n    this.setState({\n      page: newPage,\n      currentProblems: items,\n    });\n  }\n\n\n  handleTagClick = (tag: ZBXTag, datasource: string) => {\n    if (this.props.onTagClick) {\n      this.props.onTagClick(tag, datasource);\n    }\n  }\n\n  handleProblemAck = (problem: ZBXTrigger, data: AckProblemData) => {\n    return this.props.onProblemAck(problem, data);\n  }\n\n  render() {\n    const { problems, panelOptions } = this.props;\n    const currentProblems = this.getCurrentProblems(this.state.page);\n    let fontSize = parseInt(panelOptions.fontSize.slice(0, panelOptions.fontSize.length - 1), 10);\n    fontSize = fontSize && fontSize !== 100 ? fontSize : null;\n    const alertListClass = classNames('alert-rule-list', { [`font-size--${fontSize}`]: fontSize });\n\n    return (\n      <div className=\"triggers-panel-container\" key=\"alertListContainer\">\n        <section className=\"card-section card-list-layout-list\">\n          <ol className={alertListClass}>\n            {currentProblems.map(problem =>\n              <AlertCard\n                key={`${problem.triggerid}-${problem.datasource}`}\n                problem={problem}\n                panelOptions={panelOptions}\n                onTagClick={this.handleTagClick}\n                onProblemAck={this.handleProblemAck}\n              />\n            )}\n          </ol>\n        </section>\n\n        <div className=\"triggers-panel-footer\" key=\"alertListFooter\">\n          <PaginationControl\n            itemsLength={problems.length}\n            pageSize={this.props.pageSize}\n            pageIndex={this.state.page}\n            onPageChange={this.handlePageChange}\n          />\n        </div>\n      </div>\n    );\n  }\n}\n\ninterface PaginationControlProps {\n  itemsLength: number;\n  pageIndex: number;\n  pageSize: number;\n  onPageChange: (index: number) => void;\n}\n\nclass PaginationControl extends PureComponent<PaginationControlProps> {\n\n  handlePageChange = (index: number) => () => {\n    this.props.onPageChange(index);\n  }\n\n  render() {\n    const { itemsLength, pageIndex, pageSize } = this.props;\n    const pageCount = Math.ceil(itemsLength / pageSize);\n    if (pageCount === 1) {\n      return <ul></ul>;\n    }\n\n    const startPage = Math.max(pageIndex - 3, 0);\n    const endPage = Math.min(pageCount, startPage + 9);\n\n\n    const pageLinks = [];\n    for (let i = startPage; i < endPage; i++) {\n      const pageLinkClass = classNames('triggers-panel-page-link', 'pointer', { 'active': i === pageIndex });\n      const value = i + 1;\n      const pageLinkElem = (\n        <li key={value.toString()}>\n          <a className={pageLinkClass} onClick={this.handlePageChange(i)}>{value}</a>\n        </li>\n      );\n      pageLinks.push(pageLinkElem);\n    }\n\n    return (\n      <ul>\n        {pageLinks}\n      </ul>\n    );\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport _ from 'lodash';\nimport moment from 'moment';\nimport * as dateMath from 'grafana/app/core/utils/datemath';\nimport * as utils from '../datasource-zabbix/utils';\nimport { PanelCtrl } from 'grafana/app/plugins/sdk';\nimport { triggerPanelOptionsTab } from './options_tab';\nimport { triggerPanelTriggersTab } from './triggers_tab';\nimport { migratePanelSchema, CURRENT_SCHEMA_VERSION } from './migrations';\nimport ProblemList from './components/Problems/Problems';\nimport AlertList from './components/AlertList/AlertList';\nimport { getNextRefIdChar } from './utils';\n\nconst ZABBIX_DS_ID = 'alexanderzobnin-zabbix-datasource';\nconst PROBLEM_EVENTS_LIMIT = 100;\n\nexport const DEFAULT_TARGET = {\n  group: {filter: \"\"},\n  host: {filter: \"\"},\n  application: {filter: \"\"},\n  trigger: {filter: \"\"},\n  tags: {filter: \"\"},\n  proxy: {filter: \"\"},\n};\n\nexport const getDefaultTarget = (targets) => {\n  return {\n    group: {filter: \"\"},\n    host: {filter: \"\"},\n    application: {filter: \"\"},\n    trigger: {filter: \"\"},\n    tags: {filter: \"\"},\n    proxy: {filter: \"\"},\n    refId: getNextRefIdChar(targets),\n  };\n};\n\nexport const DEFAULT_SEVERITY = [\n  { priority: 0, severity: 'Not classified',  color: 'rgb(108, 108, 108)', show: true},\n  { priority: 1, severity: 'Information',     color: 'rgb(120, 158, 183)', show: true},\n  { priority: 2, severity: 'Warning',         color: 'rgb(175, 180, 36)', show: true},\n  { priority: 3, severity: 'Average',         color: 'rgb(255, 137, 30)', show: true},\n  { priority: 4, severity: 'High',            color: 'rgb(255, 101, 72)', show: true},\n  { priority: 5, severity: 'Disaster',        color: 'rgb(215, 0, 0)', show: true},\n];\n\nexport const getDefaultSeverity = () => DEFAULT_SEVERITY;\n\nconst DEFAULT_TIME_FORMAT = \"DD MMM YYYY HH:mm:ss\";\n\nexport const PANEL_DEFAULTS = {\n  schemaVersion: CURRENT_SCHEMA_VERSION,\n  targets: [getDefaultTarget([])],\n  // Fields\n  hostField: true,\n  hostTechNameField: false,\n  hostGroups: false,\n  hostProxy: false,\n  showTags: true,\n  statusField: true,\n  statusIcon: false,\n  severityField: true,\n  ageField: false,\n  descriptionField: true,\n  descriptionAtNewLine: false,\n  // Options\n  hostsInMaintenance: true,\n  showTriggers: 'all triggers',\n  sortTriggersBy: { text: 'last change', value: 'lastchange' },\n  showEvents: { text: 'Problems', value: 1 },\n  limit: 100,\n  // View options\n  layout: 'table',\n  fontSize: '100%',\n  pageSize: 10,\n  problemTimeline: true,\n  highlightBackground: false,\n  highlightNewEvents: false,\n  highlightNewerThan: '1h',\n  customLastChangeFormat: false,\n  lastChangeFormat: \"\",\n  resizedColumns: [],\n  // Triggers severity and colors\n  triggerSeverity: getDefaultSeverity(),\n  okEventColor: 'rgb(56, 189, 113)',\n  ackEventColor: 'rgb(56, 219, 156)',\n  markAckEvents: false,\n};\n\nconst triggerStatusMap = {\n  '0': 'OK',\n  '1': 'PROBLEM'\n};\n\nexport class TriggerPanelCtrl extends PanelCtrl {\n\n  /** @ngInject */\n  constructor($scope, $injector, $timeout, datasourceSrv, templateSrv, contextSrv, dashboardSrv, timeSrv) {\n    super($scope, $injector);\n    this.datasourceSrv = datasourceSrv;\n    this.templateSrv = templateSrv;\n    this.contextSrv = contextSrv;\n    this.dashboardSrv = dashboardSrv;\n    this.timeSrv = timeSrv;\n    this.scope = $scope;\n    this.$timeout = $timeout;\n\n    this.editorTabIndex = 1;\n    this.triggerStatusMap = triggerStatusMap;\n    this.defaultTimeFormat = DEFAULT_TIME_FORMAT;\n    this.pageIndex = 0;\n    this.triggerList = [];\n    this.datasources = {};\n    this.range = {};\n\n    this.panel = migratePanelSchema(this.panel);\n    _.defaultsDeep(this.panel, _.cloneDeep(PANEL_DEFAULTS));\n\n    this.available_datasources = _.map(this.getZabbixDataSources(), 'name');\n    if (this.panel.targets && !this.panel.targets[0].datasource) {\n      this.panel.targets[0].datasource = this.available_datasources[0];\n    }\n\n    this.initDatasources();\n    this.events.on('init-edit-mode', this.onInitEditMode.bind(this));\n    this.events.on('refresh', this.onRefresh.bind(this));\n  }\n\n  setPanelError(err, defaultError) {\n    const defaultErrorMessage = defaultError || \"Request Error\";\n    this.inspector = { error: err };\n    this.error = err.message || defaultErrorMessage;\n    if (err.data) {\n      if (err.data.message) {\n        this.error = err.data.message;\n      }\n      if (err.data.error) {\n        this.error = err.data.error;\n      }\n    }\n\n    this.events.emit('data-error', err);\n    console.log('Panel data error:', err);\n  }\n\n  initDatasources() {\n    if (!this.panel.targets) {\n      return;\n    }\n    const targetDatasources = _.compact(this.panel.targets.map(target => target.datasource));\n    let promises = targetDatasources.map(ds => {\n      // Load datasource\n      return this.datasourceSrv.get(ds)\n      .then(datasource => {\n        this.datasources[ds] = datasource;\n        return datasource;\n      });\n    });\n    return Promise.all(promises);\n  }\n\n  getZabbixDataSources() {\n    return _.filter(this.datasourceSrv.getMetricSources(), datasource => {\n      return datasource.meta.id === ZABBIX_DS_ID && datasource.value;\n    });\n  }\n\n  isEmptyTargets() {\n    const emptyTargets = _.isEmpty(this.panel.targets);\n    const emptyTarget = (this.panel.targets.length === 1 && (\n      _.isEmpty(this.panel.targets[0]) ||\n      this.panel.targets[0].target === \"\"\n    ));\n    return emptyTargets || emptyTarget;\n  }\n\n  onInitEditMode() {\n    this.addEditorTab('Triggers', triggerPanelTriggersTab, 1);\n    this.addEditorTab('Options', triggerPanelOptionsTab, 2);\n  }\n\n  setTimeQueryStart() {\n    this.timing.queryStart = new Date().getTime();\n  }\n\n  setTimeQueryEnd() {\n    this.timing.queryEnd = (new Date()).getTime();\n  }\n\n  onRefresh() {\n    // ignore fetching data if another panel is in fullscreen\n    if (this.otherPanelInFullscreenMode()) { return; }\n\n    this.range = this.timeSrv.timeRange();\n\n    // clear loading/error state\n    delete this.error;\n    this.loading = true;\n    this.setTimeQueryStart();\n    this.pageIndex = 0;\n\n    return this.getTriggers()\n    .then(triggers => {\n      // Notify panel that request is finished\n      this.loading = false;\n      this.setTimeQueryEnd();\n      return this.renderTriggers(triggers);\n    })\n    .then(() => {\n      this.$timeout(() => {\n        this.renderingCompleted();\n      });\n    })\n    .catch(err => {\n      this.loading = false;\n\n      if (err.cancelled) {\n        console.log('Panel request cancelled', err);\n        return;\n      }\n\n      this.setPanelError(err);\n    });\n  }\n\n  renderTriggers(zabbixTriggers) {\n    let triggers = _.cloneDeep(zabbixTriggers || this.triggerListUnfiltered);\n    this.triggerListUnfiltered = _.cloneDeep(triggers);\n\n    triggers = _.map(triggers, this.formatTrigger.bind(this));\n    triggers = this.filterTriggersPost(triggers);\n    triggers = this.sortTriggers(triggers);\n\n    // Limit triggers number\n    triggers = triggers.slice(0, this.panel.limit || PANEL_DEFAULTS.limit);\n\n    this.triggerList = triggers;\n\n    return this.$timeout(() => {\n      return super.render(this.triggerList);\n    });\n  }\n\n  getTriggers() {\n    const timeFrom = Math.ceil(dateMath.parse(this.range.from) / 1000);\n    const timeTo = Math.ceil(dateMath.parse(this.range.to) / 1000);\n    const userIsEditor = this.contextSrv.isEditor || this.contextSrv.isGrafanaAdmin;\n\n    let promises = _.map(this.panel.targets, (target) => {\n      const ds = target.datasource;\n      let proxies;\n      let showAckButton = true;\n      return this.datasourceSrv.get(ds)\n      .then(datasource => {\n        const zabbix = datasource.zabbix;\n        const showEvents = this.panel.showEvents.value;\n        const triggerFilter = target;\n        const showProxy = this.panel.hostProxy;\n        const getProxiesPromise = showProxy ? zabbix.getProxies() : () => [];\n        showAckButton = !datasource.disableReadOnlyUsersAck || userIsEditor;\n\n        // Replace template variables\n        const groupFilter = datasource.replaceTemplateVars(triggerFilter.group.filter);\n        const hostFilter = datasource.replaceTemplateVars(triggerFilter.host.filter);\n        const appFilter = datasource.replaceTemplateVars(triggerFilter.application.filter);\n        const proxyFilter = datasource.replaceTemplateVars(triggerFilter.proxy.filter);\n\n        let triggersOptions = {\n          showTriggers: showEvents\n        };\n\n        if (showEvents !== 1) {\n          triggersOptions.timeFrom = timeFrom;\n          triggersOptions.timeTo = timeTo;\n        }\n\n        return Promise.all([\n          zabbix.getTriggers(groupFilter, hostFilter, appFilter, triggersOptions, proxyFilter),\n          getProxiesPromise\n        ]);\n      }).then(([triggers, sourceProxies]) => {\n        proxies = _.keyBy(sourceProxies, 'proxyid');\n        const eventids = _.compact(triggers.map(trigger => {\n          return trigger.lastEvent.eventid;\n        }));\n        return Promise.all([\n          this.datasources[ds].zabbix.getExtendedEventData(eventids),\n          Promise.resolve(triggers)\n        ]);\n      })\n      .then(([events, triggers]) => {\n        this.addEventTags(events, triggers);\n        this.addAcknowledges(events, triggers);\n        return triggers;\n      })\n      .then(triggers => this.setMaintenanceStatus(triggers))\n      .then(triggers => this.setAckButtonStatus(triggers, showAckButton))\n      .then(triggers => this.filterTriggersPre(triggers, target))\n      .then(triggers => this.addTriggerDataSource(triggers, target))\n      .then(triggers => this.addTriggerHostProxy(triggers, proxies));\n    });\n\n    return Promise.all(promises)\n    .then(results => _.flatten(results));\n  }\n\n  addAcknowledges(events, triggers) {\n    // Map events to triggers\n    _.each(triggers, trigger => {\n      var event = _.find(events, event => {\n        return event.eventid === trigger.lastEvent.eventid;\n      });\n\n      if (event) {\n        trigger.acknowledges = _.map(event.acknowledges, this.formatAcknowledge.bind(this));\n      }\n\n      if (!trigger.lastEvent.eventid) {\n        trigger.lastEvent = null;\n      }\n    });\n\n    return triggers;\n  }\n\n  formatAcknowledge(ack) {\n    let timestamp = moment.unix(ack.clock);\n    if (this.panel.customLastChangeFormat) {\n      ack.time = timestamp.format(this.panel.lastChangeFormat);\n    } else {\n      ack.time = timestamp.format(this.defaultTimeFormat);\n    }\n    ack.user = ack.alias || '';\n    if (ack.name || ack.surname) {\n      const fullName = `${ack.name || ''} ${ack.surname || ''}`;\n      ack.user += ` (${fullName})`;\n    }\n    return ack;\n  }\n\n  addEventTags(events, triggers) {\n    _.each(triggers, trigger => {\n      var event = _.find(events, event => {\n        return event.eventid === trigger.lastEvent.eventid;\n      });\n      if (event && event.tags && event.tags.length) {\n        trigger.tags = event.tags;\n      }\n    });\n    return triggers;\n  }\n\n  filterTriggersPre(triggerList, target) {\n    // Filter triggers by description\n    const ds = target.datasource;\n    let triggerFilter = target.trigger.filter;\n    triggerFilter = this.datasources[ds].replaceTemplateVars(triggerFilter);\n    if (triggerFilter) {\n      triggerList = filterTriggers(triggerList, triggerFilter);\n    }\n\n    // Filter by tags\n    // const target = this.panel.targets[ds];\n    if (target.tags.filter) {\n      let tagsFilter = this.datasources[ds].replaceTemplateVars(target.tags.filter);\n      // replaceTemplateVars() builds regex-like string, so we should trim it.\n      tagsFilter = tagsFilter.replace('/^', '').replace('$/', '');\n      const tags = this.parseTags(tagsFilter);\n      triggerList = _.filter(triggerList, trigger => {\n        return _.every(tags, (tag) => {\n          return _.find(trigger.tags, {tag: tag.tag, value: tag.value});\n        });\n      });\n    }\n\n    return triggerList;\n  }\n\n  filterTriggersPost(triggers) {\n    let triggerList = _.cloneDeep(triggers);\n\n    // Filter acknowledged triggers\n    if (this.panel.showTriggers === 'unacknowledged') {\n      triggerList = _.filter(triggerList, trigger => {\n        return !(trigger.acknowledges && trigger.acknowledges.length);\n      });\n    } else if (this.panel.showTriggers === 'acknowledged') {\n      triggerList = _.filter(triggerList, trigger => {\n        return trigger.acknowledges && trigger.acknowledges.length;\n      });\n    }\n\n    // Filter by maintenance status\n    if (!this.panel.hostsInMaintenance) {\n      triggerList = _.filter(triggerList, (trigger) => trigger.maintenance === false);\n    }\n\n    // Filter triggers by severity\n    triggerList = _.filter(triggerList, trigger => {\n      return this.panel.triggerSeverity[trigger.priority].show;\n    });\n\n    return triggerList;\n  }\n\n  setMaintenanceStatus(triggers) {\n    _.each(triggers, (trigger) => {\n      let maintenance_status = _.some(trigger.hosts, (host) => host.maintenance_status === '1');\n      trigger.maintenance = maintenance_status;\n    });\n    return triggers;\n  }\n\n  setAckButtonStatus(triggers, showAckButton) {\n    _.each(triggers, (trigger) => {\n      trigger.showAckButton = showAckButton;\n    });\n    return triggers;\n  }\n\n  addTriggerDataSource(triggers, target) {\n    _.each(triggers, (trigger) => {\n      trigger.datasource = target.datasource;\n    });\n    return triggers;\n  }\n\n  addTriggerHostProxy(triggers, proxies) {\n    triggers.forEach(trigger => {\n      if (trigger.hosts && trigger.hosts.length) {\n        let host = trigger.hosts[0];\n        if (host.proxy_hostid !== '0') {\n          const hostProxy = proxies[host.proxy_hostid];\n          host.proxy = hostProxy ? hostProxy.host : '';\n        }\n      }\n    });\n    return triggers;\n  }\n\n  sortTriggers(triggerList) {\n    if (this.panel.sortTriggersBy.value === 'priority') {\n      triggerList = _.orderBy(triggerList, ['priority', 'lastchangeUnix', 'triggerid'], ['desc', 'desc', 'desc']);\n    } else {\n      triggerList = _.orderBy(triggerList, ['lastchangeUnix', 'priority', 'triggerid'], ['desc', 'desc', 'desc']);\n    }\n    return triggerList;\n  }\n\n  formatTrigger(zabbixTrigger) {\n    let trigger = _.cloneDeep(zabbixTrigger);\n\n    // Set host and proxy that the trigger belongs\n    if (trigger.hosts && trigger.hosts.length) {\n      const host = trigger.hosts[0];\n      trigger.host = host.name;\n      trigger.hostTechName = host.host;\n      if (host.proxy) {\n        trigger.proxy = host.proxy;\n      }\n    }\n\n    // Set tags if present\n    if (trigger.tags && trigger.tags.length === 0) {\n      trigger.tags = null;\n    }\n\n    // Handle multi-line description\n    if (trigger.comments) {\n      trigger.comments = trigger.comments.replace('\\n', '<br>');\n    }\n\n    trigger.lastchangeUnix = Number(trigger.lastchange);\n    return trigger;\n  }\n\n  parseTags(tagStr) {\n    if (!tagStr) {\n      return [];\n    }\n\n    let tags = _.map(tagStr.split(','), (tag) => tag.trim());\n    tags = _.map(tags, (tag) => {\n      const tagParts = tag.split(':');\n      return {tag: tagParts[0].trim(), value: tagParts[1].trim()};\n    });\n    return tags;\n  }\n\n  tagsToString(tags) {\n    return _.map(tags, (tag) => `${tag.tag}:${tag.value}`).join(', ');\n  }\n\n  addTagFilter(tag, datasource) {\n    const target = this.panel.targets.find(t => t.datasource === datasource);\n    console.log(target);\n    let tagFilter = target.tags.filter;\n    let targetTags = this.parseTags(tagFilter);\n    let newTag = {tag: tag.tag, value: tag.value};\n    targetTags.push(newTag);\n    targetTags = _.uniqWith(targetTags, _.isEqual);\n    let newFilter = this.tagsToString(targetTags);\n    target.tags.filter = newFilter;\n    this.refresh();\n  }\n\n  removeTagFilter(tag, datasource) {\n    const target = this.panel.targets.find(t => t.datasource === datasource);\n    let tagFilter = target.tags.filter;\n    let targetTags = this.parseTags(tagFilter);\n    _.remove(targetTags, t => t.tag === tag.tag && t.value === tag.value);\n    targetTags = _.uniqWith(targetTags, _.isEqual);\n    let newFilter = this.tagsToString(targetTags);\n    target.tags.filter = newFilter;\n    this.refresh();\n  }\n\n  getProblemEvents(problem) {\n    const triggerids = [problem.triggerid];\n    const timeFrom = Math.ceil(dateMath.parse(this.range.from) / 1000);\n    const timeTo = Math.ceil(dateMath.parse(this.range.to) / 1000);\n    return this.datasourceSrv.get(problem.datasource)\n    .then(datasource => {\n      return datasource.zabbix.getEvents(triggerids, timeFrom, timeTo, [0, 1], PROBLEM_EVENTS_LIMIT);\n    });\n  }\n\n  getProblemAlerts(problem) {\n    if (!problem.lastEvent || problem.lastEvent.length === 0) {\n      return Promise.resolve([]);\n    }\n    const eventids = [problem.lastEvent.eventid];\n    return this.datasourceSrv.get(problem.datasource)\n    .then(datasource => {\n      return datasource.zabbix.getEventAlerts(eventids);\n    });\n  }\n\n  formatHostName(trigger) {\n    let host = \"\";\n    if (this.panel.hostField && this.panel.hostTechNameField) {\n      host = `${trigger.host} (${trigger.hostTechName})`;\n    } else if (this.panel.hostField || this.panel.hostTechNameField) {\n      host = this.panel.hostField ? trigger.host : trigger.hostTechName;\n    }\n    if (this.panel.hostProxy && trigger.proxy) {\n      host = `${trigger.proxy}: ${host}`;\n    }\n\n    return host;\n  }\n\n  formatHostGroups(trigger) {\n    let groupNames = \"\";\n    if (this.panel.hostGroups) {\n      let groups = _.map(trigger.groups, 'name').join(', ');\n      groupNames += `[ ${groups} ]`;\n    }\n\n    return groupNames;\n  }\n\n  isNewTrigger(trigger) {\n    try {\n      const highlightIntervalMs = utils.parseInterval(this.panel.highlightNewerThan || PANEL_DEFAULTS.highlightNewerThan);\n      const durationSec = (Date.now() - trigger.lastchangeUnix * 1000);\n      return durationSec < highlightIntervalMs;\n    } catch (e) {\n      return false;\n    }\n  }\n\n  getAlertIconClass(trigger) {\n    let iconClass = '';\n    if (trigger.value === '1' && trigger.priority >= 2) {\n      iconClass = 'icon-gf-critical';\n    } else {\n      iconClass = 'icon-gf-online';\n    }\n\n    if (this.panel.highlightNewEvents && this.isNewTrigger(trigger)) {\n      iconClass += ' zabbix-trigger--blinked';\n    }\n    return iconClass;\n  }\n\n  getAlertIconClassBySeverity(triggerSeverity) {\n    let iconClass = 'icon-gf-online';\n    if (triggerSeverity.priority >= 2) {\n      iconClass = 'icon-gf-critical';\n    }\n    return iconClass;\n  }\n\n  getAlertStateClass(trigger) {\n    let statusClass = '';\n\n    if (trigger.value === '1') {\n      statusClass = 'alert-state-critical';\n    } else {\n      statusClass = 'alert-state-ok';\n    }\n\n    if (this.panel.highlightNewEvents && this.isNewTrigger(trigger)) {\n      statusClass += ' zabbix-trigger--blinked';\n    }\n\n    return statusClass;\n  }\n\n  resetResizedColumns() {\n    this.panel.resizedColumns = [];\n    this.render();\n  }\n\n  acknowledgeTrigger(trigger, message) {\n    let eventid = trigger.lastEvent ? trigger.lastEvent.eventid : null;\n    let grafana_user = this.contextSrv.user.name;\n    let ack_message = grafana_user + ' (Grafana): ' + message;\n    return this.datasourceSrv.get(trigger.datasource)\n    .then(datasource => {\n      const userIsEditor = this.contextSrv.isEditor || this.contextSrv.isGrafanaAdmin;\n      if (datasource.disableReadOnlyUsersAck && !userIsEditor) {\n        return Promise.reject({message: 'You have no permissions to acknowledge events.'});\n      }\n      if (eventid) {\n        return datasource.zabbix.acknowledgeEvent(eventid, ack_message);\n      } else {\n        return Promise.reject({message: 'Trigger has no events. Nothing to acknowledge.'});\n      }\n    })\n    .then(this.onRefresh.bind(this))\n    .catch((err) => {\n      this.setPanelError(err);\n    });\n  }\n\n  handlePageSizeChange(pageSize, pageIndex) {\n    this.panel.pageSize = pageSize;\n    this.pageIndex = pageIndex;\n    this.scope.$apply(() => {\n      this.render();\n    });\n  }\n\n  handleColumnResize(newResized) {\n    this.panel.resizedColumns = newResized;\n    this.scope.$apply(() => {\n      this.render();\n    });\n  }\n\n  link(scope, elem, attrs, ctrl) {\n    let panel = ctrl.panel;\n    let triggerList = ctrl.triggerList;\n\n    scope.$watchGroup(['ctrl.triggerList'], renderPanel);\n    ctrl.events.on('render', (renderData) => {\n      triggerList = renderData || triggerList;\n      renderPanel();\n    });\n\n    function renderPanel() {\n      const timeFrom = Math.ceil(dateMath.parse(ctrl.range.from) / 1000);\n      const timeTo = Math.ceil(dateMath.parse(ctrl.range.to) / 1000);\n\n      const fontSize = parseInt(panel.fontSize.slice(0, panel.fontSize.length - 1));\n      const fontSizeProp = fontSize && fontSize !== 100 ? fontSize : null;\n\n      const pageSize = panel.pageSize || 10;\n      const loading = ctrl.loading && (!ctrl.triggerList || !ctrl.triggerList.length);\n\n      let panelOptions = {};\n      for (let prop in PANEL_DEFAULTS) {\n        panelOptions[prop] = ctrl.panel[prop];\n      }\n      const problemsListProps = {\n        problems: ctrl.triggerList,\n        panelOptions,\n        timeRange: { timeFrom, timeTo },\n        loading,\n        pageSize,\n        fontSize: fontSizeProp,\n        getProblemEvents: ctrl.getProblemEvents.bind(ctrl),\n        getProblemAlerts: ctrl.getProblemAlerts.bind(ctrl),\n        onPageSizeChange: ctrl.handlePageSizeChange.bind(ctrl),\n        onColumnResize: ctrl.handleColumnResize.bind(ctrl),\n        onProblemAck: (trigger, data) => {\n          const message = data.message;\n          return ctrl.acknowledgeTrigger(trigger, message);\n        },\n        onTagClick: (tag, datasource, ctrlKey, shiftKey) => {\n          if (ctrlKey || shiftKey) {\n            ctrl.removeTagFilter(tag, datasource);\n          } else {\n            ctrl.addTagFilter(tag, datasource);\n          }\n        }\n      };\n\n      let problemsReactElem;\n      if (panel.layout === 'list') {\n        problemsReactElem = React.createElement(AlertList, problemsListProps);\n      } else {\n        problemsReactElem = React.createElement(ProblemList, problemsListProps);\n      }\n      ReactDOM.render(problemsReactElem, elem.find('.panel-content')[0]);\n    }\n  }\n}\n\nTriggerPanelCtrl.templateUrl = 'public/plugins/alexanderzobnin-zabbix-app/panel-triggers/partials/module.html';\n\nfunction filterTriggers(triggers, triggerFilter) {\n  if (utils.isRegex(triggerFilter)) {\n    return _.filter(triggers, function(trigger) {\n      return utils.buildRegex(triggerFilter).test(trigger.description);\n    });\n  } else {\n    return _.filter(triggers, function(trigger) {\n      return trigger.description === triggerFilter;\n    });\n  }\n}\n","import angular from 'angular';\nimport _ from 'lodash';\n\nconst template = `\n<value-select-dropdown\n  variable=\"ctrl.dsOptions\"\n  on-updated=\"ctrl.onChange(ctrl.dsOptions)\"\n  dashboard=\"ctrl.dashboard\">\n</value-select-dropdown>\n`;\n\nangular\n.module('grafana.directives')\n.directive('datasourceSelector', () => {\n  return {\n    scope: {\n      datasources: \"=\",\n      options: \"=\",\n      onChange: \"&\"\n    },\n    controller: DatasourceSelectorCtrl,\n    controllerAs: 'ctrl',\n    template: template\n  };\n});\n\nclass DatasourceSelectorCtrl {\n\n  /** @ngInject */\n  constructor($scope) {\n    this.scope = $scope;\n    let datasources = $scope.datasources;\n    let options = $scope.options;\n    this.dsOptions = {\n      multi: true,\n      current: {value: datasources, text: datasources.join(\" + \")},\n      options: _.map(options, (ds) => {\n        return {text: ds, value: ds, selected: _.includes(datasources, ds)};\n      })\n    };\n    // Fix for Grafana 6.0\n    // https://github.com/grafana/grafana/blob/v6.0.0/public/app/core/directives/value_select_dropdown.ts#L291\n    this.dashboard = {\n      on: () => {}\n    };\n  }\n\n  onChange(updatedOptions) {\n    let newDataSources = updatedOptions.current.value;\n    this.scope.datasources = newDataSources;\n\n    // Run after model was changed\n    this.scope.$$postDigest(() => {\n      this.scope.onChange();\n    });\n  }\n}\n","/**\n * Grafana-Zabbix\n * Zabbix plugin for Grafana.\n * http://github.com/alexanderzobnin/grafana-zabbix\n *\n * Trigger panel.\n * This feature sponsored by CORE IT\n * http://www.coreit.fr\n *\n * Copyright 2015 Alexander Zobnin alexanderzobnin@gmail.com\n * Licensed under the Apache License, Version 2.0\n */\n\nimport {TriggerPanelCtrl} from './triggers_panel_ctrl';\nimport {loadPluginCss} from 'grafana/app/plugins/sdk';\nimport './datasource-selector.directive';\n\nloadPluginCss({\n  dark: 'plugins/alexanderzobnin-zabbix-app/css/grafana-zabbix.dark.css',\n  light: 'plugins/alexanderzobnin-zabbix-app/css/grafana-zabbix.light.css'\n});\n\nexport {\n  TriggerPanelCtrl as PanelCtrl\n};\n"],"sourceRoot":""}